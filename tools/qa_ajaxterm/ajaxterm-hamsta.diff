diff -ruN Ajaxterm-0.10.orig//ajaxterm.html Ajaxterm-0.10//ajaxterm.html
--- Ajaxterm-0.10.orig//ajaxterm.html	2006-10-28 20:52:39.000000000 -0600
+++ Ajaxterm-0.10//ajaxterm.html	2010-04-14 11:40:52.000000000 -0600
@@ -14,6 +14,53 @@
 	</script>
 </head>
 <body>
-<div id="term"></div>
+
+
+<table>
+<tr>
+<td><div id="term"></div></td>
+<td valign="top">
+<table><tr><td>
+<form name="counter"><input type="text" size="5" 
+name="d2"></form> 
+<script> 
+<!-- 
+// 
+ var seconds=0 
+ var minutes=15
+ var dmin=0
+ var dsec=0
+ document.counter.d2.value=minutes 
+
+function display(){ 
+ if (seconds<=0){
+   seconds=59
+   minutes-=1
+ }
+ seconds-=1 
+
+ if (minutes>=0 && seconds>=0){ 
+	dmin=minutes
+	dsec=seconds
+	if(minutes<10){
+	 dmin = "0"+minutes
+	}
+	if(seconds<10){
+	 dsec = "0"+seconds
+	}
+ 	document.counter.d2.value=dmin+":"+dsec 
+	document.title=dmin+":"+dsec	
+	setTimeout("display()",1000) 
+ }
+} 
+display() 
+--> 
+</script> 
+</td>
+</tr>
+<tr><td>Be warned that this session will time <br/>out after 15 minutes!!!</td></tr>
+</table>
+</td>
+</table>
 </body>
 </html>
diff -ruN Ajaxterm-0.10.orig//ajaxterm.py Ajaxterm-0.10//ajaxterm.py
--- Ajaxterm-0.10.orig//ajaxterm.py	2006-10-28 20:52:39.000000000 -0600
+++ Ajaxterm-0.10//ajaxterm.py	2010-04-13 17:45:18.000000000 -0600
@@ -374,11 +374,17 @@
 		self.lock=threading.RLock()
 		self.thread=threading.Thread(target=self.loop)
 		self.alive=1
+		# time out after 15min
+		self.stoptime = time.time() + (15*60)
 		# synchronize methods
 		for name in ['create','fds','proc_read','proc_write','dump','die','run']:
 			orig=getattr(self,name)
 			setattr(self,name,SynchronizedMethod(self.lock,orig))
 		self.thread.start()
+
+	def setcmd(self, cmd):
+		self.cmd=cmd
+
 	def create(self,w=80,h=25):
 		pid,fd=pty.fork()
 		if pid==0:
@@ -465,6 +471,10 @@
 				self.proc_read(fd)
 			if len(i):
 				time.sleep(0.002)
+
+			if self.stoptime < time.time():
+				self.die()
+
 		for i in self.proc.keys():
 			try:
 				os.close(i)
@@ -481,10 +491,23 @@
 		self.files['index']=file(index_file).read()
 		self.mime = mimetypes.types_map.copy()
 		self.mime['.html']= 'text/html; charset=UTF-8'
-		self.multi = Multiplex(cmd)
+		self.multi = {} 
 		self.session = {}
+		self.cmd = cmd
+		self.host = None
 	def __call__(self, environ, start_response):
 		req = qweb.QWebRequest(environ, start_response,session=None)
+		keys = {}
+		print(req.FULL_URL)
+		ign, sep, query = req.FULL_URL.partition('?')
+		try:
+			keys = dict( item.split("=") for item in query.split("&"))
+		except ValueError:
+			pass
+		
+		if 'host' in keys.keys():
+			self.host = keys['host']
+		
 		if req.PATH_INFO.endswith('/u'):
 			s=req.REQUEST["s"]
 			k=req.REQUEST["k"]
@@ -496,11 +519,18 @@
 			else:
 				if not (w>2 and w<256 and h>2 and h<100):
 					w,h=80,25
-				term=self.session[s]=self.multi.create(w,h)
+				self.multi[s] = Multiplex(self.cmd)
+		
+				if self.host:
+					self.multi[s].setcmd("ssh -t root@" + self.host + " screen -d -RR hamsta")
+					self.host = None
+ 
+				term=self.session[s]=self.multi[s].create(w,h)
 			if k:
-				self.multi.proc_write(term,k)
+				if self.multi[s].run():
+					self.multi[s].proc_write(term,k)
 			time.sleep(0.002)
-			dump=self.multi.dump(term,c)
+			dump=self.multi[s].dump(term,c)
 			req.response_headers['Content-Type']='text/xml'
 			if isinstance(dump,str):
 				req.write(dump)
@@ -560,7 +590,8 @@
 		qweb.QWebWSGIServer(at,ip='localhost',port=int(o.port),threaded=0,log=o.log).serve_forever()
 	except KeyboardInterrupt,e:
 		sys.excepthook(*sys.exc_info())
-	at.multi.die()
+	for key, value in at.multi.items():
+		value.die()
 
 if __name__ == '__main__':
 	main()
diff -ruN Ajaxterm-0.10.orig//sarissa.js Ajaxterm-0.10//sarissa.js
--- Ajaxterm-0.10.orig//sarissa.js 2010-09-19 14:58:20.000000000 +0800
+++ Ajaxterm-0.10//sarissa.js 2010-09-19 14:56:45.000000000 +0800
@@ -265,7 +265,13 @@
             * <li>3 == INTERACTIVE,</li>
             * <li>4 == COMPLETED</li></ul>
             */
-            XMLDocument.prototype.readyState = 0;
+            try {
+                XMLDocument.prototype.readyState = 0;
+            } catch(e) {
+                // XXX on some browsers (Firefox 3.6 at least) this fails,
+                // however I think this is rarely a problem so we just
+                // ignore it here...
+            };
             /**
             * <p>Emulate IE's parseError attribute</p>
             */
