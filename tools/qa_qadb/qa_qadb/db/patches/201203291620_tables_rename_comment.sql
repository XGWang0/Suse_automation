RENAME TABLE architectures TO arch, bench_parts TO bench_part, bench_suites TO bench_suite, hosts TO host, kernel_branches TO kernel_branch, kernel_flavors TO kernel_flavor, products TO product, releases TO `release`, released_rpms TO released_rpm, results TO result, rpms TO rpm, rpms_view TO rpm_view, rpm_basenames TO rpm_basename, rpmConfig TO rpm_config, rpm_versions TO rpm_version, script_versions TO script_version, softwareConfig TO software_config, submissions TO submission, submissions_view TO submission_view, testcases TO testcase, testers TO tester, tests TO test, testsuites TO testsuite, waiver_data TO waiver;

ALTER TABLE arch comment='Enumerates known architectures';
ALTER TABLE `bench_data` COMMENT='Used for benchmark results, stores one benchmark number per row.';
ALTER TABLE `bench_part` COMMENT='Stores different benchmark parts and their names.';
ALTER TABLE `board` COMMENT='Bulletin board for QADB frontend';
ALTER TABLE `board_last` COMMENT='Users last visit of the board, to notify them about new messages';
ALTER TABLE `kernel_branch` COMMENT='Enumerates used kernel branches.';
ALTER TABLE `kotd_testing` COMMENT='Every KOTD submission has its details here.';
ALTER TABLE `maintenance_testing` COMMENT='Every maintainence testing submission has its details here.';
ALTER TABLE `product_testing` COMMENT='Every product testing submission has its details here.';
ALTER TABLE `product` COMMENT='Enumerates know products.';
ALTER TABLE `released_rpm` COMMENT='Used to list relevant RPMs for maintainence testing.';
ALTER TABLE `release` COMMENT='Enumerates known releases.';
ALTER TABLE `rpm_basename` COMMENT='Stores base RPM names.';
ALTER TABLE `rpm_version` COMMENT='Stores RPM versions.';
ALTER TABLE `rpm` COMMENT='Makes a combination of RPM name and version.';
ALTER TABLE `rpm_config` COMMENT='Stores MD5 sums of configurations. A configuration is alphabetically sorted, space-separated list of entries in form of &lt;basename&gt;-&lt;version&gt;';
ALTER TABLE `software_config` COMMENT='Lists all RPMs and their versions that were installed during a test.';
ALTER TABLE `submission` COMMENT='Every submissions has its row here.';
ALTER TABLE `tcf_group` COMMENT='Every run of a testsuite has its row here.';
ALTER TABLE `testcase` COMMENT='Enumerates known testcases.';
ALTER TABLE `result` COMMENT='Every run of a subtest has its row here, to store its results.';
ALTER TABLE `test` COMMENT='This is a statistics table with generated contents. Shows what testcases appear in what testsuites, and if they contain benchmark data.';
ALTER TABLE `testsuite` COMMENT='Enumerates known testsuites.';
ALTER TABLE `waiver` COMMENT='Lists waiver testcase occurences.';
ALTER TABLE `waiver_testcase` COMMENT='Lists waiver testcases.';
ALTER TABLE `board` COMMENT='This table holds topics from the QADB bulletin board.';
ALTER TABLE `host` COMMENT='This table enumerates the computers that were used as test hosts.';
ALTER TABLE `hwinfo` COMMENT='This table lists bzipped hwinfo. &lt;br/&gt; Lines with IRQ stats are removed, so that the hwinfo is the same for the same machine and product.';
ALTER TABLE `script_version` COMMENT='This table holds info about oldest allowed and newest available versions of different scripts. The scripts can do online checks using <a href="versions.php">version.php</a> .';
ALTER TABLE `table_desc` COMMENT='Describes tables in the current database. The info is added into the generated table description.';
ALTER TABLE `tester` COMMENT='Enumerates users that ran tests.';

ALTER TABLE bench_data DROP FOREIGN KEY fk_bench_data_partID_bench_parts_partID;
ALTER TABLE bench_data DROP FOREIGN KEY fk_bench_data_resultsID_results_resultsID;
ALTER TABLE board DROP FOREIGN KEY fk_board_created_by_testers_testerID;
ALTER TABLE board DROP FOREIGN KEY fk_board_updated_by_testers_testerID;
ALTER TABLE board_last DROP FOREIGN KEY fk_board_last_testerID_testers_testerID;
ALTER TABLE kotd_testing DROP FOREIGN KEY fk_kotd_testing_branchID_kernel_branches_branchID;
ALTER TABLE kotd_testing DROP FOREIGN KEY fk_kotd_testing_kernel_flavors;
ALTER TABLE kotd_testing DROP FOREIGN KEY fk_kotd_testing_submissionID_submissions_submissionID;
ALTER TABLE maintenance_testing DROP FOREIGN KEY fk_maintenance_testing_submissionID_submissions_submissionID;
ALTER TABLE product_testing DROP FOREIGN KEY fk_product_testing_submissionID_submissions_submissionID;
ALTER TABLE released_rpm DROP FOREIGN KEY fk_released_rpms_basenameID_rpm_basenames_basenameID;
ALTER TABLE released_rpm DROP FOREIGN KEY fk_released_rpms_submissionID_submissions_submissionID;
ALTER TABLE released_rpm DROP FOREIGN KEY fk_released_rpms_versionID_rpm_versions_versionID;
ALTER TABLE result DROP FOREIGN KEY fk_results_tcfID_tcf_group_tcfID;
ALTER TABLE result DROP FOREIGN KEY fk_results_testcaseID_testcases_testcaseID;
ALTER TABLE rpm DROP FOREIGN KEY fk_rpms_basenameID_rpm_basenames_basenameID;
ALTER TABLE rpm DROP FOREIGN KEY fk_rpms_versionID_rpm_versions_versionID;
ALTER TABLE software_config DROP FOREIGN KEY fk_softwareConfig_configID_rpmConfig_configID;
ALTER TABLE software_config DROP FOREIGN KEY fk_softwareConfig_rpmID_rpms_rpmID;
ALTER TABLE submission DROP FOREIGN KEY fk_submissions_archID_architectures_archID;
ALTER TABLE submission DROP FOREIGN KEY fk_submissions_configID_rpmConfig_configID;
ALTER TABLE submission DROP FOREIGN KEY fk_submissions_hostID_hosts_hostID;
ALTER TABLE submission DROP FOREIGN KEY fk_submissions_hwinfoID_hwinfo_hwinfoID;
ALTER TABLE submission DROP FOREIGN KEY fk_submissions_productID_products_productID;
ALTER TABLE submission DROP FOREIGN KEY fk_submissions_related_submissions_submissionID;
ALTER TABLE submission DROP FOREIGN KEY fk_submissions_releaseID_releases_releaseID;
ALTER TABLE submission DROP FOREIGN KEY fk_submissions_testerID_testers_testerID;
ALTER TABLE tcf_group DROP FOREIGN KEY fk_tcf_group_submissionID_submissions_submissionID;
ALTER TABLE tcf_group DROP FOREIGN KEY fk_tcf_group_testsuiteID_testsuites_testsuiteID;
ALTER TABLE test DROP FOREIGN KEY fk_tests_testcaseID_testcases_testcaseID;
ALTER TABLE test DROP FOREIGN KEY fk_tests_testsuiteID_testsuites_testsuiteID;
ALTER TABLE waiver DROP FOREIGN KEY fk_waiver_data_testcaseID_testcases_testcaseID;
ALTER TABLE waiver_testcase DROP FOREIGN KEY fk_waiver_testcase_archID_architectures_archID;
ALTER TABLE waiver_testcase DROP FOREIGN KEY fk_waiver_testcase_productID_products_productID;
ALTER TABLE waiver_testcase DROP FOREIGN KEY fk_waiver_testcase_releaseID_releases_releaseID;
ALTER TABLE waiver_testcase DROP FOREIGN KEY fk_waiver_testcase_waiverID_waiver_data_waiverID;


ALTER TABLE arch CHANGE archID arch_id INT NOT NULL AUTO_INCREMENT;
ALTER TABLE bench_data CHANGE partID bench_part_id INT NOT NULL COMMENT 'benchmark key for this number', CHANGE resultsID result_id INT NOT NULL COMMENT 'result run of this benchmark number';
ALTER TABLE bench_part CHANGE partID bench_part_id INT NOT NULL AUTO_INCREMENT, CHANGE part bench_part VARCHAR(1000) NOT NULL DEFAULT '' COMMENT 'benchmark number cathegory, set of semicolon-separated key=val pairs, last part is units; see manual for more details';
ALTER TABLE board CHANGE boardID board_id INT NOT NULL AUTO_INCREMENT;
ALTER TABLE board_last CHANGE testerID tester_id INT NOT NULL;
ALTER TABLE host CHANGE hostID host_id INT NOT NULL AUTO_INCREMENT;
ALTER TABLE hwinfo CHANGE hwinfoID hwinfo_id INT NOT NULL AUTO_INCREMENT;
ALTER TABLE kernel_branch CHANGE branchID kernel_branch_id INT NOT NULL AUTO_INCREMENT, CHANGE branch kernel_branch VARCHAR(32) NOT NULL;
ALTER TABLE kernel_flavor CHANGE flavorID kernel_flavor_id INT NOT NULL AUTO_INCREMENT, CHANGE flavor kernel_flavor VARCHAR(64) NOT NULL DEFAULT '';
ALTER TABLE kotd_testing CHANGE kotdID kotd_testing_id INT NOT NULL AUTO_INCREMENT, CHANGE submissionID submission_id INT NOT NULL, CHANGE branchID kernel_branch_id INT NOT NULL, CHANGE flavorID kernel_flavor_id INT;
ALTER TABLE maintenance_testing CHANGE maintID maintenance_testing_id INT NOT NULL AUTO_INCREMENT, CHANGE patchID patch_id VARCHAR(50) NOT NULL COMMENT 'Patch number', CHANGE submissionID submission_id INT NOT NULL;
ALTER TABLE product_testing CHANGE prodtestID product_testing_id INT NOT NULL AUTO_INCREMENT, CHANGE submissionID submission_id INT NOT NULL;
ALTER TABLE product CHANGE productID product_id INT NOT NULL AUTO_INCREMENT;
ALTER TABLE released_rpm CHANGE releasedrpmID released_rpm_id INT NOT NULL AUTO_INCREMENT, CHANGE basenameID rpm_basename_id INT NOT NULL, CHANGE versionID rpm_version_id INT, CHANGE submissionID submission_id INT NOT NULL;
ALTER TABLE `release` CHANGE releaseID release_id INT NOT NULL AUTO_INCREMENT;
ALTER TABLE result CHANGE resultsID result_id INT NOT NULL AUTO_INCREMENT, CHANGE testcaseID testcase_id INT NOT NULL, CHANGE tcfID tcf_id INT NOT NULL;
ALTER TABLE rpm_config CHANGE configID rpm_config_id INT NOT NULL AUTO_INCREMENT;
ALTER TABLE rpm_basename CHANGE basenameID rpm_basename_id INT NOT NULL AUTO_INCREMENT, CHANGE basename rpm_basename VARCHAR(50) NOT NULL;
ALTER TABLE rpm_version CHANGE versionID rpm_version_id INT NOT NULL AUTO_INCREMENT, CHANGE version rpm_version VARCHAR(150) NOT NULL;
ALTER TABLE rpm CHANGE rpmID rpm_id INT NOT NULL AUTO_INCREMENT, CHANGE basenameID rpm_basename_id INT NOT NULL, CHANGE versionID rpm_version_id INT NOT NULL;
ALTER TABLE script_version CHANGE versionID script_version_id INT NOT NULL AUTO_INCREMENT;
ALTER TABLE software_config CHANGE configID rpm_config_id INT NOT NULL, CHANGE rpmID rpm_id INT NOT NULL;
ALTER TABLE submission CHANGE submissionID submission_id INT NOT NULL AUTO_INCREMENT, CHANGE archID arch_id INT NOT NULL, CHANGE productID product_id INT NOT NULL, CHANGE releaseID release_id INT NOT NULL, CHANGE hostID host_id INT NOT NULL, CHANGE hwinfoID hwinfo_id INT NULL, CHANGE testerID tester_id INT NOT NULL, CHANGE configID rpm_config_id INT NULL;
ALTER TABLE tcf_group CHANGE tcfID tcf_id INT NOT NULL AUTO_INCREMENT, CHANGE testsuiteID testsuite_id INT NOT NULL, CHANGE submissionID submission_id INT NOT NULL, CHANGE logs_url log_url VARCHAR(250);
ALTER TABLE testcase CHANGE testcaseID testcase_id INT NOT NULL AUTO_INCREMENT;
ALTER TABLE tester CHANGE testerID tester_id INT NOT NULL AUTO_INCREMENT;
ALTER TABLE test CHANGE testsuiteID testsuite_id INT NOT NULL, CHANGE testcaseID testcase_id INT NOT NULL;
ALTER TABLE testsuite CHANGE testsuiteID testsuite_id INT NOT NULL AUTO_INCREMENT;
ALTER TABLE waiver CHANGE waiverID waiver_id INT NOT NULL AUTO_INCREMENT, CHANGE bugID bug_id INT, CHANGE testcaseID testcase_id INT NOT NULL;
ALTER TABLE waiver_testcase CHANGE waiver_tcID waiver_testcase_id INT NOT NULL AUTO_INCREMENT, CHANGE waiverID waiver_id INT NOT NULL, CHANGE productID product_id INT NOT NULL, CHANGE releaseID release_id INT NOT NULL, CHANGE archID arch_id INT;


ALTER TABLE bench_data ADD CONSTRAINT fk_bench_data_bench_part FOREIGN KEY (`bench_part_id`) REFERENCES `bench_part` (`bench_part_id`);
ALTER TABLE bench_data ADD CONSTRAINT fk_bench_data_result FOREIGN KEY (`result_id`) REFERENCES `result` (`result_id`) ON DELETE CASCADE;
ALTER TABLE board ADD CONSTRAINT fk_board_tester_created FOREIGN KEY (`created_by`) REFERENCES `tester` (`tester_id`);
ALTER TABLE board ADD CONSTRAINT fk_board_tester_updated FOREIGN KEY (`updated_by`) REFERENCES `tester` (`tester_id`);
ALTER TABLE board_last ADD CONSTRAINT fk_board_last_tester FOREIGN KEY (`tester_id`) REFERENCES `tester` (`tester_id`) ON DELETE CASCADE;
ALTER TABLE kotd_testing ADD CONSTRAINT fk_kotd_testing_kernel_branch FOREIGN KEY (`kernel_branch_id`) REFERENCES `kernel_branch` (`kernel_branch_id`);
ALTER TABLE kotd_testing ADD CONSTRAINT fk_kotd_testing_kernel_flavor FOREIGN KEY (`kernel_flavor_id`) REFERENCES `kernel_flavor` (`kernel_flavor_id`);
ALTER TABLE kotd_testing ADD CONSTRAINT fk_kotd_testing_submission FOREIGN KEY (`submission_id`) REFERENCES `submission` (`submission_id`) ON DELETE CASCADE;
ALTER TABLE maintenance_testing ADD CONSTRAINT fk_maintenance_testing_submission FOREIGN KEY (`submission_id`) REFERENCES `submission` (`submission_id`) ON DELETE CASCADE;
ALTER TABLE product_testing ADD CONSTRAINT fk_product_testing_submission FOREIGN KEY (`submission_id`) REFERENCES `submission` (`submission_id`) ON DELETE CASCADE;
ALTER TABLE released_rpm ADD CONSTRAINT fk_released_rpm_rpm_basename FOREIGN KEY (`rpm_basename_id`) REFERENCES `rpm_basename` (`rpm_basename_id`);
ALTER TABLE released_rpm ADD CONSTRAINT fk_released_rpm_submission FOREIGN KEY (`submission_id`) REFERENCES `submission` (`submission_id`) ON DELETE CASCADE;
ALTER TABLE released_rpm ADD CONSTRAINT fk_released_rpm_rpm_version FOREIGN KEY (`rpm_version_id`) REFERENCES `rpm_version` (`rpm_version_id`);
ALTER TABLE result ADD CONSTRAINT fk_result_tcf_group FOREIGN KEY (`tcf_id`) REFERENCES `tcf_group` (`tcf_id`) ON DELETE CASCADE;
ALTER TABLE result ADD CONSTRAINT fk_result_testcase FOREIGN KEY (`testcase_id`) REFERENCES `testcase` (`testcase_id`);
ALTER TABLE rpm ADD CONSTRAINT fk_rpm_rpm_basename FOREIGN KEY (`rpm_basename_id`) REFERENCES `rpm_basename` (`rpm_basename_id`);
ALTER TABLE rpm ADD CONSTRAINT fk_rpm_rpm_version FOREIGN KEY (`rpm_version_id`) REFERENCES `rpm_version` (`rpm_version_id`);
ALTER TABLE software_config ADD CONSTRAINT fk_software_config_rpm_config FOREIGN KEY (`rpm_config_id`) REFERENCES `rpm_config` (`rpm_config_id`) ON DELETE CASCADE;
ALTER TABLE software_config ADD CONSTRAINT fk_software_config_rpm FOREIGN KEY (`rpm_id`) REFERENCES `rpm` (`rpm_id`) ON DELETE CASCADE;
ALTER TABLE submission ADD CONSTRAINT fk_submission_arch FOREIGN KEY (`arch_id`) REFERENCES `arch` (`arch_id`);
-- UPDATE submission SET rpm_config_id=NULL WHERE rpm_config_id=0;
ALTER TABLE submission ADD CONSTRAINT fk_submission_rpm_config FOREIGN KEY (`rpm_config_id`) REFERENCES `rpm_config` (`rpm_config_id`);
ALTER TABLE submission ADD CONSTRAINT fk_submission_host FOREIGN KEY (`host_id`) REFERENCES `host` (`host_id`);
-- UPDATE submission SET hwinfo_id=NULL WHERE hwinfo_id=0;
ALTER TABLE submission ADD CONSTRAINT fk_submission_hwinfo FOREIGN KEY (`hwinfo_id`) REFERENCES `hwinfo` (`hwinfo_id`);
ALTER TABLE submission ADD CONSTRAINT fk_submission_product FOREIGN KEY (`product_id`) REFERENCES `product` (`product_id`);
ALTER TABLE submission ADD CONSTRAINT fk_submission_submission FOREIGN KEY (`related`) REFERENCES `submission` (`submission_id`) ON DELETE SET NULL;
ALTER TABLE submission ADD CONSTRAINT fk_submission_release FOREIGN KEY (`release_id`) REFERENCES `release` (`release_id`);
ALTER TABLE submission ADD CONSTRAINT fk_submission_tester FOREIGN KEY (`tester_id`) REFERENCES `tester` (`tester_id`);
ALTER TABLE tcf_group ADD CONSTRAINT fk_tcf_group_submission FOREIGN KEY (`submission_id`) REFERENCES `submission` (`submission_id`) ON DELETE CASCADE;
ALTER TABLE tcf_group ADD CONSTRAINT fk_tcf_group_testsuite FOREIGN KEY (`testsuite_id`) REFERENCES `testsuite` (`testsuite_id`);
ALTER TABLE test ADD CONSTRAINT fk_test_testcase FOREIGN KEY (`testcase_id`) REFERENCES `testcase` (`testcase_id`);
ALTER TABLE test ADD CONSTRAINT fk_test_testsuite FOREIGN KEY (`testsuite_id`) REFERENCES `testsuite` (`testsuite_id`);
ALTER TABLE waiver ADD CONSTRAINT fk_waiver_data_testcase FOREIGN KEY (`testcase_id`) REFERENCES `testcase` (`testcase_id`);
ALTER TABLE waiver_testcase ADD CONSTRAINT fk_waiver_testcase_arch FOREIGN KEY (`arch_id`) REFERENCES `arch` (`arch_id`);
ALTER TABLE waiver_testcase ADD CONSTRAINT fk_waiver_testcase_product FOREIGN KEY (`product_id`) REFERENCES `product` (`product_id`);
ALTER TABLE waiver_testcase ADD CONSTRAINT fk_waiver_testcase_release FOREIGN KEY (`release_id`) REFERENCES `release` (`release_id`);
ALTER TABLE waiver_testcase ADD CONSTRAINT fk_waiver_testcase_waiver FOREIGN KEY (`waiver_id`) REFERENCES `waiver` (`waiver_id`) ON DELETE CASCADE;

DROP VIEW bench_suite;
DROP VIEW bench_tcf_view;
DROP VIEW submission_view;
DROP VIEW rpm_view;
CREATE VIEW bench_suite AS SELECT DISTINCT testsuite_id FROM test WHERE is_bench;
CREATE VIEW submission_view
        AS SELECT submission_id,submission_date,arch,product,`release`,active,related,host,tester,comment,rpm_config_id,hwinfo_id,type
        FROM submission JOIN arch USING(arch_id) JOIN product USING(product_id) JOIN `release` USING(release_id) JOIN host USING(host_id) JOIN tester USING(tester_id);
CREATE VIEW bench_tcf_view
        AS SELECT submission_id,submission_date,arch,product,`release`,host,tester,testsuite,rpm_config_id,hwinfo_id,type
        FROM submission_view JOIN tcf_group USING(submission_id) JOIN testsuite USING(testsuite_id)
        WHERE EXISTS( SELECT * FROM test WHERE testsuite_id=tcf_group.testsuite_id AND is_bench );
CREATE VIEW rpm_view AS SELECT rpm_id,rpm_basename,rpm_version FROM rpm JOIN rpm_basename USING(rpm_basename_id) JOIN rpm_version USING(rpm_version_id);
