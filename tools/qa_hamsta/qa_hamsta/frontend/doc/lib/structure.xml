<?xml version="1.0" encoding="utf-8"?>
<project version="2.0.0a10" title="Hamsta Web Frontend Documentation">
  <file path="group.php" hash="3d6bd8ba67bea159e3d7fbb21f745a09" package="Hamsta">
    <class final="false" abstract="false" namespace="global" line="32" package="Machine">
      <extends/>
      <name>Group</name>
      <full_name>\Group</full_name>
      <docblock line="3">
        <description><![CDATA[Represents a group of machines.]]></description>
        <long-description><![CDATA[]]></long-description>
        <tag line="3" name="package" description="Machine"/>
        <tag line="3" name="author" description="Kevin Wolf &lt;kwolf@suse.de&gt;"/>
        <tag line="3" name="version" description="$Rev: 1615 $"/>
        <tag line="3" name="copyright" description="Copyright (c) 2013 Unpublished Work of SUSE. All Rights Reserved.&lt;br /&gt;&#10;&lt;br /&gt;&#10;THIS IS AN UNPUBLISHED WORK OF SUSE.  IT CONTAINS SUSE'S&#10;CONFIDENTIAL, PROPRIETARY, AND TRADE SECRET INFORMATION.  SUSE&#10;RESTRICTS THIS WORK TO SUSE EMPLOYEES WHO NEED THE WORK TO PERFORM&#10;THEIR ASSIGNMENTS AND TO THIRD PARTIES AUTHORIZED BY SUSE IN WRITING.&#10;THIS WORK IS SUBJECT TO U.S. AND INTERNATIONAL COPYRIGHT LAWS AND&#10;TREATIES. IT MAY NOT BE USED, COPIED, DISTRIBUTED, DISCLOSED, ADAPTED,&#10;PERFORMED, DISPLAYED, COLLECTED, COMPILED, OR LINKED WITHOUT SUSE'S&#10;PRIOR WRITTEN CONSENT. USE OR EXPLOITATION OF THIS WORK WITHOUT&#10;AUTHORIZATION COULD SUBJECT THE PERPETRATOR TO CRIMINAL AND  CIVIL&#10;LIABILITY.&lt;br /&gt;&#10;&lt;br /&gt;&#10;SUSE PROVIDES THE WORK 'AS IS,' WITHOUT ANY EXPRESS OR IMPLIED&#10;WARRANTY, INCLUDING WITHOUT THE IMPLIED WARRANTIES OF MERCHANTABILITY,&#10;FITNESS FOR A PARTICULAR PURPOSE, AND NON-INFRINGEMENT. SUSE, THE&#10;AUTHORS OF THE WORK, AND THE OWNERS OF COPYRIGHT IN THE WORK ARE NOT&#10;LIABLE FOR ANY CLAIM, DAMAGES, OR OTHER LIABILITY, WHETHER IN AN ACTION&#10;OF CONTRACT, TORT, OR OTHERWISE, ARISING FROM, OUT OF, OR IN CONNECTION&#10;WITH THE WORK OR THE USE OR OTHER DEALINGS IN THE WORK."/>
      </docblock>
      <property final="false" static="false" visibility="private" line="38" namespace="global" package="Hamsta">
        <name>$fields</name>
        <default><![CDATA[]]></default>
        <docblock line="34">
          <description><![CDATA[]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="34" name="var" description="Associative array containing the values of all database fields of this group" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="49" package="Machine">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <docblock line="40">
          <description><![CDATA[Creates a new instance of Group.]]></description>
          <long-description><![CDATA[<p>The constructor is meant to be called only by functions that
directly access the database and have to get an object from
their query result.</p>]]></long-description>
          <tag line="40" name="param" description="Values of all database fields." type="array" variable="$fields">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="49">
          <name>$fields</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="62" package="Machine">
        <name>create</name>
        <full_name>create</full_name>
        <docblock line="53">
          <description><![CDATA[Creates a new group.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="53" name="param" description="Name of the new group." type="string" variable="$name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="53" name="param" description="Description of the new group." type="string" variable="$description">
            <type by_reference="false">string</type>
          </tag>
          <tag line="53" name="param" description="Array of Machine objects which form the new group." type="array" variable="$machines">
            <type by_reference="false">array</type>
          </tag>
          <tag line="53" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="62">
          <name>$name</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="62">
          <name>$description</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="62">
          <name>$machines</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="114" package="Machine">
        <name>edit</name>
        <full_name>edit</full_name>
        <docblock line="107">
          <description><![CDATA[Edits a group's information.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="107" name="param" description="New name for the group." type="string" variable="$name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="107" name="param" description="New description for the group." type="string" variable="$description">
            <type by_reference="false">string</type>
          </tag>
          <tag line="107" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="114">
          <name>$name</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="114">
          <name>$description</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="153" package="Machine">
        <name>get_by_name</name>
        <full_name>get_by_name</full_name>
        <docblock line="145">
          <description><![CDATA[Get a Group object by the group name from the database.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="145" name="param" description="Name of the group to get." type="string" variable="$name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="145" name="return" description="Requested group object or null if no group matches the name; null if a database error occurs." type="\Group">
            <type by_reference="false">\Group</type>
          </tag>
        </docblock>
        <argument line="153">
          <name>$name</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="173" package="Machine">
        <name>get_by_id</name>
        <full_name>get_by_id</full_name>
        <docblock line="166">
          <description><![CDATA[Get a Group object by the group id from the database.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="166" name="param" description="ID of the group to get." type="int" variable="$id">
            <type by_reference="false">int</type>
          </tag>
          <tag line="166" name="return" description="Requested group object or null if no group matches the ID; null if a database error occurs." type="\Group">
            <type by_reference="false">\Group</type>
          </tag>
        </docblock>
        <argument line="173">
          <name>$id</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="192" package="Machine">
        <name>get_all</name>
        <full_name>get_all</full_name>
        <docblock line="186">
          <description><![CDATA[Gets Group objects containing all available groups.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="186" name="return" description="Array of Group objects containing all available groups; null if a database error occurs." type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="213" package="Machine">
        <name>get_id</name>
        <full_name>get_id</full_name>
        <docblock line="208">
          <description><![CDATA[Gets id of this group.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="208" name="return" description="ID of the group." type="int">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="222" package="Machine">
        <name>get_name</name>
        <full_name>get_name</full_name>
        <docblock line="217">
          <description><![CDATA[Gets name of this group.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="217" name="return" description="Name of the group." type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="231" package="Machine">
        <name>get_description</name>
        <full_name>get_description</full_name>
        <docblock line="226">
          <description><![CDATA[Gets description of this group.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="226" name="return" description="Description of the group." type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="241" package="Machine">
        <name>get_machines</name>
        <full_name>get_machines</full_name>
        <docblock line="235">
          <description><![CDATA[Gets list of machines in this group.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="235" name="return" description="Array of Machine objects for all machines belonging to the group; null if a database error occurcs." type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="271" package="Machine">
        <name>delete</name>
        <full_name>delete</full_name>
        <docblock line="266">
          <description><![CDATA[Deletes the group from the database.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="266" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="294" package="Machine">
        <name>add_machine</name>
        <full_name>add_machine</full_name>
        <docblock line="285">
          <description><![CDATA[Adds a machine to the group.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="285" name="param" description="Machine to add to the group." type="\Machine" variable="$machine">
            <type by_reference="false">\Machine</type>
          </tag>
          <tag line="285" name="return" description="True if the machine could be added, false if the machine was already member of the group. On other errors, a PDOException is thrown." type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
        <argument line="294">
          <name>$machine</name>
          <default><![CDATA[]]></default>
          <type>\Machine</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="323" package="Machine">
        <name>del_machine</name>
        <full_name>del_machine</full_name>
        <docblock line="315">
          <description><![CDATA[Removes a machine from the group.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="315" name="param" description="Machine to remove from the group." type="\Machine" variable="$machine">
            <type by_reference="false">\Machine</type>
          </tag>
          <tag line="315" name="return" description="True if the machine could be deleted, false if no machine has been deleted." type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
        <argument line="323">
          <name>$machine</name>
          <default><![CDATA[]]></default>
          <type>\Machine</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="344" package="Machine">
        <name>get_groups_by_machine</name>
        <full_name>get_groups_by_machine</full_name>
        <docblock line="336">
          <description><![CDATA[Find groups a machine belongs to.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="336" name="param" description="Machine to find groups." type="\Machine" variable="$machine">
            <type by_reference="false">\Machine</type>
          </tag>
          <tag line="336" name="return" description="hash array of &quot;group_id:group&quot; if the machine belongs to group(s), null if a database error occurcs." type="\an">
            <type by_reference="false">\an</type>
          </tag>
        </docblock>
        <argument line="344">
          <name>$machine</name>
          <default><![CDATA[]]></default>
          <type>\Machine</type>
        </argument>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file group.php</error>
    </parse_markers>
  </file>
  <file path="parameters.php" hash="1d28856901679a9c1ec80c5de6f5a829" package="Hamsta">
    <function namespace="global" line="33" package="Hamsta">
      <name>genRandomString</name>
      <full_name>\genRandomString</full_name>
      <docblock line="28">
        <description><![CDATA[Generate random string]]></description>
        <long-description><![CDATA[]]></long-description>
        <tag line="28" name="param" description="the length of random string" type="\number" variable="$len">
          <type by_reference="false">\number</type>
        </tag>
        <tag line="28" name="return" description="string" type="\random">
          <type by_reference="false">\random</type>
        </tag>
      </docblock>
      <argument line="33">
        <name>$len</name>
        <default><![CDATA[]]></default>
        <type/>
      </argument>
    </function>
    <function namespace="global" line="61" package="Hamsta">
      <name>trim_parameter</name>
      <full_name>\trim_parameter</full_name>
      <docblock line="56">
        <description><![CDATA[format parameter]]></description>
        <long-description><![CDATA[]]></long-description>
        <tag line="56" name="param" description="the parameter to be format" type="string" variable="$parameter">
          <type by_reference="false">string</type>
        </tag>
        <tag line="56" name="return" description="formatted string" type="string">
          <type by_reference="false">string</type>
        </tag>
      </docblock>
      <argument line="61">
        <name>$parameter</name>
        <default><![CDATA[]]></default>
        <type/>
      </argument>
    </function>
    <function namespace="global" line="91" package="Hamsta">
      <name>get_parameter_maps</name>
      <full_name>\get_parameter_maps</full_name>
      <docblock line="86">
        <description><![CDATA[get paramter hash maps from the xml.]]></description>
        <long-description><![CDATA[]]></long-description>
        <tag line="86" name="param" description="the of XML file" type="\SimpleXMLElement" variable="$xml">
          <type by_reference="false">\SimpleXMLElement</type>
        </tag>
        <tag line="86" name="return" description="of parameters" type="array">
          <type by_reference="false">array</type>
        </tag>
      </docblock>
      <argument line="91">
        <name>$xml</name>
        <default><![CDATA[]]></default>
        <type/>
      </argument>
    </function>
    <function namespace="global" line="155" package="Hamsta">
      <name>get_parameter_table</name>
      <full_name>\get_parameter_table</full_name>
      <docblock line="149">
        <description><![CDATA[Get paramter table from the paramters hash table, parameter maybe named begin with '$prefix'.]]></description>
        <long-description><![CDATA[]]></long-description>
        <tag line="149" name="param" description="the hash map of parameters" type="\SimpleXMLElement" variable="$hash">
          <type by_reference="false">\SimpleXMLElement</type>
        </tag>
        <tag line="149" name="param" description="all of parameters will be named begin with it" type="string" variable="$prefix,">
          <type by_reference="false">string</type>
        </tag>
        <tag line="149" name="return" description="of tables" type="string">
          <type by_reference="false">string</type>
        </tag>
      </docblock>
      <argument line="155">
        <name>$hash</name>
        <default><![CDATA[]]></default>
        <type/>
      </argument>
      <argument line="155">
        <name>$prefix</name>
        <default><![CDATA[]]></default>
        <type/>
      </argument>
    </function>
    <function namespace="global" line="223" package="Hamsta">
      <name>parameters_assign</name>
      <full_name>\parameters_assign</full_name>
      <docblock line="219">
        <description><![CDATA[Process the parameter tags of XML file.]]></description>
        <long-description><![CDATA[]]></long-description>
        <tag line="219" name="param" description="the job XML" type="\SimpleXMLElement" variable="$xml">
          <type by_reference="false">\SimpleXMLElement</type>
        </tag>
      </docblock>
      <argument line="223">
        <name>$xml</name>
        <default><![CDATA[]]></default>
        <type/>
      </argument>
      <argument line="223">
        <name>$prefix</name>
        <default><![CDATA[]]></default>
        <type/>
      </argument>
    </function>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file parameters.php</error>
      <error line="149" code="50014">Name of argument $prefix does not match with the DocBlock's name $prefix, in \get_parameter_table()</error>
      <notice line="149" code="50013">Parameter $prefix, could not be found in \get_parameter_table()</notice>
      <error line="219" code="50015">Argument $prefix is missing from the Docblock of \parameters_assign()</error>
    </parse_markers>
  </file>
  <file path="powerswitch.php" hash="f33b4f4ace84334b96c632064525fd8d" package="Hamsta">
    <function namespace="global" line="31" package="Hamsta">
      <name>power_s390</name>
      <full_name>\power_s390</full_name>
      <argument line="31">
        <name>$powerswitch</name>
        <default><![CDATA[]]></default>
        <type/>
      </argument>
      <argument line="31">
        <name>$powerslot</name>
        <default><![CDATA[]]></default>
        <type/>
      </argument>
      <argument line="31">
        <name>$action</name>
        <default><![CDATA[]]></default>
        <type/>
      </argument>
    </function>
    <function namespace="global" line="41" package="Hamsta">
      <name>s390_interface</name>
      <full_name>\s390_interface</full_name>
      <argument line="41">
        <name>$userid</name>
        <default><![CDATA[]]></default>
        <type/>
      </argument>
      <argument line="41">
        <name>$action</name>
        <default><![CDATA[]]></default>
        <type/>
      </argument>
    </function>
    <function namespace="global" line="104" package="Hamsta">
      <name>power_apc</name>
      <full_name>\power_apc</full_name>
      <argument line="104">
        <name>$powerswitch</name>
        <default><![CDATA[]]></default>
        <type/>
      </argument>
      <argument line="104">
        <name>$powerslot</name>
        <default><![CDATA[]]></default>
        <type/>
      </argument>
      <argument line="104">
        <name>$action</name>
        <default><![CDATA[]]></default>
        <type/>
      </argument>
    </function>
    <function namespace="global" line="154" package="Hamsta">
      <name>power_ipmi</name>
      <full_name>\power_ipmi</full_name>
      <argument line="154">
        <name>$powerswitch</name>
        <default><![CDATA[]]></default>
        <type/>
      </argument>
      <argument line="154">
        <name>$powerslot</name>
        <default><![CDATA[]]></default>
        <type/>
      </argument>
      <argument line="154">
        <name>$action</name>
        <default><![CDATA[]]></default>
        <type/>
      </argument>
    </function>
    <function namespace="global" line="167" package="Hamsta">
      <name>ipmi_command</name>
      <full_name>\ipmi_command</full_name>
      <argument line="167">
        <name>$ipmi_user</name>
        <default><![CDATA[]]></default>
        <type/>
      </argument>
      <argument line="167">
        <name>$ipmi_password</name>
        <default><![CDATA[]]></default>
        <type/>
      </argument>
      <argument line="167">
        <name>$ipmi_host</name>
        <default><![CDATA[]]></default>
        <type/>
      </argument>
      <argument line="167">
        <name>$command</name>
        <default><![CDATA[]]></default>
        <type/>
      </argument>
    </function>
    <function namespace="global" line="210" package="Hamsta">
      <name>power_hmc</name>
      <full_name>\power_hmc</full_name>
      <argument line="210">
        <name>$powerswitch</name>
        <default><![CDATA[]]></default>
        <type/>
      </argument>
      <argument line="210">
        <name>$powerslot</name>
        <default><![CDATA[]]></default>
        <type/>
      </argument>
      <argument line="210">
        <name>$action</name>
        <default><![CDATA[]]></default>
        <type/>
      </argument>
    </function>
    <function namespace="global" line="238" package="Hamsta">
      <name>hmc_lssyscfg</name>
      <full_name>\hmc_lssyscfg</full_name>
      <argument line="238">
        <name>$hmc_user</name>
        <default><![CDATA[]]></default>
        <type/>
      </argument>
      <argument line="238">
        <name>$hmc_pass</name>
        <default><![CDATA[]]></default>
        <type/>
      </argument>
      <argument line="238">
        <name>$hmc_host</name>
        <default><![CDATA[]]></default>
        <type/>
      </argument>
      <argument line="238">
        <name>$machine_name</name>
        <default><![CDATA[]]></default>
        <type/>
      </argument>
      <argument line="238">
        <name>$lpar_id</name>
        <default><![CDATA[]]></default>
        <type/>
      </argument>
    </function>
    <function namespace="global" line="250" package="Hamsta">
      <name>hmc_chsysstate</name>
      <full_name>\hmc_chsysstate</full_name>
      <argument line="250">
        <name>$hmc_user</name>
        <default><![CDATA[]]></default>
        <type/>
      </argument>
      <argument line="250">
        <name>$hmc_pass</name>
        <default><![CDATA[]]></default>
        <type/>
      </argument>
      <argument line="250">
        <name>$hmc_host</name>
        <default><![CDATA[]]></default>
        <type/>
      </argument>
      <argument line="250">
        <name>$machine_name</name>
        <default><![CDATA[]]></default>
        <type/>
      </argument>
      <argument line="250">
        <name>$lpar_id</name>
        <default><![CDATA[]]></default>
        <type/>
      </argument>
      <argument line="250">
        <name>$action</name>
        <default><![CDATA[]]></default>
        <type/>
      </argument>
    </function>
    <function namespace="global" line="282" package="Hamsta">
      <name>power_amt</name>
      <full_name>\power_amt</full_name>
      <argument line="282">
        <name>$powerswitch</name>
        <default><![CDATA[]]></default>
        <type/>
      </argument>
      <argument line="282">
        <name>$powerslot</name>
        <default><![CDATA[]]></default>
        <type/>
      </argument>
      <argument line="282">
        <name>$action</name>
        <default><![CDATA[]]></default>
        <type/>
      </argument>
    </function>
    <function namespace="global" line="293" package="Hamsta">
      <name>amt_command</name>
      <full_name>\amt_command</full_name>
      <argument line="293">
        <name>$amt_password</name>
        <default><![CDATA[]]></default>
        <type/>
      </argument>
      <argument line="293">
        <name>$amt_host</name>
        <default><![CDATA[]]></default>
        <type/>
      </argument>
      <argument line="293">
        <name>$command</name>
        <default><![CDATA[]]></default>
        <type/>
      </argument>
    </function>
    <function namespace="global" line="328" package="Hamsta">
      <name>power_virsh</name>
      <full_name>\power_virsh</full_name>
      <argument line="328">
        <name>$powerswitch</name>
        <default><![CDATA[]]></default>
        <type/>
      </argument>
      <argument line="328">
        <name>$powerslot</name>
        <default><![CDATA[]]></default>
        <type/>
      </argument>
      <argument line="328">
        <name>$action</name>
        <default><![CDATA[]]></default>
        <type/>
      </argument>
    </function>
    <function namespace="global" line="356" package="Hamsta">
      <name>virsh_command</name>
      <full_name>\virsh_command</full_name>
      <argument line="356">
        <name>$virsh_user</name>
        <default><![CDATA[]]></default>
        <type/>
      </argument>
      <argument line="356">
        <name>$virsh_password</name>
        <default><![CDATA[]]></default>
        <type/>
      </argument>
      <argument line="356">
        <name>$virsh_host</name>
        <default><![CDATA[]]></default>
        <type/>
      </argument>
      <argument line="356">
        <name>$virsh_scheme</name>
        <default><![CDATA[]]></default>
        <type/>
      </argument>
      <argument line="356">
        <name>$virsh_domain</name>
        <default><![CDATA[]]></default>
        <type/>
      </argument>
      <argument line="356">
        <name>$command</name>
        <default><![CDATA[]]></default>
        <type/>
      </argument>
    </function>
    <function namespace="global" line="394" package="Hamsta">
      <name>power_esx</name>
      <full_name>\power_esx</full_name>
      <argument line="394">
        <name>$powerswitch</name>
        <default><![CDATA[]]></default>
        <type/>
      </argument>
      <argument line="394">
        <name>$powerslot</name>
        <default><![CDATA[]]></default>
        <type/>
      </argument>
      <argument line="394">
        <name>$action</name>
        <default><![CDATA[]]></default>
        <type/>
      </argument>
    </function>
    <function namespace="global" line="418" package="Hamsta">
      <name>esx_command</name>
      <full_name>\esx_command</full_name>
      <argument line="418">
        <name>$esx_user</name>
        <default><![CDATA[]]></default>
        <type/>
      </argument>
      <argument line="418">
        <name>$esx_password</name>
        <default><![CDATA[]]></default>
        <type/>
      </argument>
      <argument line="418">
        <name>$esx_host</name>
        <default><![CDATA[]]></default>
        <type/>
      </argument>
      <argument line="418">
        <name>$vmid</name>
        <default><![CDATA[]]></default>
        <type/>
      </argument>
      <argument line="418">
        <name>$action</name>
        <default><![CDATA[]]></default>
        <type/>
      </argument>
    </function>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file powerswitch.php</error>
      <error line="31" code="50009">No DocBlock was found for function \power_s390()</error>
      <error line="41" code="50009">No DocBlock was found for function \s390_interface()</error>
      <error line="104" code="50009">No DocBlock was found for function \power_apc()</error>
      <error line="154" code="50009">No DocBlock was found for function \power_ipmi()</error>
      <error line="167" code="50009">No DocBlock was found for function \ipmi_command()</error>
      <error line="210" code="50009">No DocBlock was found for function \power_hmc()</error>
      <error line="238" code="50009">No DocBlock was found for function \hmc_lssyscfg()</error>
      <error line="250" code="50009">No DocBlock was found for function \hmc_chsysstate()</error>
      <error line="282" code="50009">No DocBlock was found for function \power_amt()</error>
      <error line="293" code="50009">No DocBlock was found for function \amt_command()</error>
      <error line="328" code="50009">No DocBlock was found for function \power_virsh()</error>
      <error line="356" code="50009">No DocBlock was found for function \virsh_command()</error>
      <error line="394" code="50009">No DocBlock was found for function \power_esx()</error>
      <error line="418" code="50009">No DocBlock was found for function \esx_command()</error>
    </parse_markers>
  </file>
  <file path="Conf.php" hash="77c2bc8b0d145ac020b99a4cfb90b52b" package="Hamsta">
    <include line="2" type="Require Once" package="Hamsta">
      <name>Zend/Config/Ini.php</name>
    </include>
    <class final="false" abstract="false" namespace="global" line="35" package="Configuration">
      <extends/>
      <name>Conf</name>
      <full_name>\Conf</full_name>
      <docblock line="4">
        <description><![CDATA[Class serves as wrapper around Zend_Config class.]]></description>
        <long-description><![CDATA[<p>Provides methods for using configuration.</p>]]></long-description>
        <tag line="4" name="package" description="Configuration"/>
        <tag line="4" name="author" description="Pavel Kačer &lt;pkacer@suse.com&gt;"/>
        <tag line="4" name="version" description="1.0.0"/>
        <tag line="4" name="copyright" description="Copyright (c) 2013 Unpublished Work of SUSE. All Rights Reserved.&lt;br /&gt;&#10;&lt;br /&gt;&#10;THIS IS AN UNPUBLISHED WORK OF SUSE.  IT CONTAINS SUSE'S&#10;CONFIDENTIAL, PROPRIETARY, AND TRADE SECRET INFORMATION.  SUSE&#10;RESTRICTS THIS WORK TO SUSE EMPLOYEES WHO NEED THE WORK TO PERFORM&#10;THEIR ASSIGNMENTS AND TO THIRD PARTIES AUTHORIZED BY SUSE IN WRITING.&#10;THIS WORK IS SUBJECT TO U.S. AND INTERNATIONAL COPYRIGHT LAWS AND&#10;TREATIES. IT MAY NOT BE USED, COPIED, DISTRIBUTED, DISCLOSED, ADAPTED,&#10;PERFORMED, DISPLAYED, COLLECTED, COMPILED, OR LINKED WITHOUT SUSE'S&#10;PRIOR WRITTEN CONSENT. USE OR EXPLOITATION OF THIS WORK WITHOUT&#10;AUTHORIZATION COULD SUBJECT THE PERPETRATOR TO CRIMINAL AND  CIVIL&#10;LIABILITY.&lt;br /&gt;&#10;&lt;br /&gt;&#10;SUSE PROVIDES THE WORK 'AS IS,' WITHOUT ANY EXPRESS OR IMPLIED&#10;WARRANTY, INCLUDING WITHOUT THE IMPLIED WARRANTIES OF MERCHANTABILITY,&#10;FITNESS FOR A PARTICULAR PURPOSE, AND NON-INFRINGEMENT. SUSE, THE&#10;AUTHORS OF THE WORK, AND THE OWNERS OF COPYRIGHT IN THE WORK ARE NOT&#10;LIABLE FOR ANY CLAIM, DAMAGES, OR OTHER LIABILITY, WHETHER IN AN ACTION&#10;OF CONTRACT, TORT, OR OTHERWISE, ARISING FROM, OUT OF, OR IN CONNECTION&#10;WITH THE WORK OR THE USE OR OTHER DEALINGS IN THE WORK."/>
      </docblock>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="49" package="Configuration">
        <name>getIniConfig</name>
        <full_name>getIniConfig</full_name>
        <docblock line="38">
          <description><![CDATA[Returns a configuration class instance.]]></description>
          <long-description><![CDATA[<p>See Zend_Config for more information.</p>]]></long-description>
          <tag line="38" name="param" description="Name of the file containing configuration." type="string" variable="$filename">
            <type by_reference="false">string</type>
          </tag>
          <tag line="38" name="param" description="Name of the section in the configuration to use." type="mixed" variable="$section">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="38" name="param" description="Additional options to the configuration." type="boolean|array" variable="$options">
            <type by_reference="false">boolean</type>
            <type by_reference="false">array</type>
          </tag>
          <tag line="38" name="return" description="An instance of that class." type="\Zend_Config_Ini">
            <type by_reference="false">\Zend_Config_Ini</type>
          </tag>
        </docblock>
        <argument line="49">
          <name>$filename</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="49">
          <name>$section</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="49">
          <name>$options</name>
          <default><![CDATA[false]]></default>
          <type/>
        </argument>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file Conf.php</error>
    </parse_markers>
  </file>
  <file path="Utilfunc.php" hash="c5f9e5cb26b2376347a086b4cb9df276" package="Hamsta">
    <function namespace="global" line="26" package="Hamsta">
      <name>genRefresh</name>
      <full_name>\genRefresh</full_name>
      <argument line="26">
        <name>$pre_page</name>
        <default><![CDATA[]]></default>
        <type/>
      </argument>
    </function>
    <function namespace="global" line="68" package="Hamsta">
      <name>TrimArray</name>
      <full_name>\TrimArray</full_name>
      <argument line="68">
        <name>$Input</name>
        <default><![CDATA[]]></default>
        <type/>
      </argument>
    </function>
    <function namespace="global" line="74" package="Hamsta">
      <name>profiler_init</name>
      <full_name>\profiler_init</full_name>
    </function>
    <function namespace="global" line="79" package="Hamsta">
      <name>profiler_print</name>
      <full_name>\profiler_print</full_name>
      <argument line="79">
        <name>$where</name>
        <default><![CDATA[null]]></default>
        <type/>
      </argument>
    </function>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file Utilfunc.php</error>
      <error line="26" code="50009">No DocBlock was found for function \genRefresh()</error>
      <error line="68" code="50009">No DocBlock was found for function \TrimArray()</error>
      <error line="74" code="50009">No DocBlock was found for function \profiler_init()</error>
      <error line="79" code="50009">No DocBlock was found for function \profiler_print()</error>
    </parse_markers>
  </file>
  <file path="log.php" hash="96939a8beae5a91f007acd3e8158eb99" package="Hamsta">
    <class final="false" abstract="false" namespace="global" line="32" package="Logging">
      <extends/>
      <name>Log</name>
      <full_name>\Log</full_name>
      <docblock line="3">
        <description><![CDATA[Represents a single log entry.]]></description>
        <long-description><![CDATA[]]></long-description>
        <tag line="3" name="package" description="Logging"/>
        <tag line="3" name="author" description="Dan Collingridge &lt;dcollingridge@novell.com&gt;"/>
        <tag line="3" name="version" description="1.0.0"/>
        <tag line="3" name="copyright" description="Copyright (c) 2013 Unpublished Work of SUSE. All Rights Reserved.&lt;br /&gt;&#10;&lt;br /&gt;&#10;THIS IS AN UNPUBLISHED WORK OF SUSE.  IT CONTAINS SUSE'S&#10;CONFIDENTIAL, PROPRIETARY, AND TRADE SECRET INFORMATION.  SUSE&#10;RESTRICTS THIS WORK TO SUSE EMPLOYEES WHO NEED THE WORK TO PERFORM&#10;THEIR ASSIGNMENTS AND TO THIRD PARTIES AUTHORIZED BY SUSE IN WRITING.&#10;THIS WORK IS SUBJECT TO U.S. AND INTERNATIONAL COPYRIGHT LAWS AND&#10;TREATIES. IT MAY NOT BE USED, COPIED, DISTRIBUTED, DISCLOSED, ADAPTED,&#10;PERFORMED, DISPLAYED, COLLECTED, COMPILED, OR LINKED WITHOUT SUSE'S&#10;PRIOR WRITTEN CONSENT. USE OR EXPLOITATION OF THIS WORK WITHOUT&#10;AUTHORIZATION COULD SUBJECT THE PERPETRATOR TO CRIMINAL AND  CIVIL&#10;LIABILITY.&lt;br /&gt;&#10;&lt;br /&gt;&#10;SUSE PROVIDES THE WORK 'AS IS,' WITHOUT ANY EXPRESS OR IMPLIED&#10;WARRANTY, INCLUDING WITHOUT THE IMPLIED WARRANTIES OF MERCHANTABILITY,&#10;FITNESS FOR A PARTICULAR PURPOSE, AND NON-INFRINGEMENT. SUSE, THE&#10;AUTHORS OF THE WORK, AND THE OWNERS OF COPYRIGHT IN THE WORK ARE NOT&#10;LIABLE FOR ANY CLAIM, DAMAGES, OR OTHER LIABILITY, WHETHER IN AN ACTION&#10;OF CONTRACT, TORT, OR OTHERWISE, ARISING FROM, OUT OF, OR IN CONNECTION&#10;WITH THE WORK OR THE USE OR OTHER DEALINGS IN THE WORK."/>
      </docblock>
      <property final="false" static="false" visibility="private" line="38" namespace="global" package="Hamsta">
        <name>$fields</name>
        <default><![CDATA[]]></default>
        <docblock line="34">
          <description><![CDATA[]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="34" name="var" description="Associative array containing the values of all database fields of this machine." type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="49" package="Logging">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <docblock line="40">
          <description><![CDATA[Creates a new instance of Log.]]></description>
          <long-description><![CDATA[<p>The constructor is meant to be called only by functions
that directly access the database and have to get an object
from their query result.</p>]]></long-description>
          <tag line="40" name="param" description="Values of all database fields." type="array" variable="$fields">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="49">
          <name>$fields</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="64" package="Logging">
        <name>create</name>
        <full_name>create</full_name>
        <docblock line="53">
          <description><![CDATA[Creates a new log.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="53" name="param" description="Database ID of the machine that is getting a new log entry." type="int" variable="$machine">
            <type by_reference="false">int</type>
          </tag>
          <tag line="53" name="param" description="User string for the new log entry." type="string" variable="$user">
            <type by_reference="false">string</type>
          </tag>
          <tag line="53" name="param" description="One of the allowed of log entry types." type="string" variable="$type">
            <type by_reference="false">string</type>
          </tag>
          <tag line="53" name="param" description="Text for the new log entry." type="string" variable="$text">
            <type by_reference="false">string</type>
          </tag>
          <tag line="53" name="param" description="What entry value of this log." type="string" variable="$what">
            <type by_reference="false">string</type>
          </tag>
          <tag line="53" name="param" description="Job on machine identifier." type="int" variable="$job">
            <type by_reference="false">int</type>
          </tag>
          <tag line="53" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="64">
          <name>$machine</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="64">
          <name>$user</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="64">
          <name>$type</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="64">
          <name>$text</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="64">
          <name>$what</name>
          <default><![CDATA[""]]></default>
          <type/>
        </argument>
        <argument line="64">
          <name>$job</name>
          <default><![CDATA[NULL]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="90" package="Logging">
        <name>get_log_id</name>
        <full_name>get_log_id</full_name>
        <docblock line="84">
          <description><![CDATA[Gets id of this log.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="84" name="access" description="public"/>
          <tag line="84" name="return" description="Database ID of the machine log entry." type="int">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="104" package="Logging">
        <name>get_log_user</name>
        <full_name>get_log_user</full_name>
        <docblock line="97">
          <description><![CDATA[Getter for a user that created this entry.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="97" name="access" description="public"/>
          <tag line="97" name="return" description="Actor of the machine log entry (currently same as &quot;usedby&quot; field in machine table)." type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="117" package="Logging">
        <name>get_log_type</name>
        <full_name>get_log_type</full_name>
        <docblock line="111">
          <description><![CDATA[Getter for a log entry type.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="111" name="access" description="public"/>
          <tag line="111" name="return" description="Type of the log entry." type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="130" package="Logging">
        <name>get_log_what</name>
        <full_name>get_log_what</full_name>
        <docblock line="124">
          <description><![CDATA[Getter for a log entry what value.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="124" name="access" description="public"/>
          <tag line="124" name="return" description="What of the log entry." type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="144" package="Logging">
        <name>get_log_text</name>
        <full_name>get_log_text</full_name>
        <docblock line="138">
          <description><![CDATA[Getter for a log entry text.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="138" name="access" description="public"/>
          <tag line="138" name="return" description="Text of the machine log entry." type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="158" package="Logging">
        <name>get_log_time</name>
        <full_name>get_log_time</full_name>
        <docblock line="151">
          <description><![CDATA[Getter for a log time.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="151" name="access" description="public"/>
          <tag line="151" name="return" description="Time of the machine log entry. It is a unix timestamp so that PHP's date function can easily manipulate the format." type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="172" package="Logging">
        <name>get_log_time_string</name>
        <full_name>get_log_time_string</full_name>
        <docblock line="165">
          <description><![CDATA[Getter for a log time.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="165" name="access" description="public"/>
          <tag line="165" name="return" description="Time of the machine log entry as a string so that PHP's date function can easily manipulate the format." type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
    </class>
    <markers>
      <todo line="172">same as get_log_time()</todo>
    </markers>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file log.php</error>
    </parse_markers>
  </file>
  <file path="machine.php" hash="17aba2e27b6282eae85ac423efadf7d7" package="Hamsta">
    <constant namespace="global" line="3" package="Hamsta">
      <name>MS_UP</name>
      <full_name>\MS_UP</full_name>
      <value><![CDATA[1]]></value>
    </constant>
    <constant namespace="global" line="4" package="Hamsta">
      <name>MS_DOWN</name>
      <full_name>\MS_DOWN</full_name>
      <value><![CDATA[2]]></value>
    </constant>
    <constant namespace="global" line="5" package="Hamsta">
      <name>MS_NOT_RESPONDING</name>
      <full_name>\MS_NOT_RESPONDING</full_name>
      <value><![CDATA[5]]></value>
    </constant>
    <constant namespace="global" line="6" package="Hamsta">
      <name>MS_UNKNOWN</name>
      <full_name>\MS_UNKNOWN</full_name>
      <value><![CDATA[6]]></value>
    </constant>
    <class final="false" abstract="false" namespace="global" line="37" package="Machine">
      <extends/>
      <name>Machine</name>
      <full_name>\Machine</full_name>
      <docblock line="8">
        <description><![CDATA[Represents a single machine.]]></description>
        <long-description><![CDATA[]]></long-description>
        <tag line="8" name="package" description="Machine"/>
        <tag line="8" name="author" description="Kevin Wolf &lt;kwolf@suse.de&gt;"/>
        <tag line="8" name="version" description="$Rev: 1841 $"/>
        <tag line="8" name="copyright" description="Copyright (c) 2013 Unpublished Work of SUSE. All Rights Reserved.&lt;br /&gt;&#10;&lt;br /&gt;&#10;THIS IS AN UNPUBLISHED WORK OF SUSE.  IT CONTAINS SUSE'S&#10;CONFIDENTIAL, PROPRIETARY, AND TRADE SECRET INFORMATION.  SUSE&#10;RESTRICTS THIS WORK TO SUSE EMPLOYEES WHO NEED THE WORK TO PERFORM&#10;THEIR ASSIGNMENTS AND TO THIRD PARTIES AUTHORIZED BY SUSE IN WRITING.&#10;THIS WORK IS SUBJECT TO U.S. AND INTERNATIONAL COPYRIGHT LAWS AND&#10;TREATIES. IT MAY NOT BE USED, COPIED, DISTRIBUTED, DISCLOSED, ADAPTED,&#10;PERFORMED, DISPLAYED, COLLECTED, COMPILED, OR LINKED WITHOUT SUSE'S&#10;PRIOR WRITTEN CONSENT. USE OR EXPLOITATION OF THIS WORK WITHOUT&#10;AUTHORIZATION COULD SUBJECT THE PERPETRATOR TO CRIMINAL AND  CIVIL&#10;LIABILITY.&lt;br /&gt;&#10;&lt;br /&gt;&#10;SUSE PROVIDES THE WORK 'AS IS,' WITHOUT ANY EXPRESS OR IMPLIED&#10;WARRANTY, INCLUDING WITHOUT THE IMPLIED WARRANTIES OF MERCHANTABILITY,&#10;FITNESS FOR A PARTICULAR PURPOSE, AND NON-INFRINGEMENT. SUSE, THE&#10;AUTHORS OF THE WORK, AND THE OWNERS OF COPYRIGHT IN THE WORK ARE NOT&#10;LIABLE FOR ANY CLAIM, DAMAGES, OR OTHER LIABILITY, WHETHER IN AN ACTION&#10;OF CONTRACT, TORT, OR OTHERWISE, ARISING FROM, OUT OF, OR IN CONNECTION&#10;WITH THE WORK OR THE USE OR OTHER DEALINGS IN THE WORK."/>
      </docblock>
      <property final="false" static="false" visibility="private" line="43" namespace="global" package="Hamsta">
        <name>$fields</name>
        <default><![CDATA[]]></default>
        <docblock line="39">
          <description><![CDATA[]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="39" name="var" description="Associative array containing the values of all database fields of this machine." type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="true" visibility="private" line="48" namespace="global" package="Hamsta">
        <name>$master_socket</name>
        <default><![CDATA[null]]></default>
        <docblock line="45">
          <description><![CDATA[]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="45" name="var" description="Socket to the master command line interface." type="resource">
            <type by_reference="false">resource</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="54" namespace="global" package="Hamsta">
        <name>$errmsg</name>
        <default><![CDATA[""]]></default>
        <docblock line="51">
          <description><![CDATA[]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="51" name="var" description="Error message returned by the master." type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="true" visibility="private" line="59" namespace="global" package="Hamsta">
        <name>$readerr</name>
        <default><![CDATA[""]]></default>
        <docblock line="56">
          <description><![CDATA[static @var string Error message returned by the master.]]></description>
          <long-description><![CDATA[]]></long-description>
        </docblock>
      </property>
      <property final="false" static="false" visibility="private" line="69" namespace="global" package="Hamsta">
        <name>$children</name>
        <default><![CDATA[null]]></default>
        <docblock line="61">
          <description><![CDATA[]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="61" name="var" description="An array containing the machines which are running on this machine. This is null if the machine is not Virtualization Host (role VH). If the machine is VH, this variable is filled by the first call function get_children." type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="true" visibility="private" line="1666" namespace="global" package="Hamsta">
        <name>$related_tables</name>
        <default><![CDATA[array('group_machine', 'log', 'job_on_machine', 'config')]]></default>
      </property>
      <property final="false" static="true" visibility="public" line="1763" namespace="global" package="Hamsta">
        <name>$field_types</name>
        <default><![CDATA[array('machine_id' => 'i', 'unique_id' => 's', 'name' => 's', 'arch_id' => 'arch', 'maintainer_id' => 's', 'ip' => 's', 'product_id' => 'product', 'product_arch_id' => 'arch', 'release_id' => 'release', 'kernel' => 's', 'description' => 's', 'last_used' => 's', 'machine_status_id' => 'machine_status', 'affiliation' => 's', 'usage' => 's', 'usedby' => 's', 'anomaly' => 's', 'serialconsole' => 's', 'powerswitch' => 's', 'powertype' => 's', 'powerslot' => 's', 'busy' => 'i', 'consoledevice' => 's', 'consolespeed' => 's', 'consolesetdefault' => 'i', 'default_option' => 's', 'role' => array('SUT', 'VH'), 'type' => 's', 'vh_id' => 'machine', 'reserved' => 'd', 'expires' => 'd', 'rpm_list' => 's')]]></default>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="80" package="Machine">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <docblock line="71">
          <description><![CDATA[Creates a new instance of Machine.]]></description>
          <long-description><![CDATA[<p>The constructor is meant to be called only by functions
that directly access the database and have to get an object
from their query result.</p>]]></long-description>
          <tag line="71" name="param" description="Values of all database fields." type="array" variable="$fields">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="80">
          <name>$fields</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="93" package="Machine">
        <name>get_by_hostname</name>
        <full_name>get_by_hostname</full_name>
        <docblock line="85">
          <description><![CDATA[Gets a machine by hostname.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="85" name="param" description="Hostname of the machine to get." type="string" variable="$hostname">
            <type by_reference="false">string</type>
          </tag>
          <tag line="85" name="access" description="public"/>
          <tag line="85" name="return" description="Machine with the given hostname or null if no matching machine is found." type="\Machine">
            <type by_reference="false">\Machine</type>
          </tag>
        </docblock>
        <argument line="93">
          <name>$hostname</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="113" package="Machine">
        <name>get_by_id</name>
        <full_name>get_by_id</full_name>
        <docblock line="105">
          <description><![CDATA[Gets a machine by its id.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="105" name="param" description="Database ID of the machine." type="int" variable="$id">
            <type by_reference="false">int</type>
          </tag>
          <tag line="105" name="access" description="public"/>
          <tag line="105" name="return" description="Machine with the given database ID or null if no matching machine is found." type="\Machine">
            <type by_reference="false">\Machine</type>
          </tag>
        </docblock>
        <argument line="113">
          <name>$id</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="133" package="Machine">
        <name>get_by_ip</name>
        <full_name>get_by_ip</full_name>
        <docblock line="125">
          <description><![CDATA[Gets a machine by IP address.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="125" name="param" description="Database IP address of the machine." type="int" variable="$ip">
            <type by_reference="false">int</type>
          </tag>
          <tag line="125" name="access" description="public"/>
          <tag line="125" name="return" description="Machine with the given database IP or null if no matching machine is found." type="\Machine">
            <type by_reference="false">\Machine</type>
          </tag>
        </docblock>
        <argument line="133">
          <name>$ip</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="151" package="Machine">
        <name>get_id</name>
        <full_name>get_id</full_name>
        <docblock line="145">
          <description><![CDATA[Gets an ID of this machine.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="145" name="access" description="public"/>
          <tag line="145" name="return" description="Database ID of the machine." type="int">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="165" package="Machine">
        <name>get_hostname</name>
        <full_name>get_hostname</full_name>
        <docblock line="159">
          <description><![CDATA[Gets a hostname of this machine.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="159" name="access" description="public"/>
          <tag line="159" name="return" description="Hostname of the machine." type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="178" package="Machine">
        <name>get_ip_address</name>
        <full_name>get_ip_address</full_name>
        <docblock line="172">
          <description><![CDATA[Gets an IP address of this machine.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="172" name="access" description="public"/>
          <tag line="172" name="return" description="IP address of the machine." type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="191" package="Machine">
        <name>get_group</name>
        <full_name>get_group</full_name>
        <docblock line="185">
          <description><![CDATA[Gets group this machine is in.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="185" name="access" description="public"/>
          <tag line="185" name="return" description="Group name of this machine." type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="211" package="Machine">
        <name>get_architecture</name>
        <full_name>get_architecture</full_name>
        <docblock line="201">
          <description><![CDATA[Gets architecture of this machine.]]></description>
          <long-description><![CDATA[<p>Note: This gets the <b>current</b> architecture of the machine (i.e. what it is currently installed to.
To get the <b>real</b> (capable) architecture of a machine, use get_architecture_capable().</p>]]></long-description>
          <tag line="201" name="access" description="public"/>
          <tag line="201" name="return" description="Architecture of the machine, if no variable in." type="string">
            <type by_reference="false">string</type>
          </tag>
          <tag line="201" name="return" description="Architecture of the machine, if $need_id variable in." type="\ID">
            <type by_reference="false">\ID</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="233" package="Machine">
        <name>get_architecture_capable</name>
        <full_name>get_architecture_capable</full_name>
        <docblock line="223">
          <description><![CDATA[Gets capable architecture of this machine.]]></description>
          <long-description><![CDATA[<p>Note: This gets the <b>real</b> architecture of the machine (i.e. what it is capable of), but not necessarily installed to.
To get the <b>current</b> (installed) architecture of a machine, use get_architecture().</p>]]></long-description>
          <tag line="223" name="access" description="public"/>
          <tag line="223" name="return" description="Real architecture of the machine, if no parameter in." type="string">
            <type by_reference="false">string</type>
          </tag>
          <tag line="223" name="return" description="Real id architecture of the machine, if $need_id parameter in." type="\in">
            <type by_reference="false">\in</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="251" package="Machine">
        <name>get_hwelement</name>
        <full_name>get_hwelement</full_name>
        <docblock line="245">
          <description><![CDATA[Gets latest hardware element of this machine.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="245" name="access" description="public"/>
          <tag line="245" name="return" description="Latest hardware element values of this machine." type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="251">
          <name>$module_name</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="251">
          <name>$element_name</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="283" package="Machine">
        <name>get_cpu_numbers</name>
        <full_name>get_cpu_numbers</full_name>
        <docblock line="277">
          <description><![CDATA[Call get_hwelement to query hardware elements values.]]></description>
          <long-description><![CDATA[<p>Include get_cpu_model, get_momery_size, get_disk_model, get_partions etc.</p>]]></long-description>
          <tag line="277" name="access" description="public"/>
          <tag line="277" name="return" description="hardware element info value of this machine" type="\latest">
            <type by_reference="false">\latest</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="286" package="Machine">
        <name>get_memory_size</name>
        <full_name>get_memory_size</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="289" package="Machine">
        <name>get_disk_size</name>
        <full_name>get_disk_size</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="292" package="Machine">
        <name>get_cpu_vendor</name>
        <full_name>get_cpu_vendor</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="301" package="Machine">
        <name>get_vmusedmemory</name>
        <full_name>get_vmusedmemory</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="305" package="Machine">
        <name>get_avaivmdisk</name>
        <full_name>get_avaivmdisk</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="309" package="Machine">
        <name>get_ishwvirt</name>
        <full_name>get_ishwvirt</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="320" package="Machine">
        <name>get_devel_tools</name>
        <full_name>get_devel_tools</full_name>
        <docblock line="314">
          <description><![CDATA[get_devel_tools()]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="314" name="access" description="public"/>
          <tag line="314" name="return" description="Indicating whether client is running devel tools." type="\int(bool)">
            <type by_reference="false">\int(bool)</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="331" package="Machine">
        <name>get_rpm_list</name>
        <full_name>get_rpm_list</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="345" package="Machine">
        <name>get_tools_out_of_date</name>
        <full_name>get_tools_out_of_date</full_name>
        <docblock line="338">
          <description><![CDATA[get_tools_out_of_date]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="338" name="access" description="public"/>
          <tag line="338" name="return" description="Containing list of outdated packages." type="array">
            <type by_reference="false">array</type>
          </tag>
          <tag line="338" name="return" description="False if no packages were outdated." type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="406" package="Machine">
        <name>check_newer_version</name>
        <full_name>check_newer_version</full_name>
        <docblock line="398">
          <description><![CDATA[check_newer_version]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="398" name="access" description="public"/>
          <tag line="398" name="param" description="the old version to compare" type="\array()" variable="$old">
            <type by_reference="false">\array()</type>
          </tag>
          <tag line="398" name="param" description="the new version to compare" type="\array()" variable="$new">
            <type by_reference="false">\array()</type>
          </tag>
          <tag line="398" name="return" description="newer version of the two arguments." type="\The">
            <type by_reference="false">\The</type>
          </tag>
        </docblock>
        <argument line="406">
          <name>$old</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="406">
          <name>$new</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="427" package="Machine">
        <name>get_update_status</name>
        <full_name>get_update_status</full_name>
        <docblock line="421">
          <description><![CDATA[Gets update status of this machine.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="421" name="access" description="public"/>
          <tag line="421" name="return" description="if SUT side have hamste update available" type="\ture">
            <type by_reference="false">\ture</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="440" package="Machine">
        <name>get_last_used</name>
        <full_name>get_last_used</full_name>
        <docblock line="433">
          <description><![CDATA[Gets timestamp this machine was last used.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="433" name="access" description="public"/>
          <tag line="433" name="return" description="Date string as returned by the database indicating the last usage of the machine." type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="453" package="Machine">
        <name>get_unique_id</name>
        <full_name>get_unique_id</full_name>
        <docblock line="447">
          <description><![CDATA[Gets unique identifier of this machine.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="447" name="access" description="public"/>
          <tag line="447" name="return" description="Unique ID if the machine." type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="466" package="Machine">
        <name>get_powerswitch</name>
        <full_name>get_powerswitch</full_name>
        <docblock line="460">
          <description><![CDATA[Gets power switch of this machine.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="460" name="access" description="public"/>
          <tag line="460" name="return" description="Unique ID if the machine" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="480" package="Machine">
        <name>set_powerswitch</name>
        <full_name>set_powerswitch</full_name>
        <docblock line="473">
          <description><![CDATA[Sets the powerswitch description of the machine.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="473" name="param" description="The configuration of the connected powerwitch." type="string" variable="$powerswitch">
            <type by_reference="false">string</type>
          </tag>
          <tag line="473" name="access" description="public"/>
          <tag line="473" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="480">
          <name>$powerswitch</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="492" package="Machine">
        <name>get_powertype</name>
        <full_name>get_powertype</full_name>
        <docblock line="486">
          <description><![CDATA[get_powertype]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="486" name="access" description="public"/>
          <tag line="486" name="return" description="Unique ID if the machine" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="506" package="Machine">
        <name>set_powertype</name>
        <full_name>set_powertype</full_name>
        <docblock line="499">
          <description><![CDATA[Sets the powertype description of the machine]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="499" name="param" description="The configuration of the connected powerswitch." type="string" variable="$powertype">
            <type by_reference="false">string</type>
          </tag>
          <tag line="499" name="access" description="public"/>
          <tag line="499" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="506">
          <name>$powertype</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="525" package="Machine">
        <name>check_powertype</name>
        <full_name>check_powertype</full_name>
        <docblock line="518">
          <description><![CDATA[Checks if powertype is supported]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="518" name="param" description="The configuration of the connected powerswitch." type="string" variable="$powertype">
            <type by_reference="false">string</type>
          </tag>
          <tag line="518" name="access" description="public"/>
          <tag line="518" name="return" description="" type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="541" package="Machine">
        <name>get_powerslot</name>
        <full_name>get_powerslot</full_name>
        <docblock line="535">
          <description><![CDATA[get_powerslot]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="535" name="access" description="public"/>
          <tag line="535" name="return" description="Unique ID if the machine" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="555" package="Machine">
        <name>set_powerslot</name>
        <full_name>set_powerslot</full_name>
        <docblock line="548">
          <description><![CDATA[Sets the powerslot description of the machine.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="548" name="param" description="has the slot of the connected powerswitch" type="string" variable="$powerslot">
            <type by_reference="false">string</type>
          </tag>
          <tag line="548" name="access" description="public"/>
          <tag line="548" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="555">
          <name>$powerslot</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="569" package="Machine">
        <name>start_machine</name>
        <full_name>start_machine</full_name>
        <docblock line="562">
          <description><![CDATA[start_machine]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="562" name="acces" description="public"/>
          <tag line="562" name="return" description="results of action" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="589" package="Machine">
        <name>stop_machine</name>
        <full_name>stop_machine</full_name>
        <docblock line="582">
          <description><![CDATA[stop_machine]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="582" name="acces" description="public"/>
          <tag line="582" name="return" description="results of action" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="609" package="Machine">
        <name>restart_machine</name>
        <full_name>restart_machine</full_name>
        <docblock line="602">
          <description><![CDATA[restart_machine]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="602" name="acces" description="public"/>
          <tag line="602" name="return" description="results of action" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="629" package="Machine">
        <name>get_serialconsole</name>
        <full_name>get_serialconsole</full_name>
        <docblock line="623">
          <description><![CDATA[get_serialconsole]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="623" name="access" description="public"/>
          <tag line="623" name="return" description="Unique ID if the machine" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="643" package="Machine">
        <name>set_serialconsole</name>
        <full_name>set_serialconsole</full_name>
        <docblock line="636">
          <description><![CDATA[Sets the serialconsole description of the machine.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="636" name="param" description="The configuration of the connected serialswitch (for remote control)." type="string" variable="$serialconsole">
            <type by_reference="false">string</type>
          </tag>
          <tag line="636" name="access" description="public"/>
          <tag line="636" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="643">
          <name>$serialconsole</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="657" package="Machine">
        <name>get_consoledevice</name>
        <full_name>get_consoledevice</full_name>
        <docblock line="651">
          <description><![CDATA[get_consoledevice]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="651" name="access" description="public"/>
          <tag line="651" name="return" description="Unique ID if the machine" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="671" package="Machine">
        <name>set_consoledevice</name>
        <full_name>set_consoledevice</full_name>
        <docblock line="664">
          <description><![CDATA[Sets the serialdevice.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="664" name="param" description="is device name of console point e.g ttyS0" type="string" variable="$consoledevice">
            <type by_reference="false">string</type>
          </tag>
          <tag line="664" name="access" description="public"/>
          <tag line="664" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="671">
          <name>$consoledevice</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="684" package="Machine">
        <name>get_consolespeed</name>
        <full_name>get_consolespeed</full_name>
        <docblock line="678">
          <description><![CDATA[get_consolespeed]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="678" name="access" description="public"/>
          <tag line="678" name="return" description="speed of console device" type="int">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="700" package="Machine">
        <name>set_consolespeed</name>
        <full_name>set_consolespeed</full_name>
        <docblock line="691">
          <description><![CDATA[set_consolespeed]]></description>
          <long-description><![CDATA[<p>Sets the    consolespeed</p>]]></long-description>
          <tag line="691" name="param" description="is device speed of serail console" type="string" variable="$consolespeed">
            <type by_reference="false">string</type>
          </tag>
          <tag line="691" name="access" description="public"/>
          <tag line="691" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="700">
          <name>$consolespeed</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="714" package="Machine">
        <name>get_consolesetdefault</name>
        <full_name>get_consolesetdefault</full_name>
        <docblock line="708">
          <description><![CDATA[get_consolesetdefault]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="708" name="access" description="public"/>
          <tag line="708" name="return" description="whether this lable set" type="int">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="730" package="Machine">
        <name>set_consolesetdefault</name>
        <full_name>set_consolesetdefault</full_name>
        <docblock line="721">
          <description><![CDATA[Sets the serail console at reinstallation.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="721" name="param" description="0 disable console direction 1 enable console direction" type="int" variable="$consolesetdefault">
            <type by_reference="false">int</type>
          </tag>
          <tag line="721" name="access" description="public"/>
          <tag line="721" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="730">
          <name>$consolesetdefault</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="745" package="Machine">
        <name>get_def_inst_opt</name>
        <full_name>get_def_inst_opt</full_name>
        <docblock line="739">
          <description><![CDATA[get_def_inst_opt]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="739" name="access" description="public"/>
          <tag line="739" name="return" description="default installation option per machine" type="\the">
            <type by_reference="false">\the</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="759" package="Machine">
        <name>set_def_inst_opt</name>
        <full_name>set_def_inst_opt</full_name>
        <docblock line="752">
          <description><![CDATA[Sets the default installation option.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="752" name="param" description="default installation option" type="string" variable="$default_option">
            <type by_reference="false">string</type>
          </tag>
          <tag line="752" name="access" description="public"/>
          <tag line="752" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="759">
          <name>$default_option</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="773" package="Machine">
        <name>get_status_string</name>
        <full_name>get_status_string</full_name>
        <docblock line="767">
          <description><![CDATA[get_status_string]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="767" name="access" description="public"/>
          <tag line="767" name="return" description="Name of the current status of the machine" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="790" package="Machine">
        <name>get_previous_jobs</name>
        <full_name>get_previous_jobs</full_name>
        <docblock line="784">
          <description><![CDATA[get_previous_jobs]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="784" name="access" description="public"/>
          <tag line="784" name="return" description="xml_file and short_name of the last ran jobs" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="804" package="Machine">
        <name>get_status_id</name>
        <full_name>get_status_id</full_name>
        <docblock line="798">
          <description><![CDATA[get_status_id]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="798" name="access" description="public"/>
          <tag line="798" name="return" description="ID of the current status of the machine" type="int">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="818" package="Machine">
        <name>set_status_id</name>
        <full_name>set_status_id</full_name>
        <docblock line="811">
          <description><![CDATA[Sets the status of the machine.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="811" name="param" description="ID of the new status." type="int" variable="$status_id">
            <type by_reference="false">int</type>
          </tag>
          <tag line="811" name="access" description="public"/>
          <tag line="811" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="818">
          <name>$status_id</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="833" package="Machine">
        <name>get_maintainer_string</name>
        <full_name>get_maintainer_string</full_name>
        <docblock line="826">
          <description><![CDATA[get_maintainer_string]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="826" name="access" description="public"/>
          <tag line="826" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
          <tag line="826" name="todo" description="Return the name of the maintainer instead of the ID"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="848" package="Machine">
        <name>set_maintainer_string</name>
        <full_name>set_maintainer_string</full_name>
        <docblock line="841">
          <description><![CDATA[Sets the maintainer of the machine]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="841" name="param" description="ID of the new maintainer." type="mixed" variable="$maintainer">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="841" name="access" description="public"/>
          <tag line="841" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="848">
          <name>$maintainer</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="861" package="Machine">
        <name>get_used_by</name>
        <full_name>get_used_by</full_name>
        <docblock line="855">
          <description><![CDATA[get_used_by]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="855" name="access" description="public"/>
          <tag line="855" name="return" description="Login for which the machine is reserved" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="868" package="Machine">
        <name>get_used_by_name</name>
        <full_name>get_used_by_name</full_name>
        <argument line="868">
          <name>$config</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="882" package="Machine">
        <name>set_used_by</name>
        <full_name>set_used_by</full_name>
        <docblock line="875">
          <description><![CDATA[Marks a machine as reserved for a user]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="875" name="param" description="Login of the user to reserve the machine for" type="string" variable="$user">
            <type by_reference="false">string</type>
          </tag>
          <tag line="875" name="access" description="public"/>
          <tag line="875" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="882">
          <name>$user</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="896" package="Machine">
        <name>get_usage</name>
        <full_name>get_usage</full_name>
        <docblock line="890">
          <description><![CDATA[get_usage]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="890" name="access" description="public"/>
          <tag line="890" name="return" description="Usage of the machine" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="910" package="Machine">
        <name>set_usage</name>
        <full_name>set_usage</full_name>
        <docblock line="903">
          <description><![CDATA[set_usage]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="903" name="param" description="Usage of the machine" type="string" variable="$usage">
            <type by_reference="false">string</type>
          </tag>
          <tag line="903" name="access" description="public"/>
          <tag line="903" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="910">
          <name>$usage</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="923" package="Machine">
        <name>get_expires</name>
        <full_name>get_expires</full_name>
        <docblock line="917">
          <description><![CDATA[get_expires]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="917" name="access" description="public"/>
          <tag line="917" name="return" description="Expires date and release the machine if it's reservation has expired." type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="954" package="Machine">
        <name>get_expires_formated</name>
        <full_name>get_expires_formated</full_name>
        <docblock line="948">
          <description><![CDATA[get_expires]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="948" name="access" description="public"/>
          <tag line="948" name="return" description="Expires date formated." type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="970" package="Machine">
        <name>set_expires</name>
        <full_name>set_expires</full_name>
        <docblock line="963">
          <description><![CDATA[set_expires]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="963" name="param" description="Expiration date of the machine reservation." type="string" variable="$expires">
            <type by_reference="false">string</type>
          </tag>
          <tag line="963" name="access" description="public"/>
          <tag line="963" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="970">
          <name>$days</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="990" package="Machine">
        <name>get_reserved</name>
        <full_name>get_reserved</full_name>
        <docblock line="984">
          <description><![CDATA[get_reserved]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="984" name="access" description="public"/>
          <tag line="984" name="return" description="Reserved date." type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="1006" package="Machine">
        <name>set_reserved</name>
        <full_name>set_reserved</full_name>
        <docblock line="999">
          <description><![CDATA[set_reserved]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="999" name="param" description="Reservation date of the machine reservation." type="string" variable="$reserved">
            <type by_reference="false">string</type>
          </tag>
          <tag line="999" name="access" description="public"/>
          <tag line="999" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="1006">
          <name>$reserved</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="1019" package="Machine">
        <name>get_product</name>
        <full_name>get_product</full_name>
        <docblock line="1013">
          <description><![CDATA[get_product]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="1013" name="access" description="public"/>
          <tag line="1013" name="return" description="Product that the machine is running" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="1062" package="Machine">
        <name>get_kernel</name>
        <full_name>get_kernel</full_name>
        <docblock line="1056">
          <description><![CDATA[get_kernel]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="1056" name="access" description="public"/>
          <tag line="1056" name="return" description="Kernel version the machine is running" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="1090" package="Machine">
        <name>get_affiliation</name>
        <full_name>get_affiliation</full_name>
        <docblock line="1084">
          <description><![CDATA[get_affiliation]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="1084" name="access" description="public"/>
          <tag line="1084" name="return" description="Affiliation of the machine" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="1106" package="Machine">
        <name>set_affiliation</name>
        <full_name>set_affiliation</full_name>
        <docblock line="1097">
          <description><![CDATA[set_affiliation]]></description>
          <long-description><![CDATA[<p>Sets the affiliation of the machine</p>]]></long-description>
          <tag line="1097" name="param" description="Description of the affiliation" type="string" variable="$affiliation">
            <type by_reference="false">string</type>
          </tag>
          <tag line="1097" name="access" description="public"/>
          <tag line="1097" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="1106">
          <name>$affiliation</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="1119" package="Machine">
        <name>get_anomaly</name>
        <full_name>get_anomaly</full_name>
        <docblock line="1113">
          <description><![CDATA[get_anomaly]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="1113" name="access" description="public"/>
          <tag line="1113" name="return" description="Description of the anomalies of the machine" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="1133" package="Machine">
        <name>set_anomaly</name>
        <full_name>set_anomaly</full_name>
        <docblock line="1126">
          <description><![CDATA[Sets the anomalies description of the machine]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="1126" name="param" description="Description of the anomalies" type="string" variable="$anomaly">
            <type by_reference="false">string</type>
          </tag>
          <tag line="1126" name="access" description="public"/>
          <tag line="1126" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="1133">
          <name>$anomaly</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="1146" package="Machine">
        <name>get_notes</name>
        <full_name>get_notes</full_name>
        <docblock line="1140">
          <description><![CDATA[get_notes]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="1140" name="access" description="public"/>
          <tag line="1140" name="return" description="Notes for the machine (consisting of affiliation and anomalies, if any)" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="1157" package="Machine">
        <name>is_busy</name>
        <full_name>is_busy</full_name>
        <docblock line="1151">
          <description><![CDATA[is_busy]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="1151" name="access" description="public"/>
          <tag line="1151" name="return" description="true if a job is currently running on the machine; false otherwise" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="1167" package="Machine">
        <name>get_busy</name>
        <full_name>get_busy</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="1178" package="Machine">
        <name>set_busy</name>
        <full_name>set_busy</full_name>
        <docblock line="1171">
          <description><![CDATA[Sets the busy flag of the machine]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="1171" name="param" description="0 for free, 1 for job running." type="int" variable="$busy">
            <type by_reference="false">int</type>
          </tag>
          <tag line="1171" name="access" description="public"/>
          <tag line="1171" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="1178">
          <name>$busy</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="1196" package="Machine">
        <name>update_busy</name>
        <full_name>update_busy</full_name>
        <docblock line="1185">
          <description><![CDATA[Updates the busy flag of the machine.]]></description>
          <long-description><![CDATA[<p>If the busy flag is set to 2 (manually blocked), the flag
will not be changed. Otherwise it will be set to 1 if there
are still jobs running or 0 if no more jobs are running on
the machine.</p>]]></long-description>
          <tag line="1185" name="access" description="public"/>
          <tag line="1185" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="1211" package="Machine">
        <name>has_perm</name>
        <full_name>has_perm</full_name>
        <docblock line="1205">
          <description><![CDATA[has_perm]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="1205" name="access" description="public"/>
          <tag line="1205" name="return" description="true if a job is has perm_str on the machine; false otherwise" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
        <argument line="1211">
          <name>$perm_str</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="1229" package="Machine">
        <name>set_perm</name>
        <full_name>set_perm</full_name>
        <docblock line="1222">
          <description><![CDATA[Sets the perm flag of the machine.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="1222" name="param" description=": job,install,partition,boot" type="\str" variable="$perm_str">
            <type by_reference="false">\str</type>
          </tag>
          <tag line="1222" name="access" description="public"/>
          <tag line="1222" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="1229">
          <name>$perm_str</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="1243" package="Machine">
        <name>get_role</name>
        <full_name>get_role</full_name>
        <docblock line="1237">
          <description><![CDATA[get_role]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="1237" name="access" description="public"/>
          <tag line="1237" name="return" description="Role of the machine" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="1256" package="Machine">
        <name>get_type</name>
        <full_name>get_type</full_name>
        <docblock line="1250">
          <description><![CDATA[get_type]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="1250" name="access" description="public"/>
          <tag line="1250" name="return" description="Type of the machine" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="1269" package="Machine">
        <name>get_vh</name>
        <full_name>get_vh</full_name>
        <docblock line="1263">
          <description><![CDATA[get_vh]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="1263" name="access" description="public"/>
          <tag line="1263" name="return" description="VH (hostname or virtual host) of the machine (for VM only)" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="1282" package="Machine">
        <name>get_vh_id</name>
        <full_name>get_vh_id</full_name>
        <docblock line="1276">
          <description><![CDATA[get_vh_id]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="1276" name="access" description="public"/>
          <tag line="1276" name="return" description="of VH of the machine (for VM only)" type="\machine_id">
            <type by_reference="false">\machine_id</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="1297" package="Machine">
        <name>get_children</name>
        <full_name>get_children</full_name>
        <docblock line="1289">
          <description><![CDATA[get_children]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="1289" name="access" description="public"/>
          <tag line="1289" name="return" description="of Machine objects which represents virtual machines running on this VH. If this machine is not VH, NULL is returned." type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="1317" package="Machine">
        <name>get_current_configuration</name>
        <full_name>get_current_configuration</full_name>
        <docblock line="1311">
          <description><![CDATA[get_current_configuration]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="1311" name="access" description="public"/>
          <tag line="1311" name="return" description="The most recently used configuration for this machine" type="\Configuration">
            <type by_reference="false">\Configuration</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="1326" package="Machine">
        <name>get_current_configuration_id</name>
        <full_name>get_current_configuration_id</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="1335" package="Machine">
        <name>get_partition_bycid</name>
        <full_name>get_partition_bycid</full_name>
        <argument line="1335">
          <name>$cid</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="1355" package="Machine">
        <name>get_swap_bycid</name>
        <full_name>get_swap_bycid</full_name>
        <argument line="1355">
          <name>$cid</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="1376" package="Machine">
        <name>get_configurations</name>
        <full_name>get_configurations</full_name>
        <docblock line="1370">
          <description><![CDATA[get_configurations]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="1370" name="access" description="public"/>
          <tag line="1370" name="return" description="Array of all configurations ever attached to this machine" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="1399" package="Machine">
        <name>get_all_jobs</name>
        <full_name>get_all_jobs</full_name>
        <docblock line="1390">
          <description><![CDATA[get_all_jobs]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="1390" name="param" description="Optional. Maximal number of jobs to return." type="int" variable="$limit">
            <type by_reference="false">int</type>
          </tag>
          <tag line="1390" name="param" description="Optional. Number of first row to be returned." type="int" variable="$start">
            <type by_reference="false">int</type>
          </tag>
          <tag line="1390" name="access" description="public"/>
          <tag line="1390" name="return" description="Array of all jobs executed on this machine, including pending jobs" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="1399">
          <name>$limit</name>
          <default><![CDATA[0]]></default>
          <type/>
        </argument>
        <argument line="1399">
          <name>$start</name>
          <default><![CDATA[0]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="1426" package="Machine">
        <name>count_all_jobs</name>
        <full_name>count_all_jobs</full_name>
        <docblock line="1419">
          <description><![CDATA[count_all_jobs]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="1419" name="access" description="public"/>
          <tag line="1419" name="return" description="Number of all jobs executed on this machine, including pending jobs" type="int">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="1446" package="Machine">
        <name>count_running_jobs</name>
        <full_name>count_running_jobs</full_name>
        <docblock line="1440">
          <description><![CDATA[count_running_jobs]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="1440" name="access" description="public"/>
          <tag line="1440" name="return" description="Number of all jobs currently running on this machine" type="int">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="1469" package="Machine">
        <name>get_jobs_by_active</name>
        <full_name>get_jobs_by_active</full_name>
        <docblock line="1460">
          <description><![CDATA[get_jobs_by_active]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="1460" name="param" description="true if active machines should be searched, false if inactive machines should be searched" type="bool" variable="$active">
            <type by_reference="false">bool</type>
          </tag>
          <tag line="1460" name="param" description="" type="int" variable="$limit">
            <type by_reference="false">int</type>
          </tag>
          <tag line="1460" name="access" description="public"/>
          <tag line="1460" name="return" description="Array of jobs that are currently (in)active" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="1469">
          <name>$active</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="1469">
          <name>$limit</name>
          <default><![CDATA[0]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="private" namespace="global" line="1491" package="Machine">
        <name>get_master_socket</name>
        <full_name>get_master_socket</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="1528" package="Machine">
        <name>send_job</name>
        <full_name>send_job</full_name>
        <docblock line="1517">
          <description><![CDATA[send_job]]></description>
          <long-description><![CDATA[<p>Sends a job to the machine by the HAMSTA master commandline interface</p>]]></long-description>
          <tag line="1517" name="param" description="Filename of the XML job description on the master. This is not a local filename!" type="string" variable="$filename">
            <type by_reference="false">string</type>
          </tag>
          <tag line="1517" name="access" description="public"/>
          <tag line="1517" name="return" description="true if the job could be send; false on error" type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
        <argument line="1528">
          <name>$filename</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="1558" package="Machine">
        <name>get_architectures</name>
        <full_name>get_architectures</full_name>
        <docblock line="1550">
          <description><![CDATA[get_architectures]]></description>
          <long-description><![CDATA[<p>Note: This gets the <em>current</em> architectures of the machines (i.e. what they are currently installed to).
To get the <em>real</em> (capable) architecture of the machines, use get_architectures_capable().</p>]]></long-description>
          <tag line="1550" name="return" description="(key=&gt;val): All current (installed) architectures present in the database" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="1578" package="Machine">
        <name>get_architectures_capable</name>
        <full_name>get_architectures_capable</full_name>
        <docblock line="1570">
          <description><![CDATA[get_architectures_capable]]></description>
          <long-description><![CDATA[<p>Note: This gets the <em>real</em> architectures of the machines (i.e. what they are capable of, but not necessarily installed to).
To get the currently installed architectures of the machines, use get_architectures().</p>]]></long-description>
          <tag line="1570" name="return" description="(key=&gt;val): All real (capable) architectures present in the database" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="1597" package="Machine">
        <name>get_statuses</name>
        <full_name>get_statuses</full_name>
        <docblock line="1590">
          <description><![CDATA[get_statuses]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="1590" name="return" description="All possible statuses. The returned array is an associative array using the status ID as key and its name as value." type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="1619" package="Machine">
        <name>del_machine</name>
        <full_name>del_machine</full_name>
        <docblock line="1609">
          <description><![CDATA[del_machine]]></description>
          <long-description><![CDATA[<p>Removes a machine from hamsta.</p>]]></long-description>
          <tag line="1609" name="param" description="Machine to remove from hamsta" type="\Machine" variable="$machine">
            <type by_reference="false">\Machine</type>
          </tag>
          <tag line="1609" name="return" description="true if the machine could be deleted, false if no machine has been deleted." type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="1648" package="Machine">
        <name>get_log_entries</name>
        <full_name>get_log_entries</full_name>
        <docblock line="1641">
          <description><![CDATA[get_log_entries]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="1641" name="param" description="Database ID of the machine" type="int" variable="$id">
            <type by_reference="false">int</type>
          </tag>
          <tag line="1641" name="access" description="public"/>
          <tag line="1641" name="return" description="Log array" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="1648">
          <name>$id</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="1648">
          <name>$limit</name>
          <default><![CDATA[0]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="1677" package="Machine">
        <name>merge_other_machine</name>
        <full_name>merge_other_machine</full_name>
        <docblock line="1667">
          <description><![CDATA[merge_other_machines]]></description>
          <long-description><![CDATA[<p>Steals related information from other machine. The caller should delete the machine after.</p>]]></long-description>
          <tag line="1667" name="param" description="machine_id of the other machine" type="int" variable="$other_id">
            <type by_reference="false">int</type>
          </tag>
          <tag line="1667" name="access" description="public"/>
          <tag line="1667" name="return" description="true if the operation succeeded" type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
        <argument line="1677">
          <name>$other_id</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="1698" package="Machine">
        <name>_purge</name>
        <full_name>_purge</full_name>
        <docblock line="1691">
          <description><![CDATA[Purges one sort of the related records - hwinfo history, logs, jobs, or groups.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="1691" name="param" description="(group_machine|log|job_on_machine|config)" type="string" variable="$table">
            <type by_reference="false">string</type>
          </tag>
          <tag line="1691" name="access" description="protected"/>
          <tag line="1691" name="return" description="true if succeeded" type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
        <argument line="1698">
          <name>$table</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="1713" package="Machine">
        <name>purge_config_history</name>
        <full_name>purge_config_history</full_name>
        <docblock line="1707">
          <description><![CDATA[Purges machine's hwinfo history.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="1707" name="access" description="public"/>
          <tag line="1707" name="return" description="true if succeeded" type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="1729" package="Machine">
        <name>purge_group_membership</name>
        <full_name>purge_group_membership</full_name>
        <docblock line="1723">
          <description><![CDATA[Purges machine's group memberships.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="1723" name="access" description="public"/>
          <tag line="1723" name="return" description="true if succeeded" type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="1739" package="Machine">
        <name>purge_job_history</name>
        <full_name>purge_job_history</full_name>
        <docblock line="1733">
          <description><![CDATA[Purges machine's job history]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="1733" name="access" description="public"/>
          <tag line="1733" name="return" description="True if succeeded." type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="1755" package="Machine">
        <name>purge_log</name>
        <full_name>purge_log</full_name>
        <docblock line="1749">
          <description><![CDATA[Purges machine's logs]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="1749" name="access" description="public"/>
          <tag line="1749" name="return" description="True if succeeded." type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="1806" package="Machine">
        <name>get</name>
        <full_name>get</full_name>
        <docblock line="1798">
          <description><![CDATA[Generic getter function.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="1798" name="param" description="Name of the field to get, as in the DB." type="string" variable="$field">
            <type by_reference="false">string</type>
          </tag>
          <tag line="1798" name="access" description="public"/>
          <tag line="1798" name="return" description="The value of the field, or null if NULL/error/unknown field." type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="1806">
          <name>$field</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="1826" package="Machine">
        <name>set</name>
        <full_name>set</full_name>
        <docblock line="1817">
          <description><![CDATA[Generic setter function.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="1817" name="param" description="Name of the field to set, as in the DB." type="string" variable="$field">
            <type by_reference="false">string</type>
          </tag>
          <tag line="1817" name="param" description="Value to be set here (caller responsible for proper value)." type="string" variable="$value">
            <type by_reference="false">string</type>
          </tag>
          <tag line="1817" name="access" description="public"/>
          <tag line="1817" name="return" description="true if the update succeeds" type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
        <argument line="1826">
          <name>$field</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="1826">
          <name>$value</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="1852" package="Machine">
        <name>enumerate</name>
        <full_name>enumerate</full_name>
        <docblock line="1840">
          <description><![CDATA[Reads enum values.]]></description>
          <long-description><![CDATA[<p>This can be used to list all combinations, its matching
subset, or just a single value.</p>]]></long-description>
          <tag line="1840" name="access" description="public"/>
          <tag line="1840" name="param" description="Name of the field to enumerate (must have the proper type)" type="string" variable="$field">
            <type by_reference="false">string</type>
          </tag>
          <tag line="1840" name="param" description="Null to return all possibilities, ID (scalar) to return single name, array of IDs to return a matching subset" type="mixed" variable="$values">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="1840" name="return" description="the matching name for a scalar $values, array (matching) IDs=&gt;names otherwise." type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
        <argument line="1852">
          <name>$field</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="1852">
          <name>$values</name>
          <default><![CDATA[null]]></default>
          <type/>
        </argument>
      </method>
    </class>
    <class final="false" abstract="false" namespace="global" line="1896" package="Hamsta">
      <extends/>
      <name>MachineSearch</name>
      <full_name>\MachineSearch</full_name>
      <docblock line="1888">
        <description><![CDATA[MachineSearch]]></description>
        <long-description><![CDATA[<p>Manages a search for machines
'=' for exact matching , 'LIKE' for SQL LIKE matching</p>]]></long-description>
        <tag line="1888" name="version" description="$Rev: 1841 $"/>
        <tag line="1888" name="author" description="Kevin Wolf &lt;kwolf@suse.de&gt;"/>
      </docblock>
      <constant namespace="global" line="1898" package="Hamsta">
        <name>FILTER_EQUALS</name>
        <full_name>FILTER_EQUALS</full_name>
        <value><![CDATA[1]]></value>
      </constant>
      <constant namespace="global" line="1899" package="Hamsta">
        <name>FILTER_LIKE</name>
        <full_name>FILTER_LIKE</full_name>
        <value><![CDATA[2]]></value>
      </constant>
      <constant namespace="global" line="1900" package="Hamsta">
        <name>FILTER_IN</name>
        <full_name>FILTER_IN</full_name>
        <value><![CDATA[3]]></value>
      </constant>
      <property final="false" static="false" visibility="private" line="1901" namespace="global" package="Hamsta">
        <name>$where</name>
        <default><![CDATA[]]></default>
      </property>
      <property final="false" static="false" visibility="private" line="1902" namespace="global" package="Hamsta">
        <name>$params</name>
        <default><![CDATA[]]></default>
      </property>
      <property final="false" static="false" visibility="private" line="1903" namespace="global" package="Hamsta">
        <name>$tables</name>
        <default><![CDATA[]]></default>
      </property>
      <property final="false" static="false" visibility="private" line="1904" namespace="global" package="Hamsta">
        <name>$postfilters</name>
        <default><![CDATA[]]></default>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="1912" package="Hamsta">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <docblock line="1905">
          <description><![CDATA[__construct]]></description>
          <long-description><![CDATA[<p>Creates a new MachineSeach object</p>]]></long-description>
          <tag line="1905" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="1927" package="Hamsta">
        <name>query</name>
        <full_name>query</full_name>
        <docblock line="1920">
          <description><![CDATA[query]]></description>
          <long-description><![CDATA[<p>Performs the search on the database</p>]]></long-description>
          <tag line="1920" name="return" description="Array of matching Machine objects; null on error" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="1975" package="Hamsta">
        <name>add_condition</name>
        <full_name>add_condition</full_name>
        <docblock line="1965">
          <description><![CDATA[add_condition]]></description>
          <long-description><![CDATA[<p>Adds a condition based on the attributes of the machine itself to
the query. This function cannot be used for matching modules or
module elements.</p>]]></long-description>
          <tag line="1965" name="return" description="true if the condition could be added to the search; false on error" type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
        <argument line="1975">
          <name>$field</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="1975">
          <name>$value</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="1975">
          <name>$operator</name>
          <default><![CDATA['=']]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="2020" package="Hamsta">
        <name>add_table</name>
        <full_name>add_table</full_name>
        <docblock line="2011">
          <description><![CDATA[add_table]]></description>
          <long-description><![CDATA[<p>Adds another table to the SQL query</p>]]></long-description>
          <tag line="2011" name="param" description="Name of the table to add" type="string" variable="$table">
            <type by_reference="false">string</type>
          </tag>
          <tag line="2011" name="param" description="SQL condition used to perform the join" type="string" variable="$join_condition">
            <type by_reference="false">string</type>
          </tag>
          <tag line="2011" name="return" description="true on success; false otherwise" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
        <argument line="2020">
          <name>$table</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="2020">
          <name>$join_condition</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="2046" package="Hamsta">
        <name>add_postfilter</name>
        <full_name>add_postfilter</full_name>
        <docblock line="2034">
          <description><![CDATA[add_postfilter]]></description>
          <long-description><![CDATA[<p>Adds a filter implemented in PHP. As these filters require the database
to read out all rows in the first place because the filtering is done
by PHP code, these filters are not as efficient as SQL conditions.</p>

<p>Whenever possible choose a SQL condition instead.</p>]]></long-description>
          <tag line="2034" name="param" description="" type="\Filter" variable="$filter">
            <type by_reference="false">\Filter</type>
          </tag>
          <tag line="2034" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="2046">
          <name>$filter</name>
          <default><![CDATA[]]></default>
          <type>\Filter</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="2058" package="Hamsta">
        <name>filter_in_array</name>
        <full_name>filter_in_array</full_name>
        <docblock line="2050">
          <description><![CDATA[filter_in_array]]></description>
          <long-description><![CDATA[<p>Filters for machines whose ID is in the given array</p>]]></long-description>
          <tag line="2050" name="param" description="Array of the IDs of all machines to find" type="array" variable="$ids">
            <type by_reference="false">array</type>
          </tag>
          <tag line="2050" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="2058">
          <name>$ids</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="2070" package="Hamsta">
        <name>filter_group</name>
        <full_name>filter_group</full_name>
        <docblock line="2062">
          <description><![CDATA[filter_group]]></description>
          <long-description><![CDATA[<p>Filters for machines belonging to the given group</p>]]></long-description>
          <tag line="2062" name="param" description="Group name" type="string" variable="$group_name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="2062" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="2070">
          <name>$group_name</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="2084" package="Hamsta">
        <name>filter_architecture</name>
        <full_name>filter_architecture</full_name>
        <docblock line="2076">
          <description><![CDATA[filter_architecture]]></description>
          <long-description><![CDATA[<p>Filter for machines of a given architecture</p>]]></long-description>
          <tag line="2076" name="param" description="Name or substring of the architecture" type="string" variable="$arch">
            <type by_reference="false">string</type>
          </tag>
          <tag line="2076" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="2084">
          <name>$arch</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="2084">
          <name>$operator</name>
          <default><![CDATA['=']]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="2099" package="Hamsta">
        <name>filter_architecture_capable</name>
        <full_name>filter_architecture_capable</full_name>
        <docblock line="2091">
          <description><![CDATA[filter_architecture_capable]]></description>
          <long-description><![CDATA[<p>Filter for machines of a given architecture (this is CPU or capable arch)</p>]]></long-description>
          <tag line="2091" name="param" description="Name or substring of the architecture" type="string" variable="$arch">
            <type by_reference="false">string</type>
          </tag>
          <tag line="2091" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="2099">
          <name>$arch</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="2099">
          <name>$operator</name>
          <default><![CDATA['=']]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="2114" package="Hamsta">
        <name>filter_status_string</name>
        <full_name>filter_status_string</full_name>
        <docblock line="2106">
          <description><![CDATA[filter_status]]></description>
          <long-description><![CDATA[<p>Filter for machines in a given status</p>]]></long-description>
          <tag line="2106" name="param" description="ID of the status to search for" type="string" variable="$status_id">
            <type by_reference="false">string</type>
          </tag>
          <tag line="2106" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="2114">
          <name>$status_id</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="2114">
          <name>$operator</name>
          <default><![CDATA['=']]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="2127" package="Hamsta">
        <name>filter_maintainer_string</name>
        <full_name>filter_maintainer_string</full_name>
        <docblock line="2119">
          <description><![CDATA[Simple filer group.]]></description>
          <long-description><![CDATA[<p>In this group, the condition string is right in the machine table, so we don't need to add_table. This group could be extended.
Now it includes:
maintainer_string, used_by, usage, kernel, serialconsole, powerswitch</p>]]></long-description>
          <tag line="2119" name="param" description="is the column name" type="string" variable="$value">
            <type by_reference="false">string</type>
          </tag>
          <tag line="2119" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="2127">
          <name>$value</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="2127">
          <name>$operator</name>
          <default><![CDATA['=']]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="2130" package="Hamsta">
        <name>filter_used_by</name>
        <full_name>filter_used_by</full_name>
        <argument line="2130">
          <name>$value</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="2130">
          <name>$operator</name>
          <default><![CDATA['=']]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="2133" package="Hamsta">
        <name>filter_usage</name>
        <full_name>filter_usage</full_name>
        <argument line="2133">
          <name>$value</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="2133">
          <name>$operator</name>
          <default><![CDATA['=']]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="2136" package="Hamsta">
        <name>filter_kernel</name>
        <full_name>filter_kernel</full_name>
        <argument line="2136">
          <name>$value</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="2136">
          <name>$operator</name>
          <default><![CDATA['=']]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="2139" package="Hamsta">
        <name>filter_serialconsole</name>
        <full_name>filter_serialconsole</full_name>
        <argument line="2139">
          <name>$value</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="2139">
          <name>$operator</name>
          <default><![CDATA['=']]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="2142" package="Hamsta">
        <name>filter_powerswitch</name>
        <full_name>filter_powerswitch</full_name>
        <argument line="2142">
          <name>$value</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="2142">
          <name>$operator</name>
          <default><![CDATA['=']]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="2154" package="Hamsta">
        <name>filter_vh</name>
        <full_name>filter_vh</full_name>
        <docblock line="2146">
          <description><![CDATA[filter_vh]]></description>
          <long-description><![CDATA[<p>Filter for machines with a given VH</p>]]></long-description>
          <tag line="2146" name="param" description="ID of the VH to search for" type="string" variable="$vh_id">
            <type by_reference="false">string</type>
          </tag>
          <tag line="2146" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="2154">
          <name>$vh_id</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="2154">
          <name>$operator</name>
          <default><![CDATA['=']]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="2166" package="Hamsta">
        <name>filter_role</name>
        <full_name>filter_role</full_name>
        <docblock line="2158">
          <description><![CDATA[filter_role]]></description>
          <long-description><![CDATA[<p>Filter for machines with a given role</p>]]></long-description>
          <tag line="2158" name="param" description="to search for" type="string" variable="$role">
            <type by_reference="false">string</type>
          </tag>
          <tag line="2158" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="2166">
          <name>$role</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="2166">
          <name>$operator</name>
          <default><![CDATA['=']]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="2181" package="Hamsta">
        <name>filter_module_description</name>
        <full_name>filter_module_description</full_name>
        <docblock line="2172">
          <description><![CDATA[filter_module_description]]></description>
          <long-description><![CDATA[<p>Filter for machines with a module matching the given description</p>]]></long-description>
          <tag line="2172" name="param" description="Name of the module (e.g. &quot;netcard&quot;)" type="string" variable="$module">
            <type by_reference="false">string</type>
          </tag>
          <tag line="2172" name="param" description="Description to search for" type="string" variable="$description">
            <type by_reference="false">string</type>
          </tag>
          <tag line="2172" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="2181">
          <name>$module</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="2181">
          <name>$description</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="2181">
          <name>$operator</name>
          <default><![CDATA['=']]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="2194" package="Hamsta">
        <name>filter_module_driver</name>
        <full_name>filter_module_driver</full_name>
        <docblock line="2185">
          <description><![CDATA[filter_module_driver]]></description>
          <long-description><![CDATA[<p>Filter for machines with a module matching the given driver</p>]]></long-description>
          <tag line="2185" name="param" description="Name of the module (e.g. &quot;netcard&quot;)" type="string" variable="$module">
            <type by_reference="false">string</type>
          </tag>
          <tag line="2185" name="param" description="Name of the drive to search for (e.g. &quot;tg3&quot;)" type="string" variable="$driver">
            <type by_reference="false">string</type>
          </tag>
          <tag line="2185" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="2194">
          <name>$module</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="2194">
          <name>$driver</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="2194">
          <name>$operator</name>
          <default><![CDATA['=']]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="2209" package="Hamsta">
        <name>filter_module_element</name>
        <full_name>filter_module_element</full_name>
        <docblock line="2198">
          <description><![CDATA[filter_module_element]]></description>
          <long-description><![CDATA[<p>Filter for machines where a element of the given modules matches the
given name and value.</p>]]></long-description>
          <tag line="2198" name="param" description="Name of the module (e.g. &quot;netcard&quot;)" type="string" variable="$module">
            <type by_reference="false">string</type>
          </tag>
          <tag line="2198" name="param" description="Name of the element (e.g. &quot;Vendor&quot;)" type="string" variable="$element">
            <type by_reference="false">string</type>
          </tag>
          <tag line="2198" name="param" description="Name of the value to search for" type="string" variable="$value">
            <type by_reference="false">string</type>
          </tag>
          <tag line="2198" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="2209">
          <name>$module</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="2209">
          <name>$element</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="2209">
          <name>$value</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="2209">
          <name>$operator</name>
          <default><![CDATA['=']]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="2223" package="Hamsta">
        <name>filter_anything</name>
        <full_name>filter_anything</full_name>
        <docblock line="2213">
          <description><![CDATA[filter_anything]]></description>
          <long-description><![CDATA[<p>Performs a search on all elements of all modules of a machine. The
machine is returned if name or value of any of these elements match
the given text.</p>]]></long-description>
          <tag line="2213" name="param" description="Text to search for" type="string" variable="$text">
            <type by_reference="false">string</type>
          </tag>
          <tag line="2213" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="2223">
          <name>$text</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="2223">
          <name>$operator</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
    </class>
    <class final="false" abstract="false" namespace="global" line="2246" package="Hamsta">
      <extends/>
      <name>Filter</name>
      <full_name>\Filter</full_name>
      <docblock line="2237">
        <description><![CDATA[Filter]]></description>
        <long-description><![CDATA[<p>Defined a PHP filter for machine searches. You cannot use Filter itself,
instead use its subclasses.</p>]]></long-description>
        <tag line="2237" name="version" description="$Rev: 1841 $"/>
        <tag line="2237" name="author" description="Kevin Wolf &lt;kwolf@suse.de&gt;"/>
      </docblock>
      <property final="false" static="false" visibility="protected" line="2247" namespace="global" package="Hamsta">
        <name>$operator</name>
        <default><![CDATA[]]></default>
      </property>
      <method final="false" abstract="true" static="false" visibility="public" namespace="global" line="2255" package="Hamsta">
        <name>matches</name>
        <full_name>matches</full_name>
        <docblock line="2249">
          <description><![CDATA[matches]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="2249" name="param" description="Machine to be checked" type="\Machine" variable="$machine">
            <type by_reference="false">\Machine</type>
          </tag>
          <tag line="2249" name="return" description="true if the given machine matches the filter; false otherwise" type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
        <argument line="2255">
          <name>$machine</name>
          <default><![CDATA[]]></default>
          <type>\Machine</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="2266" package="Hamsta">
        <name>set_operator</name>
        <full_name>set_operator</full_name>
        <docblock line="2257">
          <description><![CDATA[set_operator]]></description>
          <long-description><![CDATA[<p>Sets the matching operator to be used for the filter. This operator may
or may not be used by a Filter.</p>]]></long-description>
          <tag line="2257" name="param" description="('=' or 'LIKE')" type="\$operator" variable="$operator">
            <type by_reference="false">\$operator</type>
          </tag>
          <tag line="2257" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="2266">
          <name>$operator</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
    </class>
    <class final="false" abstract="false" namespace="global" line="2280" package="Hamsta">
      <extends>\Filter</extends>
      <name>FilterModuleDescription</name>
      <full_name>\FilterModuleDescription</full_name>
      <docblock line="2271">
        <description><![CDATA[FilterModuleDescription]]></description>
        <long-description><![CDATA[<p>Filters for machines with a module with given description.
Supports exact matching only.</p>]]></long-description>
        <tag line="2271" name="version" description="$Rev: 1841 $"/>
        <tag line="2271" name="author" description="Kevin Wolf &lt;kwolf@suse.de&gt;"/>
      </docblock>
      <property final="false" static="false" visibility="private" line="2281" namespace="global" package="Hamsta">
        <name>$module</name>
        <default><![CDATA[]]></default>
      </property>
      <property final="false" static="false" visibility="private" line="2282" namespace="global" package="Hamsta">
        <name>$description</name>
        <default><![CDATA[]]></default>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="2291" package="Hamsta">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <docblock line="2284">
          <description><![CDATA[__construct]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="2284" name="param" description="Name of the module (e.g. &quot;netcard&quot;)" type="mixed" variable="$module">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="2284" name="param" description="Description to search for" type="mixed" variable="$description">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="2284" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="2291">
          <name>$module</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="2291">
          <name>$description</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="2301" package="Hamsta">
        <name>matches</name>
        <full_name>matches</full_name>
        <docblock line="2296">
          <description><![CDATA[matches]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="2296" name="see" description="\global\Filter::matches()" refers="\global\Filter::matches()"/>
        </docblock>
        <argument line="2301">
          <name>$machine</name>
          <default><![CDATA[]]></default>
          <type>\Machine</type>
        </argument>
      </method>
    </class>
    <class final="false" abstract="false" namespace="global" line="2325" package="Hamsta">
      <extends>\Filter</extends>
      <name>FilterModuleDriver</name>
      <full_name>\FilterModuleDriver</full_name>
      <docblock line="2316">
        <description><![CDATA[FilterModuleDriver]]></description>
        <long-description><![CDATA[<p>Filters for machines with a module with given driver.
Supports exact matching only.</p>]]></long-description>
        <tag line="2316" name="version" description="$Rev: 1841 $"/>
        <tag line="2316" name="author" description="Kevin Wolf &lt;kwolf@suse.de&gt;"/>
      </docblock>
      <property final="false" static="false" visibility="private" line="2326" namespace="global" package="Hamsta">
        <name>$module</name>
        <default><![CDATA[]]></default>
      </property>
      <property final="false" static="false" visibility="private" line="2327" namespace="global" package="Hamsta">
        <name>$driver</name>
        <default><![CDATA[]]></default>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="2336" package="Hamsta">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <docblock line="2329">
          <description><![CDATA[__construct]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="2329" name="param" description="Name of the module (e.g. &quot;netcard&quot;)" type="mixed" variable="$module">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="2329" name="param" description="Driver name to search for" type="mixed" variable="$driver">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="2329" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="2336">
          <name>$module</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="2336">
          <name>$driver</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="2346" package="Hamsta">
        <name>matches</name>
        <full_name>matches</full_name>
        <docblock line="2341">
          <description><![CDATA[matches]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="2341" name="see" description="\global\Filter::matches()" refers="\global\Filter::matches()"/>
        </docblock>
        <argument line="2346">
          <name>$machine</name>
          <default><![CDATA[]]></default>
          <type>\Machine</type>
        </argument>
      </method>
    </class>
    <class final="false" abstract="false" namespace="global" line="2370" package="Hamsta">
      <extends>\Filter</extends>
      <name>FilterModuleElement</name>
      <full_name>\FilterModuleElement</full_name>
      <docblock line="2360">
        <description><![CDATA[FilterModuleElement]]></description>
        <long-description><![CDATA[<p>Filters for machines where the value a given element of a module matches
a given text.
Supports exact matching only.</p>]]></long-description>
        <tag line="2360" name="version" description="$Rev: 1841 $"/>
        <tag line="2360" name="author" description="Kevin Wolf &lt;kwolf@suse.de&gt;"/>
      </docblock>
      <property final="false" static="false" visibility="private" line="2371" namespace="global" package="Hamsta">
        <name>$module</name>
        <default><![CDATA[]]></default>
      </property>
      <property final="false" static="false" visibility="private" line="2372" namespace="global" package="Hamsta">
        <name>$element</name>
        <default><![CDATA[]]></default>
      </property>
      <property final="false" static="false" visibility="private" line="2373" namespace="global" package="Hamsta">
        <name>$value</name>
        <default><![CDATA[]]></default>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="2383" package="Hamsta">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <docblock line="2375">
          <description><![CDATA[__construct]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="2375" name="param" description="Name of the module (e.g. &quot;netcard&quot;)" type="mixed" variable="$module">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="2375" name="param" description="Name of the element of the module (e.g. &quot;Vendor&quot;)" type="mixed" variable="$element">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="2375" name="param" description="Element value to search for" type="mixed" variable="$value">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="2375" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="2383">
          <name>$module</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="2383">
          <name>$element</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="2383">
          <name>$value</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="2394" package="Hamsta">
        <name>matches</name>
        <full_name>matches</full_name>
        <docblock line="2389">
          <description><![CDATA[matches]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="2389" name="see" description="\global\Filter::matches()" refers="\global\Filter::matches()"/>
        </docblock>
        <argument line="2394">
          <name>$machine</name>
          <default><![CDATA[]]></default>
          <type>\Machine</type>
        </argument>
      </method>
    </class>
    <markers>
      <todo line="2170">add filter by type (more complicated!)</todo>
    </markers>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file machine.php</error>
      <error line="1666" code="50018">No DocBlock was found for property $related_tables</error>
      <error line="1763" code="50018">No DocBlock was found for property $field_types</error>
      <error line="245" code="50015">Argument $module_name is missing from the Docblock of get_hwelement()</error>
      <error line="245" code="50015">Argument $element_name is missing from the Docblock of get_hwelement()</error>
      <error line="286" code="50010">No DocBlock was found for method get_memory_size()</error>
      <error line="289" code="50010">No DocBlock was found for method get_disk_size()</error>
      <error line="292" code="50010">No DocBlock was found for method get_cpu_vendor()</error>
      <error line="301" code="50010">No DocBlock was found for method get_vmusedmemory()</error>
      <error line="305" code="50010">No DocBlock was found for method get_avaivmdisk()</error>
      <error line="309" code="50010">No DocBlock was found for method get_ishwvirt()</error>
      <error line="331" code="50010">No DocBlock was found for method get_rpm_list()</error>
      <notice line="518" code="50013">Parameter $powertype could not be found in check_powertype()</notice>
      <error line="868" code="50010">No DocBlock was found for method get_used_by_name()</error>
      <error line="963" code="50014">Name of argument $days does not match with the DocBlock's name $expires in set_expires()</error>
      <notice line="963" code="50013">Parameter $expires could not be found in set_expires()</notice>
      <error line="1167" code="50010">No DocBlock was found for method get_busy()</error>
      <error line="1205" code="50015">Argument $perm_str is missing from the Docblock of has_perm()</error>
      <error line="1326" code="50010">No DocBlock was found for method get_current_configuration_id()</error>
      <error line="1335" code="50010">No DocBlock was found for method get_partition_bycid()</error>
      <error line="1355" code="50010">No DocBlock was found for method get_swap_bycid()</error>
      <error line="1491" code="50010">No DocBlock was found for method get_master_socket()</error>
      <notice line="1609" code="50013">Parameter $machine could not be found in del_machine()</notice>
      <error line="1641" code="50015">Argument $limit is missing from the Docblock of get_log_entries()</error>
      <error line="1901" code="50018">No DocBlock was found for property $where</error>
      <error line="1902" code="50018">No DocBlock was found for property $params</error>
      <error line="1903" code="50018">No DocBlock was found for property $tables</error>
      <error line="1904" code="50018">No DocBlock was found for property $postfilters</error>
      <error line="1965" code="50015">Argument $field is missing from the Docblock of add_condition()</error>
      <error line="1965" code="50015">Argument $value is missing from the Docblock of add_condition()</error>
      <error line="1965" code="50015">Argument $operator is missing from the Docblock of add_condition()</error>
      <error line="2076" code="50015">Argument $operator is missing from the Docblock of filter_architecture()</error>
      <error line="2091" code="50015">Argument $operator is missing from the Docblock of filter_architecture_capable()</error>
      <error line="2106" code="50015">Argument $operator is missing from the Docblock of filter_status_string()</error>
      <error line="2119" code="50015">Argument $operator is missing from the Docblock of filter_maintainer_string()</error>
      <error line="2130" code="50010">No DocBlock was found for method filter_used_by()</error>
      <error line="2133" code="50010">No DocBlock was found for method filter_usage()</error>
      <error line="2136" code="50010">No DocBlock was found for method filter_kernel()</error>
      <error line="2139" code="50010">No DocBlock was found for method filter_serialconsole()</error>
      <error line="2142" code="50010">No DocBlock was found for method filter_powerswitch()</error>
      <error line="2146" code="50015">Argument $operator is missing from the Docblock of filter_vh()</error>
      <error line="2158" code="50015">Argument $operator is missing from the Docblock of filter_role()</error>
      <error line="2172" code="50015">Argument $operator is missing from the Docblock of filter_module_description()</error>
      <error line="2185" code="50015">Argument $operator is missing from the Docblock of filter_module_driver()</error>
      <error line="2198" code="50015">Argument $operator is missing from the Docblock of filter_module_element()</error>
      <error line="2213" code="50015">Argument $operator is missing from the Docblock of filter_anything()</error>
      <error line="2247" code="50018">No DocBlock was found for property $operator</error>
      <error line="2281" code="50018">No DocBlock was found for property $module</error>
      <error line="2282" code="50018">No DocBlock was found for property $description</error>
      <error line="2296" code="50015">Argument $machine is missing from the Docblock of matches()</error>
      <error line="2326" code="50018">No DocBlock was found for property $module</error>
      <error line="2327" code="50018">No DocBlock was found for property $driver</error>
      <error line="2341" code="50015">Argument $machine is missing from the Docblock of matches()</error>
      <error line="2371" code="50018">No DocBlock was found for property $module</error>
      <error line="2372" code="50018">No DocBlock was found for property $element</error>
      <error line="2373" code="50018">No DocBlock was found for property $value</error>
      <error line="2389" code="50015">Argument $machine is missing from the Docblock of matches()</error>
    </parse_markers>
  </file>
  <file path="configuration.php" hash="22208f60f37563dd7a56241cbc9c6bfc" package="Hamsta">
    <class final="false" abstract="false" namespace="global" line="36" package="Configuration">
      <extends/>
      <name>Configuration</name>
      <full_name>\Configuration</full_name>
      <docblock line="3">
        <description><![CDATA[Represents a configuration of a machine at one time.]]></description>
        <long-description><![CDATA[<p>A configuration consists of all the hardware of the machine.
Provides methods for different types of authentication and logout
procedures.</p>]]></long-description>
        <tag line="3" name="package" description="Configuration"/>
        <tag line="3" name="author" description="Kevin Wolf &lt;kwolf@suse.de&gt;"/>
        <tag line="3" name="version" description="$Rev: 1696 $"/>
        <tag line="3" name="copyright" description="Copyright (c) 2013 Unpublished Work of SUSE. All Rights Reserved.&lt;br /&gt;&#10;&lt;br /&gt;&#10;THIS IS AN UNPUBLISHED WORK OF SUSE.  IT CONTAINS SUSE'S&#10;CONFIDENTIAL, PROPRIETARY, AND TRADE SECRET INFORMATION.  SUSE&#10;RESTRICTS THIS WORK TO SUSE EMPLOYEES WHO NEED THE WORK TO PERFORM&#10;THEIR ASSIGNMENTS AND TO THIRD PARTIES AUTHORIZED BY SUSE IN WRITING.&#10;THIS WORK IS SUBJECT TO U.S. AND INTERNATIONAL COPYRIGHT LAWS AND&#10;TREATIES. IT MAY NOT BE USED, COPIED, DISTRIBUTED, DISCLOSED, ADAPTED,&#10;PERFORMED, DISPLAYED, COLLECTED, COMPILED, OR LINKED WITHOUT SUSE'S&#10;PRIOR WRITTEN CONSENT. USE OR EXPLOITATION OF THIS WORK WITHOUT&#10;AUTHORIZATION COULD SUBJECT THE PERPETRATOR TO CRIMINAL AND  CIVIL&#10;LIABILITY.&lt;br /&gt;&#10;&lt;br /&gt;&#10;SUSE PROVIDES THE WORK 'AS IS,' WITHOUT ANY EXPRESS OR IMPLIED&#10;WARRANTY, INCLUDING WITHOUT THE IMPLIED WARRANTIES OF MERCHANTABILITY,&#10;FITNESS FOR A PARTICULAR PURPOSE, AND NON-INFRINGEMENT. SUSE, THE&#10;AUTHORS OF THE WORK, AND THE OWNERS OF COPYRIGHT IN THE WORK ARE NOT&#10;LIABLE FOR ANY CLAIM, DAMAGES, OR OTHER LIABILITY, WHETHER IN AN ACTION&#10;OF CONTRACT, TORT, OR OTHERWISE, ARISING FROM, OUT OF, OR IN CONNECTION&#10;WITH THE WORK OR THE USE OR OTHER DEALINGS IN THE WORK."/>
      </docblock>
      <property final="false" static="false" visibility="private" line="42" namespace="global" package="Hamsta">
        <name>$fields</name>
        <default><![CDATA[]]></default>
        <docblock line="38">
          <description><![CDATA[]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="38" name="var" description="Associative array containing the values of all database fields of this configuration." type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="private" line="49" namespace="global" package="Hamsta">
        <name>$modules_cache</name>
        <default><![CDATA[]]></default>
        <docblock line="45">
          <description><![CDATA[]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="45" name="var" description="Contains all modules that already have been queried from the database." type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="60" package="Configuration">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <docblock line="51">
          <description><![CDATA[Creates a new instance of Configuration.]]></description>
          <long-description><![CDATA[<p>The constructor is meant to be called only by functions that
directly access the database and have to get an object from
their query result.</p>]]></long-description>
          <tag line="51" name="param" description="Values of all database fields." type="array" variable="$fields">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="60">
          <name>$fields</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="74" package="Configuration">
        <name>get_by_id</name>
        <full_name>get_by_id</full_name>
        <docblock line="66">
          <description><![CDATA[Gets current configuration by provided id.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="66" name="param" description="ID of the configuration to get" type="int" variable="$cid">
            <type by_reference="false">int</type>
          </tag>
          <tag line="66" name="access" description="public"/>
          <tag line="66" name="return" description="Configuration with the given ID or null if no matching configuration is found." type="\Configuration">
            <type by_reference="false">\Configuration</type>
          </tag>
        </docblock>
        <argument line="74">
          <name>$cid</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="93" package="Configuration">
        <name>get_machine</name>
        <full_name>get_machine</full_name>
        <docblock line="87">
          <description><![CDATA[Gets machine with this configuration.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="87" name="access" description="public"/>
          <tag line="87" name="return" description="Machine to which the configuration belongs" type="\Machine">
            <type by_reference="false">\Machine</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="111" package="Configuration">
        <name>get_id</name>
        <full_name>get_id</full_name>
        <docblock line="105">
          <description><![CDATA[Returns id of this configuration.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="105" name="access" description="public"/>
          <tag line="105" name="return" description="ID of the configuration." type="int">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="121" package="Configuration">
        <name>get_created</name>
        <full_name>get_created</full_name>
        <docblock line="115">
          <description><![CDATA[Returns timestamp of creation of this configuration.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="115" name="access" description="public"/>
          <tag line="115" name="return" description="Date and time of creation." type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="131" package="Configuration">
        <name>get_last_activity</name>
        <full_name>get_last_activity</full_name>
        <docblock line="125">
          <description><![CDATA[Returns timestamp of last activity of this configuration.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="125" name="access" description="public"/>
          <tag line="125" name="return" description="Date and time when the configuration was last active" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="142" package="Configuration">
        <name>get_modules</name>
        <full_name>get_modules</full_name>
        <docblock line="135">
          <description><![CDATA[Returns all modules of this configuration.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="135" name="access" description="public"/>
          <tag line="135" name="return" description="Array of Module objects for all modules belonging to the configuration." type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="170" package="Configuration">
        <name>get_module</name>
        <full_name>get_module</full_name>
        <docblock line="163">
          <description><![CDATA[Returns module by provided name.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="163" name="param" description="Name of the module to get" type="string" variable="$module_name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="163" name="access" description="public"/>
          <tag line="163" name="return" description="Module of the configuration with the given module name" type="\Module">
            <type by_reference="false">\Module</type>
          </tag>
        </docblock>
        <argument line="170">
          <name>$module_name</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
    </class>
    <markers>
      <todo line="156">Do something when module does not exist</todo>
    </markers>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file configuration.php</error>
    </parse_markers>
  </file>
  <file path="roles.php" hash="3fc75c6c4569b00557b95390a196896b" package="Hamsta">
    <function namespace="global" line="32" package="Hamsta">
      <name>xml_read</name>
      <full_name>\xml_read</full_name>
      <docblock line="26">
        <description><![CDATA[Reads XML using SimpleXML.]]></description>
        <long-description><![CDATA[]]></long-description>
        <tag line="26" name="param" description="the path to the XML" type="string" variable="$path">
          <type by_reference="false">string</type>
        </tag>
        <tag line="26" name="return" description="the parsed XML NOTE: SimpleXML sucks a lot." type="\SimpleXMLElement">
          <type by_reference="false">\SimpleXMLElement</type>
        </tag>
      </docblock>
      <argument line="32">
        <name>$path</name>
        <default><![CDATA[]]></default>
        <type/>
      </argument>
    </function>
    <function namespace="global" line="41" package="Hamsta">
      <name>roles_read</name>
      <full_name>\roles_read</full_name>
      <docblock line="36">
        <description><![CDATA[Reads roles info.]]></description>
        <long-description><![CDATA[]]></long-description>
        <tag line="36" name="param" description="the job XML" type="\SimpleXMLElement" variable="$xml">
          <type by_reference="false">\SimpleXMLElement</type>
        </tag>
        <tag line="36" name="return" description="of roles - array( $id =&gt; array( 'name'=&gt;$name, 'id'=&gt;$id, 'num_min'=&gt;$num_min, 'num_max'=&gt;$num_max ), ... )" type="array">
          <type by_reference="false">array</type>
        </tag>
      </docblock>
      <argument line="41">
        <name>$xml</name>
        <default><![CDATA[]]></default>
        <type/>
      </argument>
    </function>
    <function namespace="global" line="66" package="Hamsta">
      <name>roles_assign</name>
      <full_name>\roles_assign</full_name>
      <docblock line="61">
        <description><![CDATA[Assigns machines to roles.]]></description>
        <long-description><![CDATA[]]></long-description>
        <tag line="61" name="param" description="" type="\SimpleXMLElement" variable="$xml">
          <type by_reference="false">\SimpleXMLElement</type>
        </tag>
        <tag line="61" name="param" description="role/machine assignment, array( 'role_id' =&gt; array( array('name'=&gt;$hostname1, 'ip'=&gt;$IP_address1 ), array('name'=&gt;$hostname2, 'ip'=&gt;$IP_address2), ...), ... )" type="array" variable="$roles">
          <type by_reference="false">array</type>
        </tag>
      </docblock>
      <argument line="66">
        <name>$xml</name>
        <default><![CDATA[]]></default>
        <type/>
      </argument>
      <argument line="66">
        <name>$roles</name>
        <default><![CDATA[]]></default>
        <type/>
      </argument>
    </function>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file roles.php</error>
    </parse_markers>
  </file>
  <file path="User.php" hash="5d077a948b529605fbccecc61b36d85e" package="Hamsta">
    <include line="3" type="Require Once" package="Hamsta">
      <name>Authenticator.php</name>
    </include>
    <include line="4" type="Require Once" package="Hamsta">
      <name>Zend/Db.php</name>
    </include>
    <include line="5" type="Require Once" package="Hamsta">
      <name>Zend/Session.php</name>
    </include>
    <class final="false" abstract="false" namespace="global" line="37" package="User">
      <extends/>
      <name>User</name>
      <full_name>\User</full_name>
      <docblock line="7">
        <description><![CDATA[Class represents authenticated user and provides several methods to
operate on user.]]></description>
        <long-description><![CDATA[]]></long-description>
        <tag line="7" name="package" description="User"/>
        <tag line="7" name="author" description="Pavel Kačer &lt;pkacer@suse.com&gt;"/>
        <tag line="7" name="version" description="1.0.0"/>
        <tag line="7" name="copyright" description="Copyright (c) 2013 Unpublished Work of SUSE. All Rights Reserved.&lt;br /&gt;&#10;&lt;br /&gt;&#10;THIS IS AN UNPUBLISHED WORK OF SUSE.  IT CONTAINS SUSE'S&#10;CONFIDENTIAL, PROPRIETARY, AND TRADE SECRET INFORMATION.  SUSE&#10;RESTRICTS THIS WORK TO SUSE EMPLOYEES WHO NEED THE WORK TO PERFORM&#10;THEIR ASSIGNMENTS AND TO THIRD PARTIES AUTHORIZED BY SUSE IN WRITING.&#10;THIS WORK IS SUBJECT TO U.S. AND INTERNATIONAL COPYRIGHT LAWS AND&#10;TREATIES. IT MAY NOT BE USED, COPIED, DISTRIBUTED, DISCLOSED, ADAPTED,&#10;PERFORMED, DISPLAYED, COLLECTED, COMPILED, OR LINKED WITHOUT SUSE'S&#10;PRIOR WRITTEN CONSENT. USE OR EXPLOITATION OF THIS WORK WITHOUT&#10;AUTHORIZATION COULD SUBJECT THE PERPETRATOR TO CRIMINAL AND  CIVIL&#10;LIABILITY.&lt;br /&gt;&#10;&lt;br /&gt;&#10;SUSE PROVIDES THE WORK 'AS IS,' WITHOUT ANY EXPRESS OR IMPLIED&#10;WARRANTY, INCLUDING WITHOUT THE IMPLIED WARRANTIES OF MERCHANTABILITY,&#10;FITNESS FOR A PARTICULAR PURPOSE, AND NON-INFRINGEMENT. SUSE, THE&#10;AUTHORS OF THE WORK, AND THE OWNERS OF COPYRIGHT IN THE WORK ARE NOT&#10;LIABLE FOR ANY CLAIM, DAMAGES, OR OTHER LIABILITY, WHETHER IN AN ACTION&#10;OF CONTRACT, TORT, OR OTHERWISE, ARISING FROM, OUT OF, OR IN CONNECTION&#10;WITH THE WORK OR THE USE OR OTHER DEALINGS IN THE WORK."/>
      </docblock>
      <constant namespace="global" line="40" package="User">
        <name>DEFAULT_ROLE</name>
        <full_name>DEFAULT_ROLE</full_name>
        <value><![CDATA['user']]></value>
        <docblock line="39">
          <description><![CDATA[]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="39" name="var" description="Default role for the user on login." type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </constant>
      <constant namespace="global" line="43" package="User">
        <name>ROLE_SESSION_NAMESPACE</name>
        <full_name>ROLE_SESSION_NAMESPACE</full_name>
        <value><![CDATA['roles']]></value>
        <docblock line="41">
          <description><![CDATA[]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="41" name="var" description="Namespace for the \Zend_Session_Namespace to save current role in session." type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </constant>
      <property final="false" static="false" visibility="private" line="46" namespace="global" package="Hamsta">
        <name>$login</name>
        <default><![CDATA[]]></default>
        <docblock line="45">
          <description><![CDATA[]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="45" name="var" description="Login name of the user." type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="private" line="48" namespace="global" package="Hamsta">
        <name>$name</name>
        <default><![CDATA[]]></default>
        <docblock line="47">
          <description><![CDATA[]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="47" name="var" description="Full name of the user." type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="private" line="50" namespace="global" package="Hamsta">
        <name>$email</name>
        <default><![CDATA[]]></default>
        <docblock line="49">
          <description><![CDATA[]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="49" name="var" description="Email of the user." type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="private" line="52" namespace="global" package="Hamsta">
        <name>$currentRole</name>
        <default><![CDATA[]]></default>
        <docblock line="51">
          <description><![CDATA[]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="51" name="var" description="Current role of the user." type="\UserRole">
            <type by_reference="false">\UserRole</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="private" line="54" namespace="global" package="Hamsta">
        <name>$config</name>
        <default><![CDATA[]]></default>
        <docblock line="53">
          <description><![CDATA[]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="53" name="var" description="Application configuration." type="\Zend_Config">
            <type by_reference="false">\Zend_Config</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="private" namespace="global" line="65" package="User">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <docblock line="56">
          <description><![CDATA[Creates new instance.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="56" name="param" description="Application configuration." type="\Zend_Config" variable="$config">
            <type by_reference="false">\Zend_Config</type>
          </tag>
          <tag line="56" name="param" description="Login of the user." type="string" variable="$login">
            <type by_reference="false">string</type>
          </tag>
          <tag line="56" name="param" description="Full name of the user." type="string" variable="$name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="56" name="param" description="E-mail of the user." type="string" variable="$email">
            <type by_reference="false">string</type>
          </tag>
          <tag line="56" name="param" description="Role to set for the user." type="\UserRole" variable="$role">
            <type by_reference="false">\UserRole</type>
          </tag>
        </docblock>
        <argument line="65">
          <name>$config</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="65">
          <name>$login</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="65">
          <name>$name</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="65">
          <name>$email</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="65">
          <name>$role</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="private" namespace="global" line="81" package="User">
        <name>getDbName</name>
        <full_name>getDbName</full_name>
        <docblock line="73">
          <description><![CDATA[Get name of the user from database.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="73" name="param" description="Login identification of the user." type="string" variable="$ident">
            <type by_reference="false">string</type>
          </tag>
          <tag line="73" name="param" description="Instance of the application configuration." type="\Zend_Config" variable="$config">
            <type by_reference="false">\Zend_Config</type>
          </tag>
          <tag line="73" name="return" description="Name of the user if found or NULL." type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
        <argument line="81">
          <name>$ident</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="81">
          <name>$config</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="private" namespace="global" line="98" package="User">
        <name>getDbEmail</name>
        <full_name>getDbEmail</full_name>
        <docblock line="90">
          <description><![CDATA[Get email of the user from database.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="90" name="param" description="Login identification of the user." type="string" variable="$ident">
            <type by_reference="false">string</type>
          </tag>
          <tag line="90" name="param" description="Instance of the application configuration." type="\Zend_Config" variable="$config">
            <type by_reference="false">\Zend_Config</type>
          </tag>
          <tag line="90" name="return" description="Email of the user if found or NULL." type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
        <argument line="98">
          <name>$ident</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="98">
          <name>$config</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="global" line="115" package="User">
        <name>setDbName</name>
        <full_name>setDbName</full_name>
        <docblock line="107">
          <description><![CDATA[Set name of the user in the database.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="107" name="param" description="Login indentification of the user." type="string" variable="$ident">
            <type by_reference="false">string</type>
          </tag>
          <tag line="107" name="param" description="Name to be set." type="string" variable="$newName">
            <type by_reference="false">string</type>
          </tag>
          <tag line="107" name="return" description="Number greater than zero on success, zero otherwise." type="integer">
            <type by_reference="false">integer</type>
          </tag>
        </docblock>
        <argument line="115">
          <name>$ident</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="115">
          <name>$newName</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="global" line="135" package="User">
        <name>setDbEmail</name>
        <full_name>setDbEmail</full_name>
        <docblock line="127">
          <description><![CDATA[Set email of the user in the database.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="127" name="param" description="Login indentification of the user." type="string" variable="$ident">
            <type by_reference="false">string</type>
          </tag>
          <tag line="127" name="param" description="E-mail to be set." type="string" variable="$newEmail">
            <type by_reference="false">string</type>
          </tag>
          <tag line="127" name="return" description="Number greater than zero on success, zero otherwise." type="integer">
            <type by_reference="false">integer</type>
          </tag>
        </docblock>
        <argument line="135">
          <name>$ident</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="135">
          <name>$newEmail</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="global" line="154" package="User">
        <name>setDbPassword</name>
        <full_name>setDbPassword</full_name>
        <docblock line="146">
          <description><![CDATA[Set password of the user in the database.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="146" name="param" description="Login indentification of the user." type="string" variable="$ident">
            <type by_reference="false">string</type>
          </tag>
          <tag line="146" name="param" description="Plain string password. It will be hashed on the insertion into DB." type="string" variable="$newPassword">
            <type by_reference="false">string</type>
          </tag>
          <tag line="146" name="return" description="Number greater than zero on success, zero otherwise." type="integer">
            <type by_reference="false">integer</type>
          </tag>
        </docblock>
        <argument line="154">
          <name>$ident</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="154">
          <name>$newPassword</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="private" namespace="global" line="173" package="User">
        <name>getCachedOrDefaultRole</name>
        <full_name>getCachedOrDefaultRole</full_name>
        <docblock line="165">
          <description><![CDATA[Returns role name that this user has cached.]]></description>
          <long-description><![CDATA[<p>Default role name is returned, if no role name is cached. The
cached role name is stored in session.</p>]]></long-description>
          <tag line="165" name="return" description="Cached role name or ROLE_SESSION_NAMESPACE." type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="190" package="User">
        <name>getInstance</name>
        <full_name>getInstance</full_name>
        <docblock line="182">
          <description><![CDATA[Returns an instance of <b>registered and currently logged in</b>
user.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="182" name="param" description="Application configuration." type="\Zend_Config" variable="$config">
            <type by_reference="false">\Zend_Config</type>
          </tag>
          <tag line="182" name="return" description="Returns the user if she is registered." type="\User|null">
            <type by_reference="false">\User</type>
            <type by_reference="false">null</type>
          </tag>
        </docblock>
        <argument line="190">
          <name>$config</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="208" package="User">
        <name>getByLogin</name>
        <full_name>getByLogin</full_name>
        <docblock line="200">
          <description><![CDATA[Returns an instance of <b>registered</b> user by login.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="200" name="param" description="Login name of the user." type="string" variable="$login">
            <type by_reference="false">string</type>
          </tag>
          <tag line="200" name="param" description="Object of type Zend_Config." type="\Zend_Config" variable="$config">
            <type by_reference="false">\Zend_Config</type>
          </tag>
          <tag line="200" name="return" description="Returns the user if she is registered." type="\User|null">
            <type by_reference="false">\User</type>
            <type by_reference="false">null</type>
          </tag>
        </docblock>
        <argument line="208">
          <name>$login</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="208">
          <name>$config</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="226" package="User">
        <name>getById</name>
        <full_name>getById</full_name>
        <docblock line="218">
          <description><![CDATA[Returns an instance of <b>registered</b> user by id.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="218" name="param" description="Id of user (number)." type="string" variable="$id">
            <type by_reference="false">string</type>
          </tag>
          <tag line="218" name="param" description="Application configuration." type="\Zend_Config" variable="$config">
            <type by_reference="false">\Zend_Config</type>
          </tag>
          <tag line="218" name="return" description="Returns the user if she is registered." type="\User|null">
            <type by_reference="false">\User</type>
            <type by_reference="false">null</type>
          </tag>
        </docblock>
        <argument line="226">
          <name>$id</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="226">
          <name>$config</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="242" package="User">
        <name>authenticate</name>
        <full_name>authenticate</full_name>
        <docblock line="237">
          <description><![CDATA[Authenticates this user using method set in configuration.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="237" name="param" description="Application configuration." type="\Zend_Config" variable="$config">
            <type by_reference="false">\Zend_Config</type>
          </tag>
        </docblock>
        <argument line="242">
          <name>$config</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="307" package="User">
        <name>logout</name>
        <full_name>logout</full_name>
        <docblock line="304">
          <description><![CDATA[Log out the user.]]></description>
          <long-description><![CDATA[]]></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="316" package="User">
        <name>isLogged</name>
        <full_name>isLogged</full_name>
        <docblock line="311">
          <description><![CDATA[Returns the logged status of this user.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="311" name="return" description="True if logged in. False otherwise." type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="326" package="User">
        <name>getIdent</name>
        <full_name>getIdent</full_name>
        <docblock line="321">
          <description><![CDATA[Returns login identity of this user.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="321" name="return" description="Login identification." type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="340" package="User">
        <name>printStatus</name>
        <full_name>printStatus</full_name>
        <docblock line="331">
          <description><![CDATA[Prints user status.]]></description>
          <long-description><![CDATA[<p>Prints message with user status with clickable user name
redirecting to user configuration page. If the she is not logged
in the message is not printed.</p>]]></long-description>
          <tag line="331" name="param" description="Application configuration." type="\Zend_Config" variable="$config">
            <type by_reference="false">\Zend_Config</type>
          </tag>
        </docblock>
        <argument line="340">
          <name>$config</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="365" package="User">
        <name>printLogInOut</name>
        <full_name>printLogInOut</full_name>
        <docblock line="356">
          <description><![CDATA[Prints login or logout link.]]></description>
          <long-description><![CDATA[<p>If the user is not logged in prints login link. If she is logged
in prints logout link.</p>]]></long-description>
          <tag line="356" name="param" description="Set to true if you want to redirect user to login form." type="boolean" variable="$form">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
        <argument line="365">
          <name>$form</name>
          <default><![CDATA[false]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="390" package="User">
        <name>addUser</name>
        <full_name>addUser</full_name>
        <docblock line="377">
          <description><![CDATA[Adds a user to the database.]]></description>
          <long-description><![CDATA[<p>It is recommended to check if the user is not already registered
before calling this method (see isRegistered ()).</p>]]></long-description>
          <tag line="377" name="param" description="Login identification of the user (e.g. openid url or login)." type="string" variable="$login">
            <type by_reference="false">string</type>
          </tag>
          <tag line="377" name="param" description="User's name." type="string" variable="$name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="377" name="param" description="User's e-mail address." type="string" variable="$email">
            <type by_reference="false">string</type>
          </tag>
          <tag line="377" name="param" description="Application configuration." type="\Zend_Config" variable="$config">
            <type by_reference="false">\Zend_Config</type>
          </tag>
          <tag line="377" name="return" description="Number greater than zero if user has been added, zero otherwise." type="integer">
            <type by_reference="false">integer</type>
          </tag>
        </docblock>
        <argument line="390">
          <name>$login</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="390">
          <name>$name</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="390">
          <name>$email</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="390">
          <name>$config</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="418" package="User">
        <name>isRegistered</name>
        <full_name>isRegistered</full_name>
        <docblock line="410">
          <description><![CDATA[Checks if the user is registered in Hamsta.]]></description>
          <long-description><![CDATA[<p>It simply asks database if the login is already there.</p>]]></long-description>
          <tag line="410" name="param" description="Login identification of the user." type="string" variable="$login">
            <type by_reference="false">string</type>
          </tag>
          <tag line="410" name="param" description="Application configuration." type="\Zend_Config" variable="$config">
            <type by_reference="false">\Zend_Config</type>
          </tag>
        </docblock>
        <argument line="418">
          <name>$login</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="418">
          <name>$config</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="432" package="User">
        <name>getName</name>
        <full_name>getName</full_name>
        <docblock line="427">
          <description><![CDATA[Returns full name of this user.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="427" name="return" description="Full user name." type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="441" package="User">
        <name>getEmail</name>
        <full_name>getEmail</full_name>
        <docblock line="436">
          <description><![CDATA[Returns e-mail of this user.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="436" name="return" description="User e-mail." type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="450" package="User">
        <name>getLogin</name>
        <full_name>getLogin</full_name>
        <docblock line="445">
          <description><![CDATA[Returns login identifier of this user.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="445" name="return" description="User login (e.g. OpenID or login)." type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="461" package="User">
        <name>setName</name>
        <full_name>setName</full_name>
        <docblock line="454">
          <description><![CDATA[Set new full name for this user.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="454" name="param" description="New full name for this user." type="string" variable="$name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="454" name="return" description="True if name has been changed, false otherwise." type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
        <argument line="461">
          <name>$name</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="477" package="User">
        <name>setEmail</name>
        <full_name>setEmail</full_name>
        <docblock line="470">
          <description><![CDATA[Set new e-mail for this user.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="470" name="param" description="New user e-mail." type="string" variable="$email">
            <type by_reference="false">string</type>
          </tag>
          <tag line="470" name="return" description="True if e-mail has been changed, false otherwise." type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
        <argument line="477">
          <name>$email</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="494" package="User">
        <name>setPassword</name>
        <full_name>setPassword</full_name>
        <docblock line="486">
          <description><![CDATA[Set new user password.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="486" name="param" description="New user password. Plain text, no hashing." type="string" variable="$password">
            <type by_reference="false">string</type>
          </tag>
          <tag line="486" name="return" description="Number greater than zero on success, zero otherwise." type="integer">
            <type by_reference="false">integer</type>
          </tag>
        </docblock>
        <argument line="494">
          <name>$password</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="503" package="User">
        <name>getCurrentRole</name>
        <full_name>getCurrentRole</full_name>
        <docblock line="498">
          <description><![CDATA[Return current role of this user.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="498" name="return" description="Current role this user is cast to." type="\UserRole">
            <type by_reference="false">\UserRole</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="514" package="User">
        <name>setRole</name>
        <full_name>setRole</full_name>
        <docblock line="507">
          <description><![CDATA[Set current role of this user to roleName.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="507" name="param" description="roleName Name of new role." type="string" variable="$roleName">
            <type by_reference="false">string</type>
          </tag>
          <tag line="507" name="return" description="if change was succesfull, false otherwise." type="True">
            <type by_reference="false">True</type>
          </tag>
        </docblock>
        <argument line="514">
          <name>$roleName</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="537" package="User">
        <name>isInRole</name>
        <full_name>isInRole</full_name>
        <docblock line="528">
          <description><![CDATA[Returns result of comparison of current role name with provided
roleName parameter.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="528" name="param" description="Name of the role to compare." type="string" variable="$roleName">
            <type by_reference="false">string</type>
          </tag>
          <tag line="528" name="return" description="True if user is in role with the same name as in parameter." type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
        <argument line="537">
          <name>$roleName</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="550" package="User">
        <name>couldBeInRole</name>
        <full_name>couldBeInRole</full_name>
        <docblock line="541">
          <description><![CDATA[Returns true if user can be cast in the role with name provided
in parameter roleName.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="541" name="param" description="Name of the role to search." type="string" variable="$roleName">
            <type by_reference="false">string</type>
          </tag>
          <tag line="541" name="return" description="True if user can be cast in the role with provided name." type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
        <argument line="550">
          <name>$roleName</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="559" package="User">
        <name>getRoleList</name>
        <full_name>getRoleList</full_name>
        <docblock line="554">
          <description><![CDATA[Return list of roles this user can be cast in.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="554" name="return" description="List of roles this user can be cast in." type="string[]">
            <type by_reference="false">string[]</type>
          </tag>
        </docblock>
      </method>
    </class>
    <markers>
      <todo line="227">get login of this $id</todo>
    </markers>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file User.php</error>
    </parse_markers>
  </file>
  <file path="jobrun.php" hash="b577edb4e436d607e091c364bb2d279e" package="Hamsta">
    <class final="false" abstract="false" namespace="global" line="32" package="Jobs">
      <extends/>
      <name>JobRun</name>
      <full_name>\JobRun</full_name>
      <docblock line="3">
        <description><![CDATA[Represents a single run of a job]]></description>
        <long-description><![CDATA[]]></long-description>
        <tag line="3" name="package" description="Jobs"/>
        <tag line="3" name="author" description="Kevin Wolf &lt;kwolf@suse.de&gt;"/>
        <tag line="3" name="version" description="$Rev: 1771 $"/>
        <tag line="3" name="copyright" description="Copyright (c) 2013 Unpublished Work of SUSE. All Rights Reserved.&lt;br /&gt;&#10;&lt;br /&gt;&#10;THIS IS AN UNPUBLISHED WORK OF SUSE.  IT CONTAINS SUSE'S&#10;CONFIDENTIAL, PROPRIETARY, AND TRADE SECRET INFORMATION.  SUSE&#10;RESTRICTS THIS WORK TO SUSE EMPLOYEES WHO NEED THE WORK TO PERFORM&#10;THEIR ASSIGNMENTS AND TO THIRD PARTIES AUTHORIZED BY SUSE IN WRITING.&#10;THIS WORK IS SUBJECT TO U.S. AND INTERNATIONAL COPYRIGHT LAWS AND&#10;TREATIES. IT MAY NOT BE USED, COPIED, DISTRIBUTED, DISCLOSED, ADAPTED,&#10;PERFORMED, DISPLAYED, COLLECTED, COMPILED, OR LINKED WITHOUT SUSE'S&#10;PRIOR WRITTEN CONSENT. USE OR EXPLOITATION OF THIS WORK WITHOUT&#10;AUTHORIZATION COULD SUBJECT THE PERPETRATOR TO CRIMINAL AND  CIVIL&#10;LIABILITY.&lt;br /&gt;&#10;&lt;br /&gt;&#10;SUSE PROVIDES THE WORK 'AS IS,' WITHOUT ANY EXPRESS OR IMPLIED&#10;WARRANTY, INCLUDING WITHOUT THE IMPLIED WARRANTIES OF MERCHANTABILITY,&#10;FITNESS FOR A PARTICULAR PURPOSE, AND NON-INFRINGEMENT. SUSE, THE&#10;AUTHORS OF THE WORK, AND THE OWNERS OF COPYRIGHT IN THE WORK ARE NOT&#10;LIABLE FOR ANY CLAIM, DAMAGES, OR OTHER LIABILITY, WHETHER IN AN ACTION&#10;OF CONTRACT, TORT, OR OTHERWISE, ARISING FROM, OUT OF, OR IN CONNECTION&#10;WITH THE WORK OR THE USE OR OTHER DEALINGS IN THE WORK."/>
      </docblock>
      <property final="false" static="false" visibility="private" line="38" namespace="global" package="Hamsta">
        <name>$fields</name>
        <default><![CDATA[]]></default>
        <docblock line="34">
          <description><![CDATA[]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="34" name="var" description="Associative array containing the values of all database fields of this job." type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="49" package="Jobs">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <docblock line="40">
          <description><![CDATA[Creates a new instance of JobRun.]]></description>
          <long-description><![CDATA[<p>The constructor is meant to be called only by functions
that directly access the database and have to get an object
from their query result.</p>]]></long-description>
          <tag line="40" name="param" description="Values of all database fields." type="array" variable="$fields">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="49">
          <name>$fields</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="60" package="Jobs">
        <name>update_from_db</name>
        <full_name>update_from_db</full_name>
        <docblock line="54">
          <description><![CDATA[Updates all fields with current data from the database.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="54" name="access" description="public"/>
          <tag line="54" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="81" package="Jobs">
        <name>find_all</name>
        <full_name>find_all</full_name>
        <docblock line="73">
          <description><![CDATA[Gets all jobs ever run, including pending jobs.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="73" name="param" description="Optional. Maximal number of jobs to return." type="int" variable="$limit">
            <type by_reference="false">int</type>
          </tag>
          <tag line="73" name="param" description="Optional. Number of first row to be returned." type="int" variable="$start">
            <type by_reference="false">int</type>
          </tag>
          <tag line="73" name="access" description="public"/>
          <tag line="73" name="return" description="Array of JobRun objects or null on error." type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="81">
          <name>$limit</name>
          <default><![CDATA[10]]></default>
          <type/>
        </argument>
        <argument line="81">
          <name>$start</name>
          <default><![CDATA[0]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="106" package="Jobs">
        <name>count_all</name>
        <full_name>count_all</full_name>
        <docblock line="100">
          <description><![CDATA[Counts all jobs ever run.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="100" name="access" description="public"/>
          <tag line="100" name="return" description="Number of all jobs ever run, including pengding jobs." type="int">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="128" package="Jobs">
        <name>find_by_status</name>
        <full_name>find_by_status</full_name>
        <docblock line="120">
          <description><![CDATA[Get all jobs which are in a given status.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="120" name="param" description="ID of the status to search for." type="mixed" variable="$status_id">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="120" name="param" description="Optional. Maximal number of rows to return." type="int" variable="$limit">
            <type by_reference="false">int</type>
          </tag>
          <tag line="120" name="access" description="public"/>
          <tag line="120" name="return" description="Array of JobRun objects." type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="128">
          <name>$status_id</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="128">
          <name>$limit</name>
          <default><![CDATA[0]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="155" package="Jobs">
        <name>get_by_id</name>
        <full_name>get_by_id</full_name>
        <docblock line="148">
          <description><![CDATA[Gets job run instance by identifier.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="148" name="param" description="ID of the JobRun to get." type="int|string" variable="$id">
            <type by_reference="false">int</type>
            <type by_reference="false">string</type>
          </tag>
          <tag line="148" name="access" description="public"/>
          <tag line="148" name="return" description="JobRun with the given ID or null if no JobRun is found." type="\JobRun">
            <type by_reference="false">\JobRun</type>
          </tag>
        </docblock>
        <argument line="155">
          <name>$id</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="174" package="Jobs">
        <name>get_id</name>
        <full_name>get_id</full_name>
        <docblock line="168">
          <description><![CDATA[Getter for identifier of this job.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="168" name="access" description="public"/>
          <tag line="168" name="return" description="ID of the JobRun." type="int">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="184" package="Jobs">
        <name>get_name</name>
        <full_name>get_name</full_name>
        <docblock line="178">
          <description><![CDATA[Getter for the name of this job.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="178" name="access" description="public"/>
          <tag line="178" name="return" description="Name of the JobRun." type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="194" package="Jobs">
        <name>get_description</name>
        <full_name>get_description</full_name>
        <docblock line="188">
          <description><![CDATA[Getter for the description of this job.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="188" name="access" description="public"/>
          <tag line="188" name="return" description="Description of the JobRun." type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="204" package="Jobs">
        <name>get_owner</name>
        <full_name>get_owner</full_name>
        <docblock line="198">
          <description><![CDATA[Getter for the owner of this job.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="198" name="access" description="public"/>
          <tag line="198" name="return" description="Owner of the JobRun." type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="214" package="Jobs">
        <name>get_machine</name>
        <full_name>get_machine</full_name>
        <docblock line="208">
          <description><![CDATA[Geter for the machine of this job.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="208" name="access" description="public"/>
          <tag line="208" name="return" description="Machine the job is run on." type="\Machine">
            <type by_reference="false">\Machine</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="225" package="Jobs">
        <name>get_configuration</name>
        <full_name>get_configuration</full_name>
        <docblock line="218">
          <description><![CDATA[Getter for the configuration of this job.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="218" name="access" description="public"/>
          <tag line="218" name="return" description="Current configuration of the machine at the start of the job." type="\Configuration">
            <type by_reference="false">\Configuration</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="235" package="Jobs">
        <name>get_last_log</name>
        <full_name>get_last_log</full_name>
        <docblock line="229">
          <description><![CDATA[Getter for the last few lines of the log of this job.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="229" name="access" description="public"/>
          <tag line="229" name="return" description="Last output lines of the job." type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="245" package="Jobs">
        <name>get_xml_filename</name>
        <full_name>get_xml_filename</full_name>
        <docblock line="239">
          <description><![CDATA[Gets file name of the xml job description.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="239" name="access" description="public"/>
          <tag line="239" name="return" description="File name of the XML job description." type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="255" package="Jobs">
        <name>get_xml_job</name>
        <full_name>get_xml_job</full_name>
        <docblock line="249">
          <description><![CDATA[Gets xml with job description.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="249" name="access" description="public"/>
          <tag line="249" name="return" description="XML job description." type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="266" package="Jobs">
        <name>get_return_code</name>
        <full_name>get_return_code</full_name>
        <docblock line="259">
          <description><![CDATA[Gets return code[s]? of this job.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="259" name="access" description="public"/>
          <tag line="259" name="return" description="Return code information (may contain more than one return code)." type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="276" package="Jobs">
        <name>get_return_xml_filename</name>
        <full_name>get_return_xml_filename</full_name>
        <docblock line="270">
          <description><![CDATA[Gets name of the xml file returned by slave.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="270" name="access" description="public"/>
          <tag line="270" name="return" description="Filename of the XML result file returned by the slave." type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="286" package="Jobs">
        <name>get_return_xml_content</name>
        <full_name>get_return_xml_content</full_name>
        <docblock line="280">
          <description><![CDATA[Gets content of the result file returned by slave.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="280" name="access" description="public"/>
          <tag line="280" name="return" description="XML result file returned by the slave." type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="299" package="Jobs">
        <name>get_started</name>
        <full_name>get_started</full_name>
        <docblock line="293">
          <description><![CDATA[Gets start time of this job.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="293" name="access" description="public"/>
          <tag line="293" name="return" description="Date and time of the start of the job." type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="309" package="Jobs">
        <name>get_stopped</name>
        <full_name>get_stopped</full_name>
        <docblock line="303">
          <description><![CDATA[Gets stop time of this job.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="303" name="access" description="public"/>
          <tag line="303" name="return" description="Date and time when the job was stopped." type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="318" package="Jobs">
        <name>get_status_id</name>
        <full_name>get_status_id</full_name>
        <docblock line="313">
          <description><![CDATA[Gets status id of this job.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="313" name="return" description="Id of the status of this job." type="int">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="328" package="Jobs">
        <name>get_status_string</name>
        <full_name>get_status_string</full_name>
        <docblock line="322">
          <description><![CDATA[Gets current status name of this job.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="322" name="access" description="public"/>
          <tag line="322" name="return" description="Name of the job status." type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="344" package="Jobs">
        <name>cancel</name>
        <full_name>cancel</full_name>
        <docblock line="337">
          <description><![CDATA[Cancels a scheduled job.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="337" name="access" description="public"/>
          <tag line="337" name="return" description="true if the job could be successfully cancelled; false if an error occured (e.g. job is already running)." type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="370" package="Jobs">
        <name>set_status</name>
        <full_name>set_status</full_name>
        <docblock line="362">
          <description><![CDATA[Set status of a scheduled job.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="362" name="param" description="Status id to set this job to." type="int" variable="$status_id">
            <type by_reference="false">int</type>
          </tag>
          <tag line="362" name="access" description="public"/>
          <tag line="362" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="370">
          <name>$status_id</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="396" package="Jobs">
        <name>set_stopped</name>
        <full_name>set_stopped</full_name>
        <docblock line="390">
          <description><![CDATA[Set stop timestamp of a scheduled job.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="390" name="access" description="public"/>
          <tag line="390" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="416" package="Jobs">
        <name>can_cancel</name>
        <full_name>can_cancel</full_name>
        <docblock line="410">
          <description><![CDATA[Checks if the job can be cancelled.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="410" name="access" description="public"/>
          <tag line="410" name="return" description="true if the job can be cancelled, false otherwise." type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="430" package="Jobs">
        <name>get_job_log_entries</name>
        <full_name>get_job_log_entries</full_name>
        <docblock line="424">
          <description><![CDATA[Gets log entries of this job.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="424" name="access" description="public"/>
          <tag line="424" name="return" description="Log array." type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file jobrun.php</error>
    </parse_markers>
  </file>
  <file path="db.php" hash="0e1ac35c467e10dca3c14b7d86848804" package="Hamsta">
    <function namespace="global" line="35" package="Hamsta">
      <name>get_pdo</name>
      <full_name>\get_pdo</full_name>
      <docblock line="26">
        <description><![CDATA[get_pdo]]></description>
        <long-description><![CDATA[<p>Returns the PDO for the database connection. If no connection is
established yet, get_pdo will start a new one.</p>]]></long-description>
        <tag line="26" name="access" description="public"/>
        <tag line="26" name="return" description="" type="\PDO">
          <type by_reference="false">\PDO</type>
        </tag>
      </docblock>
    </function>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file db.php</error>
    </parse_markers>
  </file>
  <file path="module.php" hash="3762d418ee5007c3c6e22ea8371457f0" package="Hamsta">
    <class final="false" abstract="false" namespace="global" line="32" package="Configuration">
      <extends/>
      <name>Module</name>
      <full_name>\Module</full_name>
      <docblock line="3">
        <description><![CDATA[Represents a module of a configuration.]]></description>
        <long-description><![CDATA[]]></long-description>
        <tag line="3" name="package" description="Configuration"/>
        <tag line="3" name="author" description="Kevin Wolf &lt;kwolf@suse.de&gt;"/>
        <tag line="3" name="version" description="$Rev: 1638 $"/>
        <tag line="3" name="copyright" description="Copyright (c) 2013 Unpublished Work of SUSE. All Rights Reserved.&lt;br /&gt;&#10;&lt;br /&gt;&#10;THIS IS AN UNPUBLISHED WORK OF SUSE.  IT CONTAINS SUSE'S&#10;CONFIDENTIAL, PROPRIETARY, AND TRADE SECRET INFORMATION.  SUSE&#10;RESTRICTS THIS WORK TO SUSE EMPLOYEES WHO NEED THE WORK TO PERFORM&#10;THEIR ASSIGNMENTS AND TO THIRD PARTIES AUTHORIZED BY SUSE IN WRITING.&#10;THIS WORK IS SUBJECT TO U.S. AND INTERNATIONAL COPYRIGHT LAWS AND&#10;TREATIES. IT MAY NOT BE USED, COPIED, DISTRIBUTED, DISCLOSED, ADAPTED,&#10;PERFORMED, DISPLAYED, COLLECTED, COMPILED, OR LINKED WITHOUT SUSE'S&#10;PRIOR WRITTEN CONSENT. USE OR EXPLOITATION OF THIS WORK WITHOUT&#10;AUTHORIZATION COULD SUBJECT THE PERPETRATOR TO CRIMINAL AND  CIVIL&#10;LIABILITY.&lt;br /&gt;&#10;&lt;br /&gt;&#10;SUSE PROVIDES THE WORK 'AS IS,' WITHOUT ANY EXPRESS OR IMPLIED&#10;WARRANTY, INCLUDING WITHOUT THE IMPLIED WARRANTIES OF MERCHANTABILITY,&#10;FITNESS FOR A PARTICULAR PURPOSE, AND NON-INFRINGEMENT. SUSE, THE&#10;AUTHORS OF THE WORK, AND THE OWNERS OF COPYRIGHT IN THE WORK ARE NOT&#10;LIABLE FOR ANY CLAIM, DAMAGES, OR OTHER LIABILITY, WHETHER IN AN ACTION&#10;OF CONTRACT, TORT, OR OTHERWISE, ARISING FROM, OUT OF, OR IN CONNECTION&#10;WITH THE WORK OR THE USE OR OTHER DEALINGS IN THE WORK."/>
      </docblock>
      <property final="false" static="false" visibility="private" line="37" namespace="global" package="Hamsta">
        <name>$name</name>
        <default><![CDATA[]]></default>
        <docblock line="34">
          <description><![CDATA[]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="34" name="var" description="Name of the module (e.g. &quot;netcard&quot;)." type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="private" line="42" namespace="global" package="Hamsta">
        <name>$version</name>
        <default><![CDATA[]]></default>
        <docblock line="39">
          <description><![CDATA[]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="39" name="var" description="Version of the module." type="int">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="private" line="64" namespace="global" package="Hamsta">
        <name>$elements</name>
        <default><![CDATA[]]></default>
        <docblock line="44">
          <description><![CDATA[]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="44" name="var" description="Associative array where keys are part IDs und values are another associative array where keys are element names and values are element values. &lt;br /&gt;" type="array">
            <type by_reference="false">array</type>
          </tag>
          <tag line="44" name="example" description="Example structure:&#10;&lt;pre&gt;&#10;$elements = array(&#10;0 =&gt; array(&#10;&quot;Description&quot; =&gt; &quot;36: None 00.0: 11300 Partition&quot;,&#10;&quot;Device File&quot; =&gt; &quot;/dev/sda1&quot;&#10;),&#10;1 =&gt; array(&#10;&quot;Description&quot; =&gt; &quot;37: None 00.0: 11300 Partition&quot;,&#10;&quot;Device File&quot; =&gt; &quot;/dev/sda2&quot;&#10;)&#10;);&#10;&lt;/pre&gt;"/>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="80" package="Configuration">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <docblock line="66">
          <description><![CDATA[Creates a new instance of Module.]]></description>
          <long-description><![CDATA[<p>The constructor is meant to be called only by functions that
directly access the database and have to get an object from
their query result.</p>]]></long-description>
          <tag line="66" name="param" description="Name of the module." type="string" variable="$name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="66" name="param" description="Version of the module." type="int" variable="$version">
            <type by_reference="false">int</type>
          </tag>
          <tag line="66" name="param" description="Associative array of the elements of the modules (keys are element names and values are element values)." type="array" variable="$elements">
            <type by_reference="false">array</type>
          </tag>
          <tag line="66" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="80">
          <name>$name</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="80">
          <name>$version</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="80">
          <name>$elements</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="99" package="Configuration">
        <name>get_by_name_version</name>
        <full_name>get_by_name_version</full_name>
        <docblock line="91">
          <description><![CDATA[Creates an instance of Module class by name and version.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="91" name="param" description="Name of the module to get." type="string" variable="$name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="91" name="param" description="Version of the module to get." type="int" variable="$version">
            <type by_reference="false">int</type>
          </tag>
          <tag line="91" name="access" description="public"/>
          <tag line="91" name="return" description="Module corresponding to the given name and version." type="\Module">
            <type by_reference="false">\Module</type>
          </tag>
        </docblock>
        <argument line="99">
          <name>$name</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="99">
          <name>$version</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="118" package="Configuration">
        <name>get_name</name>
        <full_name>get_name</full_name>
        <docblock line="112">
          <description><![CDATA[Getter for the name of this module.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="112" name="access" description="public"/>
          <tag line="112" name="return" description="Name of the module." type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="128" package="Configuration">
        <name>get_version</name>
        <full_name>get_version</full_name>
        <docblock line="122">
          <description><![CDATA[Getter for the version of this module.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="122" name="access" description="public"/>
          <tag line="122" name="return" description="Version of the module." type="int|string">
            <type by_reference="false">int</type>
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="140" package="Configuration">
        <name>get_elements</name>
        <full_name>get_elements</full_name>
        <docblock line="132">
          <description><![CDATA[Getter for elements of this module.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="132" name="param" description="ID of the part to return the elements of." type="int" variable="$part">
            <type by_reference="false">int</type>
          </tag>
          <tag line="132" name="access" description="public"/>
          <tag line="132" name="return" description="Elements of the module (keys are element names and values are element values)." type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="140">
          <name>$part</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="151" package="Configuration">
        <name>get_parts</name>
        <full_name>get_parts</full_name>
        <docblock line="144">
          <description><![CDATA[Getter for parts of this module.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="144" name="access" description="public"/>
          <tag line="144" name="return" description="Array of the parts of the module. Each part is an associative array with element names as keys an element values as values." type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="163" package="Configuration">
        <name>get_element</name>
        <full_name>get_element</full_name>
        <docblock line="155">
          <description><![CDATA[Getter for specific element of some part.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="155" name="param" description="Part ID of the element." type="string" variable="$part">
            <type by_reference="false">string</type>
          </tag>
          <tag line="155" name="param" description="Element to get the value of." type="string" variable="$element">
            <type by_reference="false">string</type>
          </tag>
          <tag line="155" name="access" description="public"/>
          <tag line="155" name="return" description="Value of the given element of the module." type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="163">
          <name>$part</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="163">
          <name>$element</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="175" package="Configuration">
        <name>get_element_from_any_part</name>
        <full_name>get_element_from_any_part</full_name>
        <docblock line="167">
          <description><![CDATA[Searches for an element in all parts of a module.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="167" name="param" description="Element to get the value of." type="string" variable="$element">
            <type by_reference="false">string</type>
          </tag>
          <tag line="167" name="access" description="public"/>
          <tag line="167" name="return" description="Value of the given element of the module or empty string if the module could not be found." type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="175">
          <name>$element</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="192" package="Configuration">
        <name>get_driver</name>
        <full_name>get_driver</full_name>
        <docblock line="185">
          <description><![CDATA[Getter for the driver of this module.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="185" name="access" description="public"/>
          <tag line="185" name="return" description="Name of the driver of the module or empty string if the driver cannot be determined." type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="202" package="Configuration">
        <name>__toString</name>
        <full_name>__toString</full_name>
        <docblock line="196">
          <description><![CDATA[Returns a string representation of this module.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="196" name="access" description="public"/>
          <tag line="196" name="return" description="Description of the module." type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="231" package="Configuration">
        <name>contains_text</name>
        <full_name>contains_text</full_name>
        <docblock line="221">
          <description><![CDATA[Checks if a given text is contained in the name or value of an element
of this module.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="221" name="param" description="Text to search for." type="string" variable="$text">
            <type by_reference="false">string</type>
          </tag>
          <tag line="221" name="access" description="public"/>
          <tag line="221" name="return" description="True if the name or value of an element of this module contains the given text, false otherwise. If the text is empty, returns always false." type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
        <argument line="231">
          <name>$text</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="258" package="Configuration">
        <name>element_contains_text</name>
        <full_name>element_contains_text</full_name>
        <docblock line="247">
          <description><![CDATA[Checks if a given text is contained in a given element of the module.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="247" name="param" description="ID of the part to which the element belongs." type="int" variable="$part">
            <type by_reference="false">int</type>
          </tag>
          <tag line="247" name="param" description="Name of the element." type="string" variable="$element">
            <type by_reference="false">string</type>
          </tag>
          <tag line="247" name="param" description="Text to search for." type="string" variable="$text">
            <type by_reference="false">string</type>
          </tag>
          <tag line="247" name="access" description="public"/>
          <tag line="247" name="return" description="true if the name or value of the given element contain the given text, false otherwise. If the text is empty, returns always false." type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
        <argument line="258">
          <name>$part</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="258">
          <name>$element</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="258">
          <name>$text</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file module.php</error>
    </parse_markers>
  </file>
  <file path="UserRole.php" hash="e948bcf5a536a29e0f5e5b3b97f808e2" package="Hamsta">
    <class final="false" abstract="false" namespace="global" line="32" package="User">
      <extends/>
      <name>UserRole</name>
      <full_name>\UserRole</full_name>
      <docblock line="3">
        <description><![CDATA[Class represents user role.]]></description>
        <long-description><![CDATA[]]></long-description>
        <tag line="3" name="package" description="User"/>
        <tag line="3" name="author" description="Pavel Kačer &lt;pkacer@suse.com&gt;"/>
        <tag line="3" name="version" description="1.0.0"/>
        <tag line="3" name="copyright" description="Copyright (c) 2013 Unpublished Work of SUSE. All Rights Reserved.&lt;br /&gt;&#10;&lt;br /&gt;&#10;THIS IS AN UNPUBLISHED WORK OF SUSE.  IT CONTAINS SUSE'S&#10;CONFIDENTIAL, PROPRIETARY, AND TRADE SECRET INFORMATION.  SUSE&#10;RESTRICTS THIS WORK TO SUSE EMPLOYEES WHO NEED THE WORK TO PERFORM&#10;THEIR ASSIGNMENTS AND TO THIRD PARTIES AUTHORIZED BY SUSE IN WRITING.&#10;THIS WORK IS SUBJECT TO U.S. AND INTERNATIONAL COPYRIGHT LAWS AND&#10;TREATIES. IT MAY NOT BE USED, COPIED, DISTRIBUTED, DISCLOSED, ADAPTED,&#10;PERFORMED, DISPLAYED, COLLECTED, COMPILED, OR LINKED WITHOUT SUSE'S&#10;PRIOR WRITTEN CONSENT. USE OR EXPLOITATION OF THIS WORK WITHOUT&#10;AUTHORIZATION COULD SUBJECT THE PERPETRATOR TO CRIMINAL AND  CIVIL&#10;LIABILITY.&lt;br /&gt;&#10;&lt;br /&gt;&#10;SUSE PROVIDES THE WORK 'AS IS,' WITHOUT ANY EXPRESS OR IMPLIED&#10;WARRANTY, INCLUDING WITHOUT THE IMPLIED WARRANTIES OF MERCHANTABILITY,&#10;FITNESS FOR A PARTICULAR PURPOSE, AND NON-INFRINGEMENT. SUSE, THE&#10;AUTHORS OF THE WORK, AND THE OWNERS OF COPYRIGHT IN THE WORK ARE NOT&#10;LIABLE FOR ANY CLAIM, DAMAGES, OR OTHER LIABILITY, WHETHER IN AN ACTION&#10;OF CONTRACT, TORT, OR OTHERWISE, ARISING FROM, OUT OF, OR IN CONNECTION&#10;WITH THE WORK OR THE USE OR OTHER DEALINGS IN THE WORK."/>
      </docblock>
      <property final="false" static="false" visibility="private" line="36" namespace="global" package="Hamsta">
        <name>$name</name>
        <default><![CDATA[]]></default>
        <docblock line="35">
          <description><![CDATA[]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="35" name="var" description="Name of this role." type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="private" line="39" namespace="global" package="Hamsta">
        <name>$description</name>
        <default><![CDATA[]]></default>
        <docblock line="38">
          <description><![CDATA[]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="38" name="var" description="Description of this role." type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="private" line="42" namespace="global" package="Hamsta">
        <name>$config</name>
        <default><![CDATA[]]></default>
        <docblock line="41">
          <description><![CDATA[]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="41" name="var" description="Application configuration." type="\Zend_Config">
            <type by_reference="false">\Zend_Config</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="private" namespace="global" line="51" package="User">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <docblock line="44">
          <description><![CDATA[Creates new instance of the UserRole.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="44" name="param" description="Name of the role to be created." type="string" variable="$name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="44" name="param" description="Description of the role." type="string" variable="$description">
            <type by_reference="false">string</type>
          </tag>
          <tag line="44" name="param" description="Application configuration." type="\Zend_Config" variable="$config">
            <type by_reference="false">\Zend_Config</type>
          </tag>
        </docblock>
        <argument line="51">
          <name>$name</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="51">
          <name>$description</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="51">
          <name>$config</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="67" package="User">
        <name>getByName</name>
        <full_name>getByName</full_name>
        <docblock line="58">
          <description><![CDATA[Gets a role by its name.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="58" name="param" description="Name of the role to retrieve." type="string" variable="$name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="58" name="param" description="Application configuration." type="\Zend_Config" variable="$config">
            <type by_reference="false">\Zend_Config</type>
          </tag>
          <tag line="58" name="return" description="New UserRole instance if name is found in database. NULL is returned otherwise." type="\UserRole|null">
            <type by_reference="false">\UserRole</type>
            <type by_reference="false">null</type>
          </tag>
        </docblock>
        <argument line="67">
          <name>$name</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="67">
          <name>$config</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="86" package="User">
        <name>add</name>
        <full_name>add</full_name>
        <docblock line="76">
          <description><![CDATA[Adds new role into the system.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="76" name="param" description="Name of the new role." type="string" variable="$name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="76" name="param" description="Description of new role." type="string" variable="$description">
            <type by_reference="false">string</type>
          </tag>
          <tag line="76" name="param" description="And instance of Zend_Config class." type="\Zend_Config" variable="$config">
            <type by_reference="false">\Zend_Config</type>
          </tag>
          <tag line="76" name="return" description="instance of new user role or null if some error occurs (e.g. role of that name already exists)." type="\An">
            <type by_reference="false">\An</type>
          </tag>
        </docblock>
        <argument line="86">
          <name>$name</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="86">
          <name>$description</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="86">
          <name>$config</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="99" package="User">
        <name>getName</name>
        <full_name>getName</full_name>
        <docblock line="94">
          <description><![CDATA[Returns name of this Role.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="94" name="return" description="Name of this role." type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="112" package="User">
        <name>setName</name>
        <full_name>setName</full_name>
        <docblock line="104">
          <description><![CDATA[Changes name of this role to provided new name.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="104" name="param" description="New name for this role." type="string" variable="$newName">
            <type by_reference="false">string</type>
          </tag>
          <tag line="104" name="return" description="Number greater than zero if the name was successfuly changed, zero otherwise." type="integer">
            <type by_reference="false">integer</type>
          </tag>
        </docblock>
        <argument line="112">
          <name>$newName</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="136" package="User">
        <name>addUser</name>
        <full_name>addUser</full_name>
        <docblock line="129">
          <description><![CDATA[Casts user into this role.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="129" name="param" description="An instance of User." type="\User" variable="$user">
            <type by_reference="false">\User</type>
          </tag>
          <tag line="129" name="return" description="Number greater than zero if user has been added, zero otherwise." type="integer">
            <type by_reference="false">integer</type>
          </tag>
        </docblock>
        <argument line="136">
          <name>$user</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
    </class>
    <markers>
      <todo line="89">fill in method body</todo>
    </markers>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file UserRole.php</error>
    </parse_markers>
  </file>
  <file path="Authenticator.php" hash="bb6b3830b0108ebd8572dab5edb4eeec" package="Hamsta">
    <include line="3" type="Require Once" package="Hamsta">
      <name>Zend/Auth.php</name>
    </include>
    <include line="4" type="Require Once" package="Hamsta">
      <name>Zend/Auth/Adapter/OpenId.php</name>
    </include>
    <include line="5" type="Require Once" package="Hamsta">
      <name>Zend/Auth/Adapter/DbTable.php</name>
    </include>
    <include line="7" type="Require Once" package="Hamsta">
      <name>Zend/Db.php</name>
    </include>
    <class final="false" abstract="false" namespace="global" line="41" package="User">
      <extends>\Zend_Auth</extends>
      <name>Authenticator</name>
      <full_name>\Authenticator</full_name>
      <docblock line="9">
        <description><![CDATA[Class serves as wrapper around Zend_Auth class.]]></description>
        <long-description><![CDATA[<p>Provides methods for different types of authentication and logout
procedures.</p>]]></long-description>
        <tag line="9" name="package" description="User"/>
        <tag line="9" name="author" description="Pavel Kačer &lt;pkacer@suse.com&gt;"/>
        <tag line="9" name="version" description="1.0.0"/>
        <tag line="9" name="copyright" description="Copyright (c) 2013 Unpublished Work of SUSE. All Rights Reserved.&lt;br /&gt;&#10;&lt;br /&gt;&#10;THIS IS AN UNPUBLISHED WORK OF SUSE.  IT CONTAINS SUSE'S&#10;CONFIDENTIAL, PROPRIETARY, AND TRADE SECRET INFORMATION.  SUSE&#10;RESTRICTS THIS WORK TO SUSE EMPLOYEES WHO NEED THE WORK TO PERFORM&#10;THEIR ASSIGNMENTS AND TO THIRD PARTIES AUTHORIZED BY SUSE IN WRITING.&#10;THIS WORK IS SUBJECT TO U.S. AND INTERNATIONAL COPYRIGHT LAWS AND&#10;TREATIES. IT MAY NOT BE USED, COPIED, DISTRIBUTED, DISCLOSED, ADAPTED,&#10;PERFORMED, DISPLAYED, COLLECTED, COMPILED, OR LINKED WITHOUT SUSE'S&#10;PRIOR WRITTEN CONSENT. USE OR EXPLOITATION OF THIS WORK WITHOUT&#10;AUTHORIZATION COULD SUBJECT THE PERPETRATOR TO CRIMINAL AND  CIVIL&#10;LIABILITY.&lt;br /&gt;&#10;&lt;br /&gt;&#10;SUSE PROVIDES THE WORK 'AS IS,' WITHOUT ANY EXPRESS OR IMPLIED&#10;WARRANTY, INCLUDING WITHOUT THE IMPLIED WARRANTIES OF MERCHANTABILITY,&#10;FITNESS FOR A PARTICULAR PURPOSE, AND NON-INFRINGEMENT. SUSE, THE&#10;AUTHORS OF THE WORK, AND THE OWNERS OF COPYRIGHT IN THE WORK ARE NOT&#10;LIABLE FOR ANY CLAIM, DAMAGES, OR OTHER LIABILITY, WHETHER IN AN ACTION&#10;OF CONTRACT, TORT, OR OTHERWISE, ARISING FROM, OUT OF, OR IN CONNECTION&#10;WITH THE WORK OR THE USE OR OTHER DEALINGS IN THE WORK."/>
      </docblock>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="53" package="User">
        <name>openid</name>
        <full_name>openid</full_name>
        <docblock line="44">
          <description><![CDATA[Authenticates user using OpenID.]]></description>
          <long-description><![CDATA[<p>Uses Zend_Config for database connection.</p>]]></long-description>
          <tag line="44" name="param" description="Instance of class Zend_Config." type="\Zend_Config" variable="$config">
            <type by_reference="false">\Zend_Config</type>
          </tag>
          <tag line="44" name="return" description="True if succeded, false otherwise." type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
        <argument line="53">
          <name>$config</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="100" package="User">
        <name>password</name>
        <full_name>password</full_name>
        <docblock line="91">
          <description><![CDATA[Authenticates user using password.]]></description>
          <long-description><![CDATA[<p>Uses Zend_Config for database connection.</p>]]></long-description>
          <tag line="91" name="param" description="Login name of the user." type="string" variable="$login">
            <type by_reference="false">string</type>
          </tag>
          <tag line="91" name="param" description="Password of the user." type="string" variable="$password">
            <type by_reference="false">string</type>
          </tag>
          <tag line="91" name="param" description="Instance of the class Zend_Config." type="\Zend_Config" variable="$config">
            <type by_reference="false">\Zend_Config</type>
          </tag>
        </docblock>
        <argument line="100">
          <name>$login</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="100">
          <name>$password</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="100">
          <name>$config</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="129" package="User">
        <name>logout</name>
        <full_name>logout</full_name>
        <docblock line="122">
          <description><![CDATA[Logs the user out of the application.]]></description>
          <long-description><![CDATA[<p>Destroys the current sesion if the user is logged in. It will not
do anything if the user is not logged in.</p>]]></long-description>
        </docblock>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file Authenticator.php</error>
    </parse_markers>
  </file>
  <file path="request.php" hash="95fb6b909b556f4a5feb750311796a0a" package="Hamsta">
    <docblock line="26">
      <description><![CDATA[This file contains some function to access the parameters passed to the
script via the $_REQUEST array.]]></description>
      <long-description><![CDATA[<p>These functions should be used in favor of
directly accessing the $_REQUEST array or the other superglobals like $_POST
and $_GET.</p>

<p>Their main advantage is that
1) they check if the parameter exists
2) they make sure the parameter is of the expected data type</p>]]></long-description>
    </docblock>
    <function namespace="global" line="45" package="Hamsta">
      <name>request_str</name>
      <full_name>\request_str</full_name>
      <docblock line="37">
        <description><![CDATA[request_str]]></description>
        <long-description><![CDATA[]]></long-description>
        <tag line="37" name="param" description="Name of the request parameter to get" type="string" variable="$varname">
          <type by_reference="false">string</type>
        </tag>
        <tag line="37" name="access" description="public"/>
        <tag line="37" name="return" description="The requested parameter as string or an empty string if the parameter is not present." type="string">
          <type by_reference="false">string</type>
        </tag>
      </docblock>
      <argument line="45">
        <name>$varname</name>
        <default><![CDATA[]]></default>
        <type/>
      </argument>
    </function>
    <function namespace="global" line="61" package="Hamsta">
      <name>request_int</name>
      <full_name>\request_int</full_name>
      <docblock line="53">
        <description><![CDATA[request_int]]></description>
        <long-description><![CDATA[]]></long-description>
        <tag line="53" name="param" description="Name of the request parameter to get" type="string" variable="$varname">
          <type by_reference="false">string</type>
        </tag>
        <tag line="53" name="access" description="public"/>
        <tag line="53" name="return" description="The requested parameter as integer or 0 if the parameter is not present." type="int">
          <type by_reference="false">int</type>
        </tag>
      </docblock>
      <argument line="61">
        <name>$varname</name>
        <default><![CDATA[]]></default>
        <type/>
      </argument>
    </function>
    <function namespace="global" line="81" package="Hamsta">
      <name>request_array</name>
      <full_name>\request_array</full_name>
      <docblock line="69">
        <description><![CDATA[request_array]]></description>
        <long-description><![CDATA[]]></long-description>
        <tag line="69" name="param" description="Name of the request parameter to get" type="string" variable="$varname">
          <type by_reference="false">string</type>
        </tag>
        <tag line="69" name="access" description="public"/>
        <tag line="69" name="return" description="The requested parameter as array or an empty array if the parameter is not present. Note that if there is a single parameter identified by $varname, an array containing this parameter as the only element will be returned. (This is how a PHP typecast to array works)" type="array">
          <type by_reference="false">array</type>
        </tag>
        <tag line="69" name="todo" description="Check for the expected structure provided by an extra parameter"/>
      </docblock>
      <argument line="81">
        <name>$varname</name>
        <default><![CDATA[]]></default>
        <type/>
      </argument>
    </function>
    <function namespace="global" line="97" package="Hamsta">
      <name>request_is_array</name>
      <full_name>\request_is_array</full_name>
      <docblock line="89">
        <description><![CDATA[request_is_array]]></description>
        <long-description><![CDATA[]]></long-description>
        <tag line="89" name="param" description="Name of the request parameter to check" type="string" variable="$varname">
          <type by_reference="false">string</type>
        </tag>
        <tag line="89" name="access" description="public"/>
        <tag line="89" name="return" description="true if the request parameter is set and is an array, false otherwise" type="boolean">
          <type by_reference="false">boolean</type>
        </tag>
      </docblock>
      <argument line="97">
        <name>$varname</name>
        <default><![CDATA[]]></default>
        <type/>
      </argument>
    </function>
    <function namespace="global" line="114" package="Hamsta">
      <name>request_operator</name>
      <full_name>\request_operator</full_name>
      <docblock line="103">
        <description><![CDATA[request_operator]]></description>
        <long-description><![CDATA[<p>Returns a filter operator ('=' or 'LIKE') specified
by a request parameter. Valid operator names are 'equals' and 'like'.</p>]]></long-description>
        <tag line="103" name="param" description="Name of the request parameter to get" type="string" variable="$varname">
          <type by_reference="false">string</type>
        </tag>
        <tag line="103" name="access" description="public"/>
        <tag line="103" name="return" description="A constant whose name matches the parameter, or null if no matching constant is found." type="int">
          <type by_reference="false">int</type>
        </tag>
      </docblock>
      <argument line="114">
        <name>$varname</name>
        <default><![CDATA[]]></default>
        <type/>
      </argument>
    </function>
  </file>
  <package name="Configuration" full_name="Configuration"/>
  <package name="Hamsta" full_name="Hamsta"/>
  <package name="Jobs" full_name="Jobs"/>
  <package name="Logging" full_name="Logging"/>
  <package name="Machine" full_name="Machine"/>
  <package name="User" full_name="User"/>
  <namespace name="global" full_name="global"/>
  <marker count="7">todo</marker>
  <marker count="0">fixme</marker>
  <deprecated count="0"/>
</project>
