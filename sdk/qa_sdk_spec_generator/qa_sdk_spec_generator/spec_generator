#!/bin/bash
#8/24/2010
#generate a spec file.

function Usage(){
cat <<EOF
Usage: $0 qa_<package_name> 
Usage: $0 qa_<package_name> -a <user> -e <user>@<maildomain> -l "nothing for new" -d "just for the new feature"
Details:
$0 generates a qa_<package_name>.spec with information which is provided by qa_<packages> 
	The local dir should have 3 parts:
	1. qa_<package_name> (dir)
	2. <package_name>-run (script)
	3. qa_<package_name>.tcf (tcf file)
 Options:
 -a:	author name 
 -d:	description
 -e:	email address
 -h:	show this message
 -l:	one_line "changelog"
 -v:	version
EOF
}
#generate a template for modify
function gen_template(){
cat <<'eof'
# ****************************************************************************
# Copyright Â© 2013 Unpublished Work of SUSE, Inc. All Rights Reserved.
# 
# THIS IS AN UNPUBLISHED WORK OF SUSE, INC.  IT CONTAINS SUSE'S
# CONFIDENTIAL, PROPRIETARY, AND TRADE SECRET INFORMATION.  SUSE
# RESTRICTS THIS WORK TO SUSE EMPLOYEES WHO NEED THE WORK TO PERFORM
# THEIR ASSIGNMENTS AND TO THIRD PARTIES AUTHORIZED BY SUSE IN WRITING.
# THIS WORK IS SUBJECT TO U.S. AND INTERNATIONAL COPYRIGHT LAWS AND
# TREATIES. IT MAY NOT BE USED, COPIED, DISTRIBUTED, DISCLOSED, ADAPTED,
# PERFORMED, DISPLAYED, COLLECTED, COMPILED, OR LINKED WITHOUT SUSE'S
# PRIOR WRITTEN CONSENT. USE OR EXPLOITATION OF THIS WORK WITHOUT
# AUTHORIZATION COULD SUBJECT THE PERPETRATOR TO CRIMINAL AND  CIVIL
# LIABILITY.
# 
# SUSE PROVIDES THE WORK 'AS IS,' WITHOUT ANY EXPRESS OR IMPLIED
# WARRANTY, INCLUDING WITHOUT THE IMPLIED WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE, AND NON-INFRINGEMENT. SUSE, THE
# AUTHORS OF THE WORK, AND THE OWNERS OF COPYRIGHT IN THE WORK ARE NOT
# LIABLE FOR ANY CLAIM, DAMAGES, OR OTHER LIABILITY, WHETHER IN AN ACTION
# OF CONTRACT, TORT, OR OTHERWISE, ARISING FROM, OUT OF, OR IN CONNECTION
# WITH THE WORK OR THE USE OR OTHER DEALINGS IN THE WORK.
# ****************************************************************************
#
# spec file for package qa_test_sample (Version 0.1)
#
# Please submit bugfixes or comments via http://bugzilla.novell.com/
#

# norootforbuil
#
# spec file for package qa_test_sample
# Copyright (c) 2013 SUSE.
# This file and all modifications and additions to the pristine
# package are under the same license as the package itself.
#
# Please submit bugfixes or comments via http://bugzilla.novell.com/
#

# norootforbuild

Name:           qa_test_sample
License:        SUSE Proprietary
Group:          SuSE internal
AutoReqProv:    on
Version:        0.11
Release:        1
Summary:        (rd-)qa internal package for training
Url:            http://www.novell.com/
Source0:        %name-%version.tar.bz2
Source1:        %name.tcf
Source2:        test_sample-run
Source3:	%name.8
BuildRoot:      %{_tmppath}/%{name}-%{version}-build
Requires:       ctcs2 
BuildRequires:  ctcs2

%description

%prep
%setup -q -n %{name}

%install
install -m 755 -d $RPM_BUILD_ROOT/usr/share/qa/tcf
install -m 755 -d $RPM_BUILD_ROOT/usr/share/qa/tools
install -m 755 -d $RPM_BUILD_ROOT/usr/share/qa/%name
install -m 755 -d $RPM_BUILD_ROOT/usr/share/qa/%name/tcf
install -m 755 -d $RPM_BUILD_ROOT/usr/share/man/man8
install -m 644 %{S:1} $RPM_BUILD_ROOT/usr/share/qa/%name/tcf
install -m 755 %{S:2} $RPM_BUILD_ROOT/usr/share/qa/tools
install -m 644 %{S:3} $RPM_BUILD_ROOT/usr/share/man/man8
gzip $RPM_BUILD_ROOT/usr/share/man/man8/%{name}.8
cp -a * $RPM_BUILD_ROOT/usr/share/qa/%name
ln -s ../%name/tcf/%name.tcf $RPM_BUILD_ROOT/usr/share/qa/tcf/
find $RPM_BUILD_ROOT/usr/share/qa/%name -depth -type d -name CVS -exec rm -rf {} \;

%clean
rm -rf $RPM_BUILD_ROOT

%files
%defattr(-,root,root)   
/usr/share/qa/%name
/usr/share/qa/tcf/%{name}.tcf
/usr/share/qa/tools/*
/usr/share/man/man8/*
%doc COPYING

%changelog

eof
}

#set the one_line value
function line_modify()
{
	line_tag=$1
	line_tag_value=$2
	sed -i "/^$1:/{s/:.*$/: $2/}" $spec_name
}

#add new line to the section
function section_append()
{
	section_tag=$1
	section_tag_value=$2
	sed -i "/^%$section_tag\$/{:a;N;/\\n\$/!ba;s#$""#$section_tag_value\\n#}" $spec_name

}
spec_name=
author_name="Put your name here"
description="No description"
email="nobody@novell.com"
#check the argument
if [ $# == 0 ];then
	echo Missing argument
	Usage
	exit 2
fi
if [ -z "`echo $1|grep '^qa_test'`" ];then
	echo "The argument name should start with qa_test "
	Usage
	exit 2
fi

#argument is dir :
if [ -d "$1" ];then
	dirname=$1
	dirname=${dirname%/}
	tcf_name=$dirname.tcf
	run_name=${dirname:3}"-run"
	spec_name=$dirname.spec
        manfile=$dirname.8
else
	echo "$1 is not a directory/tar.bz2 "
	Usage
	exit 2
fi
if [ ! -f $tcf_name -o ! -f $run_name -o ! -f $manfile ];then
	echo "Missing $tcf_name and/or $run_name/$manfile"
	exit 2
fi
#get opt form command line
shift
while getopts :d:a:e:l:v: opts
do
	case $opts in
		d)	description=$OPTARG
		;;
		a)	author_name=$OPTARG
		;;
		e)	email=$OPTARG
		;;
		l)	changelog_value=$OPTARG
		;;
		h)	Usage
			exit 2
		;;
		v)	version=${version:-$OPTARG}
		;;
		?)	Usage
			exit 2
		;;
	esac
done
version=${version:-0.1}

echo "Generating file $spec_name"
#generate a template
gen_template > $spec_name

#modify the one line value
line_modify Name "          $dirname"
line_modify Version "       $version"
line_modify Source2 "       $run_name"
line_modify Summary "       $dirname"
#append the value to section

#update the date;
changelog_date=`date +"* %a %b %d %Y - $email"`
changelog_value=${changelog_value:-"Package (v.$version) created automatically using qa_sdk_spec_generator"}
section_append changelog "$changelog_date"
section_append changelog "- $changelog_value"

#modify author
section_append description "    Author : $author_name"


#modify description
section_append description "$description"
section_append files "/usr/share/qa/tools/$run_name"

#change the header info 
sed -i "s/# spec file for package qa_test_sample/# spec file for package $dirname/" $spec_name
echo "Generated spec file successfully"

