#! /bin/bash

# Initialize some default variables
RESULTS_DIR=results
TESTS_DIR=./testsuites/
PYBOT_BIN=pybot
SUITE_NAME="QA_Automation_Tools"
CUSTOM_CONFIG=config.robot
ROBOT_ARGS=''

# Go to working directory. All paths used in the script are relative
# to that directory.
MY_NAME=`basename $0`
cd `dirname $0`

# Call me like: help EXIT_CODE
function help () {
    echo "$MY_NAME -- QA Automation dumb test executor";
    echo -e "Usage: $MY_NAME [OPTIONS] COMMAND\n";
    echo -e "COMMANDS"
    echo -e "\trun\texecutes all tests in testsuite";
    echo -e "\thelp\t(or no option) print this help";
    echo;
    echo -e "OPTIONS";
    echo -e "\t-c FILE\tCustom Robot Framework configuration, defaults to config.robot";
    echo -e "\t-m HOST\tHamsta master hostname, defaults to localhost";
    echo -e "\t-r DIR\tdirectory to store results to (run action), defaults to '${PWD}/results'";
    echo -e "\t-t DIR\tdirectory containing tests (run action), defaults to '${TESTS_DIR}'";
    echo -e "\t-a PARAMS\tparameters to pass directly to pybot, you have to quote it: -a '-e tag'";
    echo -e "\nContact us on <qa-automation@suse.de>.";
    exit $1;
}

# Process command line arguments
while getopts "c:hm:r:t:a:" opt; do
    case $opt in
        'c') export CUSTOM_CONFIG=${OPTARG};;
        'm') export HAMSTA_TEST_HOST=${OPTARG};;
        'r') export RESULTS_DIR=${OPTARG};;
        't') export TESTS_DIR=${OPTARG};;
		'a') export ROBOT_ARGS=${OPTARG};;
        'h') help 0;;
    esac
done

export ROBOT_OPTIONS="${ROBOT_OPTIONS} --name ${SUITE_NAME} --variable CONFIG_FILE:$CUSTOM_CONFIG --outputdir ${RESULTS_DIR} ${ROBOT_ARGS}"

echo "Results will be saved to ${RESULTS_DIR}."

if [ ! -d ${RESULTS_DIR} ]; then
    mkdir ${RESULTS_DIR};
fi

if [ -n "${HAMSTA_TEST_HOST}" ]; then
    ROBOT_OPTIONS="${ROBOT_OPTIONS} --variable HAMSTA_HOST:$HAMSTA_TEST_HOST"
fi

ROBOT_CMD="$PYBOT_BIN ${TESTS_DIR}"
echo $ROBOT_OPTIONS
$ROBOT_CMD
